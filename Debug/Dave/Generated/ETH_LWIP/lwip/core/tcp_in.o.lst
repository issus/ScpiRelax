   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "tcp_in.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .bss.inseg,"aw",%nobits
  20              	 .align 2
  23              	inseg:
  24 0000 00000000 	 .space 16
  24      00000000 
  24      00000000 
  24      00000000 
  25              	 .section .bss.tcphdr,"aw",%nobits
  26              	 .align 2
  29              	tcphdr:
  30 0000 00000000 	 .space 4
  31              	 .section .bss.tcphdr_optlen,"aw",%nobits
  32              	 .align 1
  35              	tcphdr_optlen:
  36 0000 0000     	 .space 2
  37              	 .section .bss.tcphdr_opt1len,"aw",%nobits
  38              	 .align 1
  41              	tcphdr_opt1len:
  42 0000 0000     	 .space 2
  43              	 .section .bss.tcphdr_opt2,"aw",%nobits
  44              	 .align 2
  47              	tcphdr_opt2:
  48 0000 00000000 	 .space 4
  49              	 .section .bss.tcp_optidx,"aw",%nobits
  50              	 .align 1
  53              	tcp_optidx:
  54 0000 0000     	 .space 2
  55              	 .section .bss.seqno,"aw",%nobits
  56              	 .align 2
  59              	seqno:
  60 0000 00000000 	 .space 4
  61              	 .section .bss.ackno,"aw",%nobits
  62              	 .align 2
  65              	ackno:
  66 0000 00000000 	 .space 4
  67              	 .section .bss.recv_acked,"aw",%nobits
  68              	 .align 1
  71              	recv_acked:
  72 0000 0000     	 .space 2
  73              	 .section .bss.tcplen,"aw",%nobits
  74              	 .align 1
  77              	tcplen:
  78 0000 0000     	 .space 2
  79              	 .section .bss.flags,"aw",%nobits
  82              	flags:
  83 0000 00       	 .space 1
  84              	 .section .bss.recv_flags,"aw",%nobits
  87              	recv_flags:
  88 0000 00       	 .space 1
  89              	 .section .bss.recv_data,"aw",%nobits
  90              	 .align 2
  93              	recv_data:
  94 0000 00000000 	 .space 4
  95              	 .comm tcp_input_pcb,4,4
  96              	 .section .text.tcp_input,"ax",%progbits
  97              	 .align 2
  98              	 .global tcp_input
  99              	 .thumb
 100              	 .thumb_func
 102              	tcp_input:
 103              	.LFB133:
 104              	 .file 1 "../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c"
   1:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** /**
   2:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * @file
   3:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * Transmission Control Protocol, incoming traffic
   4:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
   5:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * The input processing functions of the TCP layer.
   6:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
   7:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * These functions are generally called in the order (ip_input() ->)
   8:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * tcp_input() -> * tcp_process() -> tcp_receive() (-> application).
   9:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
  10:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  */
  11:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
  12:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** /*
  13:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
  14:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * All rights reserved.
  15:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
  16:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * Redistribution and use in source and binary forms, with or without modification,
  17:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * are permitted provided that the following conditions are met:
  18:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
  19:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  20:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *    this list of conditions and the following disclaimer.
  21:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *    this list of conditions and the following disclaimer in the documentation
  23:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *    and/or other materials provided with the distribution.
  24:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * 3. The name of the author may not be used to endorse or promote products
  25:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *    derived from this software without specific prior written permission.
  26:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
  27:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
  28:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  29:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
  30:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  31:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
  32:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  33:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  34:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
  35:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  36:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * OF SUCH DAMAGE.
  37:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
  38:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * This file is part of the lwIP TCP/IP stack.
  39:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
  40:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * Author: Adam Dunkels <adam@sics.se>
  41:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
  42:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  */
  43:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
  44:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #include "ETH_LWIP/lwip/include/lwip/opt.h"
  45:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
  46:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_TCP /* don't build if not configured for use in lwipopts.h */
  47:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
  48:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #include "ETH_LWIP/lwip/include/lwip/priv/tcp_priv.h"
  49:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #include "ETH_LWIP/lwip/include/lwip/def.h"
  50:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #include "ETH_LWIP/lwip/include/lwip/ip_addr.h"
  51:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #include "ETH_LWIP/lwip/include/lwip/netif.h"
  52:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #include "ETH_LWIP/lwip/include/lwip/mem.h"
  53:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #include "ETH_LWIP/lwip/include/lwip/memp.h"
  54:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #include "ETH_LWIP/lwip/include/lwip/inet_chksum.h"
  55:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #include "ETH_LWIP/lwip/include/lwip/stats.h"
  56:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #include "ETH_LWIP/lwip/include/lwip/ip6.h"
  57:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #include "ETH_LWIP/lwip/include/lwip/ip6_addr.h"
  58:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_ND6_TCP_REACHABILITY_HINTS
  59:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #include "ETH_LWIP/lwip/include/lwip/nd6.h"
  60:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* LWIP_ND6_TCP_REACHABILITY_HINTS */
  61:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
  62:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #include <string.h>
  63:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
  64:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #ifdef LWIP_HOOK_FILENAME
  65:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #include LWIP_HOOK_FILENAME
  66:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif
  67:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
  68:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** /** Initial CWND calculation as defined RFC 2581 */
  69:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #define LWIP_TCP_CALC_INITIAL_CWND(mss) ((tcpwnd_size_t)LWIP_MIN((4U * (mss)), LWIP_MAX((2U * (mss)
  70:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
  71:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** /* These variables are global to all functions involved in the input
  72:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****    processing of TCP segments. They are set by the tcp_input()
  73:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****    function. */
  74:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static struct tcp_seg inseg;
  75:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static struct tcp_hdr *tcphdr;
  76:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static u16_t tcphdr_optlen;
  77:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static u16_t tcphdr_opt1len;
  78:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static u8_t *tcphdr_opt2;
  79:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static u16_t tcp_optidx;
  80:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static u32_t seqno, ackno;
  81:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static tcpwnd_size_t recv_acked;
  82:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static u16_t tcplen;
  83:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static u8_t flags;
  84:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
  85:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static u8_t recv_flags;
  86:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static struct pbuf *recv_data;
  87:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
  88:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** struct tcp_pcb *tcp_input_pcb;
  89:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
  90:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** /* Forward declarations. */
  91:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static err_t tcp_process(struct tcp_pcb *pcb);
  92:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static void tcp_receive(struct tcp_pcb *pcb);
  93:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static void tcp_parseopt(struct tcp_pcb *pcb);
  94:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
  95:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static void tcp_listen_input(struct tcp_pcb_listen *pcb);
  96:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static void tcp_timewait_input(struct tcp_pcb *pcb);
  97:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
  98:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static int tcp_input_delayed_close(struct tcp_pcb *pcb);
  99:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 100:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_TCP_SACK_OUT
 101:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static void tcp_add_sack(struct tcp_pcb *pcb, u32_t left, u32_t right);
 102:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static void tcp_remove_sacks_lt(struct tcp_pcb *pcb, u32_t seq);
 103:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if defined(TCP_OOSEQ_BYTES_LIMIT) || defined(TCP_OOSEQ_PBUFS_LIMIT)
 104:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static void tcp_remove_sacks_gt(struct tcp_pcb *pcb, u32_t seq);
 105:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_OOSEQ_BYTES_LIMIT || TCP_OOSEQ_PBUFS_LIMIT */
 106:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* LWIP_TCP_SACK_OUT */
 107:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 108:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** /**
 109:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * The initial input processing of TCP. It verifies the TCP header, demultiplexes
 110:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * the segment between the PCBs and passes it on to tcp_process(), which implements
 111:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * the TCP finite state machine. This function is called by the IP layer (in
 112:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * ip_input()).
 113:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
 114:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * @param p received TCP segment to process (p->payload pointing to the TCP header)
 115:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * @param inp network interface on which this segment was received
 116:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  */
 117:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** void
 118:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** tcp_input(struct pbuf *p, struct netif *inp)
 119:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** {
 105              	 .loc 1 119 0
 106              	 .cfi_startproc
 107              	 
 108              	 
 109 0000 B0B5     	 push {r4,r5,r7,lr}
 110              	.LCFI0:
 111              	 .cfi_def_cfa_offset 16
 112              	 .cfi_offset 4,-16
 113              	 .cfi_offset 5,-12
 114              	 .cfi_offset 7,-8
 115              	 .cfi_offset 14,-4
 116 0002 8CB0     	 sub sp,sp,#48
 117              	.LCFI1:
 118              	 .cfi_def_cfa_offset 64
 119 0004 04AF     	 add r7,sp,#16
 120              	.LCFI2:
 121              	 .cfi_def_cfa 7,48
 122 0006 7860     	 str r0,[r7,#4]
 123 0008 3960     	 str r1,[r7]
 120:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   struct tcp_pcb *pcb, *prev;
 121:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   struct tcp_pcb_listen *lpcb;
 122:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if SO_REUSE
 123:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   struct tcp_pcb *lpcb_prev = NULL;
 124:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   struct tcp_pcb_listen *lpcb_any = NULL;
 125:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* SO_REUSE */
 126:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   u8_t hdrlen_bytes;
 127:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   err_t err;
 128:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 129:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   LWIP_UNUSED_ARG(inp);
 130:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   LWIP_ASSERT_CORE_LOCKED();
 131:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   LWIP_ASSERT("tcp_input: invalid pbuf", p != NULL);
 132:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 133:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   PERF_START;
 134:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 135:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   TCP_STATS_INC(tcp.recv);
 136:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   MIB2_STATS_INC(mib2.tcpinsegs);
 137:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 138:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   tcphdr = (struct tcp_hdr *)p->payload;
 124              	 .loc 1 138 0
 125 000a 7B68     	 ldr r3,[r7,#4]
 126 000c 5B68     	 ldr r3,[r3,#4]
 127 000e 954A     	 ldr r2,.L56
 128 0010 1360     	 str r3,[r2]
 139:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 140:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_INPUT_DEBUG
 141:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   tcp_debug_print(tcphdr);
 142:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif
 143:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 144:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   /* Check that TCP header fits in payload */
 145:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if (p->len < TCP_HLEN) {
 129              	 .loc 1 145 0
 130 0012 7B68     	 ldr r3,[r7,#4]
 131 0014 5B89     	 ldrh r3,[r3,#10]
 132 0016 132B     	 cmp r3,#19
 133 0018 00D8     	 bhi .L2
 146:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* drop short packets */
 147:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_input: short packet (%"U16_F" bytes) discarded\n", p->tot_le
 148:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     TCP_STATS_INC(tcp.lenerr);
 149:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     goto dropped;
 134              	 .loc 1 149 0
 135 001a 32E3     	 b .L3
 136              	.L2:
 150:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 151:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 152:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   /* Don't even process incoming broadcasts/multicasts. */
 153:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if (ip_addr_isbroadcast(ip_current_dest_addr(), ip_current_netif()) ||
 137              	 .loc 1 153 0
 138 001c 924B     	 ldr r3,.L56+4
 139 001e 5A69     	 ldr r2,[r3,#20]
 140 0020 914B     	 ldr r3,.L56+4
 141 0022 1B68     	 ldr r3,[r3]
 142 0024 1046     	 mov r0,r2
 143 0026 1946     	 mov r1,r3
 144 0028 FFF7FEFF 	 bl ip4_addr_isbroadcast_u32
 145 002c 0346     	 mov r3,r0
 146 002e 002B     	 cmp r3,#0
 147 0030 40F02783 	 bne .L3
 154:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       ip_addr_ismulticast(ip_current_dest_addr())) {
 148              	 .loc 1 154 0 discriminator 1
 149 0034 8C4B     	 ldr r3,.L56+4
 150 0036 5B69     	 ldr r3,[r3,#20]
 151 0038 03F0F003 	 and r3,r3,#240
 153:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       ip_addr_ismulticast(ip_current_dest_addr())) {
 152              	 .loc 1 153 0 discriminator 1
 153 003c E02B     	 cmp r3,#224
 154 003e 00F02083 	 beq .L3
 155:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     TCP_STATS_INC(tcp.proterr);
 156:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     goto dropped;
 157:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 158:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 159:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if CHECKSUM_CHECK_TCP
 160:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   IF__NETIF_CHECKSUM_ENABLED(inp, NETIF_CHECKSUM_CHECK_TCP) {
 161:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* Verify TCP checksum. */
 162:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     u16_t chksum = ip_chksum_pseudo(p, IP_PROTO_TCP, p->tot_len,
 163:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                     ip_current_src_addr(), ip_current_dest_addr());
 164:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (chksum != 0) {
 165:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_input: packet discarded due to failing checksum 0x%04"X16_
 166:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                     chksum));
 167:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       tcp_debug_print(tcphdr);
 168:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       TCP_STATS_INC(tcp.chkerr);
 169:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       goto dropped;
 170:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 171:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 172:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* CHECKSUM_CHECK_TCP */
 173:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 174:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   /* sanity-check header length */
 175:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   hdrlen_bytes = TCPH_HDRLEN_BYTES(tcphdr);
 155              	 .loc 1 175 0
 156 0042 884B     	 ldr r3,.L56
 157 0044 1B68     	 ldr r3,[r3]
 158 0046 9B89     	 ldrh r3,[r3,#12]
 159 0048 9BB2     	 uxth r3,r3
 160 004a 1846     	 mov r0,r3
 161 004c FFF7FEFF 	 bl lwip_htons
 162 0050 0346     	 mov r3,r0
 163 0052 1B0B     	 lsrs r3,r3,#12
 164 0054 9BB2     	 uxth r3,r3
 165 0056 DBB2     	 uxtb r3,r3
 166 0058 9B00     	 lsls r3,r3,#2
 167 005a BB74     	 strb r3,[r7,#18]
 176:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if ((hdrlen_bytes < TCP_HLEN) || (hdrlen_bytes > p->tot_len)) {
 168              	 .loc 1 176 0
 169 005c BB7C     	 ldrb r3,[r7,#18]
 170 005e 132B     	 cmp r3,#19
 171 0060 40F20F83 	 bls .L3
 172              	 .loc 1 176 0 is_stmt 0 discriminator 1
 173 0064 BB7C     	 ldrb r3,[r7,#18]
 174 0066 9AB2     	 uxth r2,r3
 175 0068 7B68     	 ldr r3,[r7,#4]
 176 006a 1B89     	 ldrh r3,[r3,#8]
 177 006c 9A42     	 cmp r2,r3
 178 006e 00F20883 	 bhi .L3
 177:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_input: invalid header length (%"U16_F")\n", (u16_t)hdrlen_by
 178:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     TCP_STATS_INC(tcp.lenerr);
 179:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     goto dropped;
 180:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 181:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 182:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   /* Move the payload pointer in the pbuf so that it points to the
 183:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      TCP data instead of the TCP header. */
 184:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   tcphdr_optlen = (u16_t)(hdrlen_bytes - TCP_HLEN);
 179              	 .loc 1 184 0 is_stmt 1
 180 0072 BB7C     	 ldrb r3,[r7,#18]
 181 0074 9BB2     	 uxth r3,r3
 182 0076 143B     	 subs r3,r3,#20
 183 0078 9AB2     	 uxth r2,r3
 184 007a 7C4B     	 ldr r3,.L56+8
 185 007c 1A80     	 strh r2,[r3]
 185:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   tcphdr_opt2 = NULL;
 186              	 .loc 1 185 0
 187 007e 7C4B     	 ldr r3,.L56+12
 188 0080 0022     	 movs r2,#0
 189 0082 1A60     	 str r2,[r3]
 186:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if (p->len >= hdrlen_bytes) {
 190              	 .loc 1 186 0
 191 0084 7B68     	 ldr r3,[r7,#4]
 192 0086 5A89     	 ldrh r2,[r3,#10]
 193 0088 BB7C     	 ldrb r3,[r7,#18]
 194 008a 9BB2     	 uxth r3,r3
 195 008c 9A42     	 cmp r2,r3
 196 008e 09D3     	 bcc .L4
 187:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* all options are in the first pbuf */
 188:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     tcphdr_opt1len = tcphdr_optlen;
 197              	 .loc 1 188 0
 198 0090 764B     	 ldr r3,.L56+8
 199 0092 1A88     	 ldrh r2,[r3]
 200 0094 774B     	 ldr r3,.L56+16
 201 0096 1A80     	 strh r2,[r3]
 189:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     pbuf_remove_header(p, hdrlen_bytes); /* cannot fail */
 202              	 .loc 1 189 0
 203 0098 BB7C     	 ldrb r3,[r7,#18]
 204 009a 7868     	 ldr r0,[r7,#4]
 205 009c 1946     	 mov r1,r3
 206 009e FFF7FEFF 	 bl pbuf_remove_header
 207 00a2 2DE0     	 b .L5
 208              	.L4:
 209              	.LBB2:
 190:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   } else {
 191:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     u16_t opt2len;
 192:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* TCP header fits into first pbuf, options don't - data is in the next pbuf */
 193:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* there must be a next pbuf, due to hdrlen_bytes sanity check above */
 194:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     LWIP_ASSERT("p->next != NULL", p->next != NULL);
 195:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 196:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* advance over the TCP header (cannot fail) */
 197:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     pbuf_remove_header(p, TCP_HLEN);
 210              	 .loc 1 197 0
 211 00a4 7868     	 ldr r0,[r7,#4]
 212 00a6 1421     	 movs r1,#20
 213 00a8 FFF7FEFF 	 bl pbuf_remove_header
 198:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 199:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* determine how long the first and second parts of the options are */
 200:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     tcphdr_opt1len = p->len;
 214              	 .loc 1 200 0
 215 00ac 7B68     	 ldr r3,[r7,#4]
 216 00ae 5A89     	 ldrh r2,[r3,#10]
 217 00b0 704B     	 ldr r3,.L56+16
 218 00b2 1A80     	 strh r2,[r3]
 201:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     opt2len = (u16_t)(tcphdr_optlen - tcphdr_opt1len);
 219              	 .loc 1 201 0
 220 00b4 6D4B     	 ldr r3,.L56+8
 221 00b6 1A88     	 ldrh r2,[r3]
 222 00b8 6E4B     	 ldr r3,.L56+16
 223 00ba 1B88     	 ldrh r3,[r3]
 224 00bc D31A     	 subs r3,r2,r3
 225 00be 3B82     	 strh r3,[r7,#16]
 202:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 203:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* options continue in the next pbuf: set p to zero length and hide the
 204:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         options in the next pbuf (adjusting p->tot_len) */
 205:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     pbuf_remove_header(p, tcphdr_opt1len);
 226              	 .loc 1 205 0
 227 00c0 6C4B     	 ldr r3,.L56+16
 228 00c2 1B88     	 ldrh r3,[r3]
 229 00c4 7868     	 ldr r0,[r7,#4]
 230 00c6 1946     	 mov r1,r3
 231 00c8 FFF7FEFF 	 bl pbuf_remove_header
 206:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 207:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* check that the options fit in the second pbuf */
 208:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (opt2len > p->next->len) {
 232              	 .loc 1 208 0
 233 00cc 7B68     	 ldr r3,[r7,#4]
 234 00ce 1B68     	 ldr r3,[r3]
 235 00d0 5B89     	 ldrh r3,[r3,#10]
 236 00d2 3A8A     	 ldrh r2,[r7,#16]
 237 00d4 9A42     	 cmp r2,r3
 238 00d6 00D9     	 bls .L6
 209:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* drop short packets */
 210:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_input: options overflow second pbuf (%"U16_F" bytes)\n", p
 211:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       TCP_STATS_INC(tcp.lenerr);
 212:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       goto dropped;
 239              	 .loc 1 212 0
 240 00d8 D3E2     	 b .L3
 241              	.L6:
 213:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 214:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 215:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* remember the pointer to the second part of the options */
 216:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     tcphdr_opt2 = (u8_t *)p->next->payload;
 242              	 .loc 1 216 0
 243 00da 7B68     	 ldr r3,[r7,#4]
 244 00dc 1B68     	 ldr r3,[r3]
 245 00de 5B68     	 ldr r3,[r3,#4]
 246 00e0 634A     	 ldr r2,.L56+12
 247 00e2 1360     	 str r3,[r2]
 217:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 218:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* advance p->next to point after the options, and manually
 219:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         adjust p->tot_len to keep it consistent with the changed p->next */
 220:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     pbuf_remove_header(p->next, opt2len);
 248              	 .loc 1 220 0
 249 00e4 7B68     	 ldr r3,[r7,#4]
 250 00e6 1A68     	 ldr r2,[r3]
 251 00e8 3B8A     	 ldrh r3,[r7,#16]
 252 00ea 1046     	 mov r0,r2
 253 00ec 1946     	 mov r1,r3
 254 00ee FFF7FEFF 	 bl pbuf_remove_header
 221:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     p->tot_len = (u16_t)(p->tot_len - opt2len);
 255              	 .loc 1 221 0
 256 00f2 7B68     	 ldr r3,[r7,#4]
 257 00f4 1A89     	 ldrh r2,[r3,#8]
 258 00f6 3B8A     	 ldrh r3,[r7,#16]
 259 00f8 D31A     	 subs r3,r2,r3
 260 00fa 9AB2     	 uxth r2,r3
 261 00fc 7B68     	 ldr r3,[r7,#4]
 262 00fe 1A81     	 strh r2,[r3,#8]
 263              	.L5:
 264              	.LBE2:
 222:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 223:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     LWIP_ASSERT("p->len == 0", p->len == 0);
 224:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     LWIP_ASSERT("p->tot_len == p->next->tot_len", p->tot_len == p->next->tot_len);
 225:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 226:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 227:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   /* Convert fields in TCP header to host byte order. */
 228:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   tcphdr->src = lwip_ntohs(tcphdr->src);
 265              	 .loc 1 228 0
 266 0100 584B     	 ldr r3,.L56
 267 0102 1C68     	 ldr r4,[r3]
 268 0104 574B     	 ldr r3,.L56
 269 0106 1B68     	 ldr r3,[r3]
 270 0108 1B88     	 ldrh r3,[r3]
 271 010a 9BB2     	 uxth r3,r3
 272 010c 1846     	 mov r0,r3
 273 010e FFF7FEFF 	 bl lwip_htons
 274 0112 0346     	 mov r3,r0
 275 0114 2380     	 strh r3,[r4]
 229:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   tcphdr->dest = lwip_ntohs(tcphdr->dest);
 276              	 .loc 1 229 0
 277 0116 534B     	 ldr r3,.L56
 278 0118 1C68     	 ldr r4,[r3]
 279 011a 524B     	 ldr r3,.L56
 280 011c 1B68     	 ldr r3,[r3]
 281 011e 5B88     	 ldrh r3,[r3,#2]
 282 0120 9BB2     	 uxth r3,r3
 283 0122 1846     	 mov r0,r3
 284 0124 FFF7FEFF 	 bl lwip_htons
 285 0128 0346     	 mov r3,r0
 286 012a 6380     	 strh r3,[r4,#2]
 230:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   seqno = tcphdr->seqno = lwip_ntohl(tcphdr->seqno);
 287              	 .loc 1 230 0
 288 012c 4D4B     	 ldr r3,.L56
 289 012e 1C68     	 ldr r4,[r3]
 290 0130 4C4B     	 ldr r3,.L56
 291 0132 1B68     	 ldr r3,[r3]
 292 0134 5B68     	 ldr r3,[r3,#4]
 293 0136 1846     	 mov r0,r3
 294 0138 FFF7FEFF 	 bl lwip_htonl
 295 013c 0346     	 mov r3,r0
 296 013e 6360     	 str r3,[r4,#4]
 297 0140 6368     	 ldr r3,[r4,#4]
 298 0142 4D4A     	 ldr r2,.L56+20
 299 0144 1360     	 str r3,[r2]
 231:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   ackno = tcphdr->ackno = lwip_ntohl(tcphdr->ackno);
 300              	 .loc 1 231 0
 301 0146 474B     	 ldr r3,.L56
 302 0148 1C68     	 ldr r4,[r3]
 303 014a 464B     	 ldr r3,.L56
 304 014c 1B68     	 ldr r3,[r3]
 305 014e 9B68     	 ldr r3,[r3,#8]
 306 0150 1846     	 mov r0,r3
 307 0152 FFF7FEFF 	 bl lwip_htonl
 308 0156 0346     	 mov r3,r0
 309 0158 A360     	 str r3,[r4,#8]
 310 015a A368     	 ldr r3,[r4,#8]
 311 015c 474A     	 ldr r2,.L56+24
 312 015e 1360     	 str r3,[r2]
 232:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   tcphdr->wnd = lwip_ntohs(tcphdr->wnd);
 313              	 .loc 1 232 0
 314 0160 404B     	 ldr r3,.L56
 315 0162 1C68     	 ldr r4,[r3]
 316 0164 3F4B     	 ldr r3,.L56
 317 0166 1B68     	 ldr r3,[r3]
 318 0168 DB89     	 ldrh r3,[r3,#14]
 319 016a 9BB2     	 uxth r3,r3
 320 016c 1846     	 mov r0,r3
 321 016e FFF7FEFF 	 bl lwip_htons
 322 0172 0346     	 mov r3,r0
 323 0174 E381     	 strh r3,[r4,#14]
 233:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 234:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   flags = TCPH_FLAGS(tcphdr);
 324              	 .loc 1 234 0
 325 0176 3B4B     	 ldr r3,.L56
 326 0178 1B68     	 ldr r3,[r3]
 327 017a 9B89     	 ldrh r3,[r3,#12]
 328 017c 9BB2     	 uxth r3,r3
 329 017e 1846     	 mov r0,r3
 330 0180 FFF7FEFF 	 bl lwip_htons
 331 0184 0346     	 mov r3,r0
 332 0186 DBB2     	 uxtb r3,r3
 333 0188 03F03F03 	 and r3,r3,#63
 334 018c DAB2     	 uxtb r2,r3
 335 018e 3C4B     	 ldr r3,.L56+28
 336 0190 1A70     	 strb r2,[r3]
 235:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   tcplen = p->tot_len;
 337              	 .loc 1 235 0
 338 0192 7B68     	 ldr r3,[r7,#4]
 339 0194 1A89     	 ldrh r2,[r3,#8]
 340 0196 3B4B     	 ldr r3,.L56+32
 341 0198 1A80     	 strh r2,[r3]
 236:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if (flags & (TCP_FIN | TCP_SYN)) {
 342              	 .loc 1 236 0
 343 019a 394B     	 ldr r3,.L56+28
 344 019c 1B78     	 ldrb r3,[r3]
 345 019e 03F00303 	 and r3,r3,#3
 346 01a2 002B     	 cmp r3,#0
 347 01a4 0CD0     	 beq .L7
 237:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     tcplen++;
 348              	 .loc 1 237 0
 349 01a6 374B     	 ldr r3,.L56+32
 350 01a8 1B88     	 ldrh r3,[r3]
 351 01aa 0133     	 adds r3,r3,#1
 352 01ac 9AB2     	 uxth r2,r3
 353 01ae 354B     	 ldr r3,.L56+32
 354 01b0 1A80     	 strh r2,[r3]
 238:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (tcplen < p->tot_len) {
 355              	 .loc 1 238 0
 356 01b2 7B68     	 ldr r3,[r7,#4]
 357 01b4 1A89     	 ldrh r2,[r3,#8]
 358 01b6 334B     	 ldr r3,.L56+32
 359 01b8 1B88     	 ldrh r3,[r3]
 360 01ba 9A42     	 cmp r2,r3
 361 01bc 00D9     	 bls .L7
 239:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* u16_t overflow, cannot handle this */
 240:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_input: length u16_t overflow, cannot handle this\n"));
 241:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       TCP_STATS_INC(tcp.lenerr);
 242:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       goto dropped;
 362              	 .loc 1 242 0
 363 01be 60E2     	 b .L3
 364              	.L7:
 243:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 244:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 245:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 246:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   /* Demultiplex an incoming segment. First, we check if it is destined
 247:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      for an active connection. */
 248:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   prev = NULL;
 365              	 .loc 1 248 0
 366 01c0 0023     	 movs r3,#0
 367 01c2 BB61     	 str r3,[r7,#24]
 249:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 250:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   for (pcb = tcp_active_pcbs; pcb != NULL; pcb = pcb->next) {
 368              	 .loc 1 250 0
 369 01c4 304B     	 ldr r3,.L56+36
 370 01c6 1B68     	 ldr r3,[r3]
 371 01c8 FB61     	 str r3,[r7,#28]
 372 01ca 40E0     	 b .L8
 373              	.L14:
 251:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     LWIP_ASSERT("tcp_input: active pcb->state != CLOSED", pcb->state != CLOSED);
 252:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     LWIP_ASSERT("tcp_input: active pcb->state != TIME-WAIT", pcb->state != TIME_WAIT);
 253:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     LWIP_ASSERT("tcp_input: active pcb->state != LISTEN", pcb->state != LISTEN);
 254:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 255:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* check if PCB is bound to specific netif */
 256:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if ((pcb->netif_idx != NETIF_NO_INDEX) &&
 374              	 .loc 1 256 0
 375 01cc FB69     	 ldr r3,[r7,#28]
 376 01ce 1B7A     	 ldrb r3,[r3,#8]
 377 01d0 002B     	 cmp r3,#0
 378 01d2 0CD0     	 beq .L9
 257:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         (pcb->netif_idx != netif_get_index(ip_data.current_input_netif))) {
 379              	 .loc 1 257 0 discriminator 1
 380 01d4 FB69     	 ldr r3,[r7,#28]
 381 01d6 1A7A     	 ldrb r2,[r3,#8]
 382 01d8 234B     	 ldr r3,.L56+4
 383 01da 5B68     	 ldr r3,[r3,#4]
 384 01dc 93F83030 	 ldrb r3,[r3,#48]
 385 01e0 0133     	 adds r3,r3,#1
 386 01e2 DBB2     	 uxtb r3,r3
 256:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         (pcb->netif_idx != netif_get_index(ip_data.current_input_netif))) {
 387              	 .loc 1 256 0 discriminator 1
 388 01e4 9A42     	 cmp r2,r3
 389 01e6 02D0     	 beq .L9
 258:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       prev = pcb;
 390              	 .loc 1 258 0
 391 01e8 FB69     	 ldr r3,[r7,#28]
 392 01ea BB61     	 str r3,[r7,#24]
 259:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       continue;
 393              	 .loc 1 259 0
 394 01ec 2CE0     	 b .L10
 395              	.L9:
 260:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 261:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 262:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (pcb->remote_port == tcphdr->src &&
 396              	 .loc 1 262 0
 397 01ee FB69     	 ldr r3,[r7,#28]
 398 01f0 1A8B     	 ldrh r2,[r3,#24]
 399 01f2 1C4B     	 ldr r3,.L56
 400 01f4 1B68     	 ldr r3,[r3]
 401 01f6 1B88     	 ldrh r3,[r3]
 402 01f8 9BB2     	 uxth r3,r3
 403 01fa 9A42     	 cmp r2,r3
 404 01fc 22D1     	 bne .L11
 263:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->local_port == tcphdr->dest &&
 405              	 .loc 1 263 0 discriminator 1
 406 01fe FB69     	 ldr r3,[r7,#28]
 407 0200 DA8A     	 ldrh r2,[r3,#22]
 408 0202 184B     	 ldr r3,.L56
 409 0204 1B68     	 ldr r3,[r3]
 410 0206 5B88     	 ldrh r3,[r3,#2]
 411 0208 9BB2     	 uxth r3,r3
 262:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->local_port == tcphdr->dest &&
 412              	 .loc 1 262 0 discriminator 1
 413 020a 9A42     	 cmp r2,r3
 414 020c 1AD1     	 bne .L11
 264:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         ip_addr_cmp(&pcb->remote_ip, ip_current_src_addr()) &&
 415              	 .loc 1 264 0
 416 020e FB69     	 ldr r3,[r7,#28]
 417 0210 5A68     	 ldr r2,[r3,#4]
 418 0212 154B     	 ldr r3,.L56+4
 419 0214 1B69     	 ldr r3,[r3,#16]
 263:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->local_port == tcphdr->dest &&
 420              	 .loc 1 263 0
 421 0216 9A42     	 cmp r2,r3
 422 0218 14D1     	 bne .L11
 265:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         ip_addr_cmp(&pcb->local_ip, ip_current_dest_addr())) {
 423              	 .loc 1 265 0
 424 021a FB69     	 ldr r3,[r7,#28]
 425 021c 1A68     	 ldr r2,[r3]
 426 021e 124B     	 ldr r3,.L56+4
 427 0220 5B69     	 ldr r3,[r3,#20]
 264:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         ip_addr_cmp(&pcb->remote_ip, ip_current_src_addr()) &&
 428              	 .loc 1 264 0
 429 0222 9A42     	 cmp r2,r3
 430 0224 0ED1     	 bne .L11
 266:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* Move this PCB to the front of the list so that subsequent
 267:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          lookups will be faster (we exploit locality in TCP segment
 268:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          arrivals). */
 269:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_ASSERT("tcp_input: pcb->next != pcb (before cache)", pcb->next != pcb);
 270:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (prev != NULL) {
 431              	 .loc 1 270 0
 432 0226 BB69     	 ldr r3,[r7,#24]
 433 0228 002B     	 cmp r3,#0
 434 022a 0AD0     	 beq .L12
 271:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         prev->next = pcb->next;
 435              	 .loc 1 271 0
 436 022c FB69     	 ldr r3,[r7,#28]
 437 022e DA68     	 ldr r2,[r3,#12]
 438 0230 BB69     	 ldr r3,[r7,#24]
 439 0232 DA60     	 str r2,[r3,#12]
 272:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->next = tcp_active_pcbs;
 440              	 .loc 1 272 0
 441 0234 144B     	 ldr r3,.L56+36
 442 0236 1A68     	 ldr r2,[r3]
 443 0238 FB69     	 ldr r3,[r7,#28]
 444 023a DA60     	 str r2,[r3,#12]
 273:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_active_pcbs = pcb;
 445              	 .loc 1 273 0
 446 023c 124A     	 ldr r2,.L56+36
 447 023e FB69     	 ldr r3,[r7,#28]
 448 0240 1360     	 str r3,[r2]
 449              	.L12:
 274:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       } else {
 275:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         TCP_STATS_INC(tcp.cachehit);
 276:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
 277:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_ASSERT("tcp_input: pcb->next != pcb (after cache)", pcb->next != pcb);
 278:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       break;
 450              	 .loc 1 278 0
 451 0242 07E0     	 b .L13
 452              	.L11:
 279:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 280:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     prev = pcb;
 453              	 .loc 1 280 0
 454 0244 FB69     	 ldr r3,[r7,#28]
 455 0246 BB61     	 str r3,[r7,#24]
 456              	.L10:
 250:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     LWIP_ASSERT("tcp_input: active pcb->state != CLOSED", pcb->state != CLOSED);
 457              	 .loc 1 250 0 discriminator 2
 458 0248 FB69     	 ldr r3,[r7,#28]
 459 024a DB68     	 ldr r3,[r3,#12]
 460 024c FB61     	 str r3,[r7,#28]
 461              	.L8:
 250:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     LWIP_ASSERT("tcp_input: active pcb->state != CLOSED", pcb->state != CLOSED);
 462              	 .loc 1 250 0 is_stmt 0 discriminator 1
 463 024e FB69     	 ldr r3,[r7,#28]
 464 0250 002B     	 cmp r3,#0
 465 0252 BBD1     	 bne .L14
 466              	.L13:
 281:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 282:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 283:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if (pcb == NULL) {
 467              	 .loc 1 283 0 is_stmt 1
 468 0254 FB69     	 ldr r3,[r7,#28]
 469 0256 002B     	 cmp r3,#0
 470 0258 40F09F80 	 bne .L15
 284:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* If it did not go to an active connection, we check the connections
 285:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        in the TIME-WAIT state. */
 286:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     for (pcb = tcp_tw_pcbs; pcb != NULL; pcb = pcb->next) {
 471              	 .loc 1 286 0
 472 025c 0B4B     	 ldr r3,.L56+40
 473 025e 1B68     	 ldr r3,[r3]
 474 0260 FB61     	 str r3,[r7,#28]
 475 0262 4AE0     	 b .L16
 476              	.L57:
 477              	 .align 2
 478              	.L56:
 479 0264 00000000 	 .word tcphdr
 480 0268 00000000 	 .word ip_data
 481 026c 00000000 	 .word tcphdr_optlen
 482 0270 00000000 	 .word tcphdr_opt2
 483 0274 00000000 	 .word tcphdr_opt1len
 484 0278 00000000 	 .word seqno
 485 027c 00000000 	 .word ackno
 486 0280 00000000 	 .word flags
 487 0284 00000000 	 .word tcplen
 488 0288 00000000 	 .word tcp_active_pcbs
 489 028c 00000000 	 .word tcp_tw_pcbs
 490              	.L20:
 287:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_ASSERT("tcp_input: TIME-WAIT pcb->state == TIME-WAIT", pcb->state == TIME_WAIT);
 288:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 289:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* check if PCB is bound to specific netif */
 290:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if ((pcb->netif_idx != NETIF_NO_INDEX) &&
 491              	 .loc 1 290 0
 492 0290 FB69     	 ldr r3,[r7,#28]
 493 0292 1B7A     	 ldrb r3,[r3,#8]
 494 0294 002B     	 cmp r3,#0
 495 0296 0AD0     	 beq .L17
 291:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           (pcb->netif_idx != netif_get_index(ip_data.current_input_netif))) {
 496              	 .loc 1 291 0 discriminator 1
 497 0298 FB69     	 ldr r3,[r7,#28]
 498 029a 1A7A     	 ldrb r2,[r3,#8]
 499 029c 954B     	 ldr r3,.L58
 500 029e 5B68     	 ldr r3,[r3,#4]
 501 02a0 93F83030 	 ldrb r3,[r3,#48]
 502 02a4 0133     	 adds r3,r3,#1
 503 02a6 DBB2     	 uxtb r3,r3
 290:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           (pcb->netif_idx != netif_get_index(ip_data.current_input_netif))) {
 504              	 .loc 1 290 0 discriminator 1
 505 02a8 9A42     	 cmp r2,r3
 506 02aa 00D0     	 beq .L17
 292:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         continue;
 507              	 .loc 1 292 0
 508 02ac 22E0     	 b .L18
 509              	.L17:
 293:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
 294:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 295:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (pcb->remote_port == tcphdr->src &&
 510              	 .loc 1 295 0
 511 02ae FB69     	 ldr r3,[r7,#28]
 512 02b0 1A8B     	 ldrh r2,[r3,#24]
 513 02b2 914B     	 ldr r3,.L58+4
 514 02b4 1B68     	 ldr r3,[r3]
 515 02b6 1B88     	 ldrh r3,[r3]
 516 02b8 9BB2     	 uxth r3,r3
 517 02ba 9A42     	 cmp r2,r3
 518 02bc 1AD1     	 bne .L18
 296:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pcb->local_port == tcphdr->dest &&
 519              	 .loc 1 296 0 discriminator 1
 520 02be FB69     	 ldr r3,[r7,#28]
 521 02c0 DA8A     	 ldrh r2,[r3,#22]
 522 02c2 8D4B     	 ldr r3,.L58+4
 523 02c4 1B68     	 ldr r3,[r3]
 524 02c6 5B88     	 ldrh r3,[r3,#2]
 525 02c8 9BB2     	 uxth r3,r3
 295:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pcb->local_port == tcphdr->dest &&
 526              	 .loc 1 295 0 discriminator 1
 527 02ca 9A42     	 cmp r2,r3
 528 02cc 12D1     	 bne .L18
 297:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           ip_addr_cmp(&pcb->remote_ip, ip_current_src_addr()) &&
 529              	 .loc 1 297 0
 530 02ce FB69     	 ldr r3,[r7,#28]
 531 02d0 5A68     	 ldr r2,[r3,#4]
 532 02d2 884B     	 ldr r3,.L58
 533 02d4 1B69     	 ldr r3,[r3,#16]
 296:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pcb->local_port == tcphdr->dest &&
 534              	 .loc 1 296 0
 535 02d6 9A42     	 cmp r2,r3
 536 02d8 0CD1     	 bne .L18
 298:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           ip_addr_cmp(&pcb->local_ip, ip_current_dest_addr())) {
 537              	 .loc 1 298 0
 538 02da FB69     	 ldr r3,[r7,#28]
 539 02dc 1A68     	 ldr r2,[r3]
 540 02de 854B     	 ldr r3,.L58
 541 02e0 5B69     	 ldr r3,[r3,#20]
 297:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           ip_addr_cmp(&pcb->remote_ip, ip_current_src_addr()) &&
 542              	 .loc 1 297 0
 543 02e2 9A42     	 cmp r2,r3
 544 02e4 06D1     	 bne .L18
 299:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* We don't really care enough to move this PCB to the front
 300:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            of the list since we are not very likely to receive that
 301:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            many segments for connections in TIME-WAIT. */
 302:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_input: packed for TIME_WAITing connection.\n"));
 303:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #ifdef LWIP_HOOK_TCP_INPACKET_PCB
 304:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (LWIP_HOOK_TCP_INPACKET_PCB(pcb, tcphdr, tcphdr_optlen, tcphdr_opt1len,
 305:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                        tcphdr_opt2, p) == ERR_OK)
 306:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif
 307:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         {
 308:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tcp_timewait_input(pcb);
 545              	 .loc 1 308 0
 546 02e6 F869     	 ldr r0,[r7,#28]
 547 02e8 FFF7FEFF 	 bl tcp_timewait_input
 309:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
 310:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pbuf_free(p);
 548              	 .loc 1 310 0
 549 02ec 7868     	 ldr r0,[r7,#4]
 550 02ee FFF7FEFF 	 bl pbuf_free
 311:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         return;
 551              	 .loc 1 311 0
 552 02f2 C9E1     	 b .L1
 553              	.L18:
 286:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_ASSERT("tcp_input: TIME-WAIT pcb->state == TIME-WAIT", pcb->state == TIME_WAIT);
 554              	 .loc 1 286 0 discriminator 2
 555 02f4 FB69     	 ldr r3,[r7,#28]
 556 02f6 DB68     	 ldr r3,[r3,#12]
 557 02f8 FB61     	 str r3,[r7,#28]
 558              	.L16:
 286:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_ASSERT("tcp_input: TIME-WAIT pcb->state == TIME-WAIT", pcb->state == TIME_WAIT);
 559              	 .loc 1 286 0 is_stmt 0 discriminator 1
 560 02fa FB69     	 ldr r3,[r7,#28]
 561 02fc 002B     	 cmp r3,#0
 562 02fe C7D1     	 bne .L20
 312:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
 313:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 314:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 315:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* Finally, if we still did not get a match, we check all PCBs that
 316:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        are LISTENing for incoming connections. */
 317:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     prev = NULL;
 563              	 .loc 1 317 0 is_stmt 1
 564 0300 0023     	 movs r3,#0
 565 0302 BB61     	 str r3,[r7,#24]
 318:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     for (lpcb = tcp_listen_pcbs.listen_pcbs; lpcb != NULL; lpcb = lpcb->next) {
 566              	 .loc 1 318 0
 567 0304 7D4B     	 ldr r3,.L58+8
 568 0306 1B68     	 ldr r3,[r3]
 569 0308 7B61     	 str r3,[r7,#20]
 570 030a 2BE0     	 b .L21
 571              	.L27:
 319:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* check if PCB is bound to specific netif */
 320:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if ((lpcb->netif_idx != NETIF_NO_INDEX) &&
 572              	 .loc 1 320 0
 573 030c 7B69     	 ldr r3,[r7,#20]
 574 030e 1B7A     	 ldrb r3,[r3,#8]
 575 0310 002B     	 cmp r3,#0
 576 0312 0CD0     	 beq .L22
 321:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           (lpcb->netif_idx != netif_get_index(ip_data.current_input_netif))) {
 577              	 .loc 1 321 0 discriminator 1
 578 0314 7B69     	 ldr r3,[r7,#20]
 579 0316 1A7A     	 ldrb r2,[r3,#8]
 580 0318 764B     	 ldr r3,.L58
 581 031a 5B68     	 ldr r3,[r3,#4]
 582 031c 93F83030 	 ldrb r3,[r3,#48]
 583 0320 0133     	 adds r3,r3,#1
 584 0322 DBB2     	 uxtb r3,r3
 320:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           (lpcb->netif_idx != netif_get_index(ip_data.current_input_netif))) {
 585              	 .loc 1 320 0 discriminator 1
 586 0324 9A42     	 cmp r2,r3
 587 0326 02D0     	 beq .L22
 322:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         prev = (struct tcp_pcb *)lpcb;
 588              	 .loc 1 322 0
 589 0328 7B69     	 ldr r3,[r7,#20]
 590 032a BB61     	 str r3,[r7,#24]
 323:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         continue;
 591              	 .loc 1 323 0
 592 032c 17E0     	 b .L23
 593              	.L22:
 324:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
 325:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 326:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (lpcb->local_port == tcphdr->dest) {
 594              	 .loc 1 326 0
 595 032e 7B69     	 ldr r3,[r7,#20]
 596 0330 DA8A     	 ldrh r2,[r3,#22]
 597 0332 714B     	 ldr r3,.L58+4
 598 0334 1B68     	 ldr r3,[r3]
 599 0336 5B88     	 ldrh r3,[r3,#2]
 600 0338 9BB2     	 uxth r3,r3
 601 033a 9A42     	 cmp r2,r3
 602 033c 0DD1     	 bne .L24
 327:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (IP_IS_ANY_TYPE_VAL(lpcb->local_ip)) {
 328:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* found an ANY TYPE (IPv4/IPv6) match */
 329:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if SO_REUSE
 330:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           lpcb_any = lpcb;
 331:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           lpcb_prev = prev;
 332:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #else /* SO_REUSE */
 333:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           break;
 334:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* SO_REUSE */
 335:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         } else if (IP_ADDR_PCB_VERSION_MATCH_EXACT(lpcb, ip_current_dest_addr())) {
 336:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (ip_addr_cmp(&lpcb->local_ip, ip_current_dest_addr())) {
 603              	 .loc 1 336 0
 604 033e 7B69     	 ldr r3,[r7,#20]
 605 0340 1A68     	 ldr r2,[r3]
 606 0342 6C4B     	 ldr r3,.L58
 607 0344 5B69     	 ldr r3,[r3,#20]
 608 0346 9A42     	 cmp r2,r3
 609 0348 00D1     	 bne .L25
 337:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* found an exact match */
 338:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             break;
 610              	 .loc 1 338 0
 611 034a 0EE0     	 b .L26
 612              	.L25:
 339:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           } else if (ip_addr_isany(&lpcb->local_ip)) {
 613              	 .loc 1 339 0
 614 034c 7B69     	 ldr r3,[r7,#20]
 615 034e 002B     	 cmp r3,#0
 616 0350 0BD0     	 beq .L26
 617              	 .loc 1 339 0 is_stmt 0 discriminator 1
 618 0352 7B69     	 ldr r3,[r7,#20]
 619 0354 1B68     	 ldr r3,[r3]
 620 0356 002B     	 cmp r3,#0
 621 0358 07D0     	 beq .L26
 622              	.L24:
 340:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* found an ANY-match */
 341:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if SO_REUSE
 342:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             lpcb_any = lpcb;
 343:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             lpcb_prev = prev;
 344:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #else /* SO_REUSE */
 345:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             break;
 346:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* SO_REUSE */
 347:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
 348:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
 349:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
 350:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       prev = (struct tcp_pcb *)lpcb;
 623              	 .loc 1 350 0 is_stmt 1
 624 035a 7B69     	 ldr r3,[r7,#20]
 625 035c BB61     	 str r3,[r7,#24]
 626              	.L23:
 318:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* check if PCB is bound to specific netif */
 627              	 .loc 1 318 0 discriminator 2
 628 035e 7B69     	 ldr r3,[r7,#20]
 629 0360 DB68     	 ldr r3,[r3,#12]
 630 0362 7B61     	 str r3,[r7,#20]
 631              	.L21:
 318:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* check if PCB is bound to specific netif */
 632              	 .loc 1 318 0 is_stmt 0 discriminator 1
 633 0364 7B69     	 ldr r3,[r7,#20]
 634 0366 002B     	 cmp r3,#0
 635 0368 D0D1     	 bne .L27
 636              	.L26:
 351:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 352:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if SO_REUSE
 353:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* first try specific local IP */
 354:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (lpcb == NULL) {
 355:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* only pass to ANY if no specific local IP has been found */
 356:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       lpcb = lpcb_any;
 357:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       prev = lpcb_prev;
 358:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 359:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* SO_REUSE */
 360:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (lpcb != NULL) {
 637              	 .loc 1 360 0 is_stmt 1
 638 036a 7B69     	 ldr r3,[r7,#20]
 639 036c 002B     	 cmp r3,#0
 640 036e 14D0     	 beq .L15
 361:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* Move this PCB to the front of the list so that subsequent
 362:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          lookups will be faster (we exploit locality in TCP segment
 363:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          arrivals). */
 364:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (prev != NULL) {
 641              	 .loc 1 364 0
 642 0370 BB69     	 ldr r3,[r7,#24]
 643 0372 002B     	 cmp r3,#0
 644 0374 0AD0     	 beq .L28
 365:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         ((struct tcp_pcb_listen *)prev)->next = lpcb->next;
 645              	 .loc 1 365 0
 646 0376 7B69     	 ldr r3,[r7,#20]
 647 0378 DA68     	 ldr r2,[r3,#12]
 648 037a BB69     	 ldr r3,[r7,#24]
 649 037c DA60     	 str r2,[r3,#12]
 366:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* our successor is the remainder of the listening list */
 367:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         lpcb->next = tcp_listen_pcbs.listen_pcbs;
 650              	 .loc 1 367 0
 651 037e 5F4B     	 ldr r3,.L58+8
 652 0380 1A68     	 ldr r2,[r3]
 653 0382 7B69     	 ldr r3,[r7,#20]
 654 0384 DA60     	 str r2,[r3,#12]
 368:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* put this listening pcb at the head of the listening list */
 369:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_listen_pcbs.listen_pcbs = lpcb;
 655              	 .loc 1 369 0
 656 0386 5D4A     	 ldr r2,.L58+8
 657 0388 7B69     	 ldr r3,[r7,#20]
 658 038a 1360     	 str r3,[r2]
 659              	.L28:
 370:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       } else {
 371:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         TCP_STATS_INC(tcp.cachehit);
 372:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
 373:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 374:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_input: packed for LISTENing connection.\n"));
 375:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #ifdef LWIP_HOOK_TCP_INPACKET_PCB
 376:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (LWIP_HOOK_TCP_INPACKET_PCB((struct tcp_pcb *)lpcb, tcphdr, tcphdr_optlen,
 377:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                      tcphdr_opt1len, tcphdr_opt2, p) == ERR_OK)
 378:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif
 379:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       {
 380:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_listen_input(lpcb);
 660              	 .loc 1 380 0
 661 038c 7869     	 ldr r0,[r7,#20]
 662 038e FFF7FEFF 	 bl tcp_listen_input
 381:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
 382:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       pbuf_free(p);
 663              	 .loc 1 382 0
 664 0392 7868     	 ldr r0,[r7,#4]
 665 0394 FFF7FEFF 	 bl pbuf_free
 383:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       return;
 666              	 .loc 1 383 0
 667 0398 76E1     	 b .L1
 668              	.L15:
 384:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 385:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 386:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 387:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_INPUT_DEBUG
 388:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   LWIP_DEBUGF(TCP_INPUT_DEBUG, ("+-+-+-+-+-+-+-+-+-+-+-+-+-+- tcp_input: flags "));
 389:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   tcp_debug_print_flags(TCPH_FLAGS(tcphdr));
 390:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   LWIP_DEBUGF(TCP_INPUT_DEBUG, ("-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"));
 391:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_INPUT_DEBUG */
 392:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 393:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 394:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #ifdef LWIP_HOOK_TCP_INPACKET_PCB
 395:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if ((pcb != NULL) && LWIP_HOOK_TCP_INPACKET_PCB(pcb, tcphdr, tcphdr_optlen,
 396:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       tcphdr_opt1len, tcphdr_opt2, p) != ERR_OK) {
 397:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     pbuf_free(p);
 398:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     return;
 399:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 400:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif
 401:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if (pcb != NULL) {
 669              	 .loc 1 401 0
 670 039a FB69     	 ldr r3,[r7,#28]
 671 039c 002B     	 cmp r3,#0
 672 039e 00F04481 	 beq .L29
 402:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* The incoming segment belongs to a connection. */
 403:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_INPUT_DEBUG
 404:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     tcp_debug_print_state(pcb->state);
 405:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_INPUT_DEBUG */
 406:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 407:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* Set up a tcp_seg structure. */
 408:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     inseg.next = NULL;
 673              	 .loc 1 408 0
 674 03a2 574B     	 ldr r3,.L58+12
 675 03a4 0022     	 movs r2,#0
 676 03a6 1A60     	 str r2,[r3]
 409:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     inseg.len = p->tot_len;
 677              	 .loc 1 409 0
 678 03a8 7B68     	 ldr r3,[r7,#4]
 679 03aa 1A89     	 ldrh r2,[r3,#8]
 680 03ac 544B     	 ldr r3,.L58+12
 681 03ae 1A81     	 strh r2,[r3,#8]
 410:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     inseg.p = p;
 682              	 .loc 1 410 0
 683 03b0 534A     	 ldr r2,.L58+12
 684 03b2 7B68     	 ldr r3,[r7,#4]
 685 03b4 5360     	 str r3,[r2,#4]
 411:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     inseg.tcphdr = tcphdr;
 686              	 .loc 1 411 0
 687 03b6 504B     	 ldr r3,.L58+4
 688 03b8 1B68     	 ldr r3,[r3]
 689 03ba 514A     	 ldr r2,.L58+12
 690 03bc D360     	 str r3,[r2,#12]
 412:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 413:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     recv_data = NULL;
 691              	 .loc 1 413 0
 692 03be 514B     	 ldr r3,.L58+16
 693 03c0 0022     	 movs r2,#0
 694 03c2 1A60     	 str r2,[r3]
 414:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     recv_flags = 0;
 695              	 .loc 1 414 0
 696 03c4 504B     	 ldr r3,.L58+20
 697 03c6 0022     	 movs r2,#0
 698 03c8 1A70     	 strb r2,[r3]
 415:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     recv_acked = 0;
 699              	 .loc 1 415 0
 700 03ca 504B     	 ldr r3,.L58+24
 701 03cc 0022     	 movs r2,#0
 702 03ce 1A80     	 strh r2,[r3]
 416:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 417:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (flags & TCP_PSH) {
 703              	 .loc 1 417 0
 704 03d0 4F4B     	 ldr r3,.L58+28
 705 03d2 1B78     	 ldrb r3,[r3]
 706 03d4 03F00803 	 and r3,r3,#8
 707 03d8 002B     	 cmp r3,#0
 708 03da 06D0     	 beq .L30
 418:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       p->flags |= PBUF_FLAG_PUSH;
 709              	 .loc 1 418 0
 710 03dc 7B68     	 ldr r3,[r7,#4]
 711 03de 5B7B     	 ldrb r3,[r3,#13]
 712 03e0 43F00103 	 orr r3,r3,#1
 713 03e4 DAB2     	 uxtb r2,r3
 714 03e6 7B68     	 ldr r3,[r7,#4]
 715 03e8 5A73     	 strb r2,[r3,#13]
 716              	.L30:
 419:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 420:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 421:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* If there is data which was previously "refused" by upper layer */
 422:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (pcb->refused_data != NULL) {
 717              	 .loc 1 422 0
 718 03ea FB69     	 ldr r3,[r7,#28]
 719 03ec 9B6F     	 ldr r3,[r3,#120]
 720 03ee 002B     	 cmp r3,#0
 721 03f0 17D0     	 beq .L31
 423:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if ((tcp_process_refused_data(pcb) == ERR_ABRT) ||
 722              	 .loc 1 423 0
 723 03f2 F869     	 ldr r0,[r7,#28]
 724 03f4 FFF7FEFF 	 bl tcp_process_refused_data
 725 03f8 0346     	 mov r3,r0
 726 03fa 13F10D0F 	 cmn r3,#13
 727 03fe 07D0     	 beq .L32
 424:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           ((pcb->refused_data != NULL) && (tcplen > 0))) {
 728              	 .loc 1 424 0 discriminator 1
 729 0400 FB69     	 ldr r3,[r7,#28]
 730 0402 9B6F     	 ldr r3,[r3,#120]
 423:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if ((tcp_process_refused_data(pcb) == ERR_ABRT) ||
 731              	 .loc 1 423 0 discriminator 1
 732 0404 002B     	 cmp r3,#0
 733 0406 0CD0     	 beq .L31
 734              	 .loc 1 424 0
 735 0408 424B     	 ldr r3,.L58+32
 736 040a 1B88     	 ldrh r3,[r3]
 737 040c 002B     	 cmp r3,#0
 738 040e 08D0     	 beq .L31
 739              	.L32:
 425:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* pcb has been aborted or refused data is still refused and the new
 426:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            segment contains data */
 427:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (pcb->rcv_ann_wnd == 0) {
 740              	 .loc 1 427 0
 741 0410 FB69     	 ldr r3,[r7,#28]
 742 0412 5B8D     	 ldrh r3,[r3,#42]
 743 0414 002B     	 cmp r3,#0
 744 0416 03D1     	 bne .L33
 428:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* this is a zero-window probe, we respond to it with current RCV.NXT
 429:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           and drop the data segment */
 430:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tcp_send_empty_ack(pcb);
 745              	 .loc 1 430 0
 746 0418 F869     	 ldr r0,[r7,#28]
 747 041a FFF7FEFF 	 bl tcp_send_empty_ack
 431:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
 432:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         TCP_STATS_INC(tcp.drop);
 433:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         MIB2_STATS_INC(mib2.tcpinerrs);
 434:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         goto aborted;
 748              	 .loc 1 434 0
 749 041e F1E0     	 b .L34
 750              	.L33:
 751 0420 F0E0     	 b .L34
 752              	.L31:
 435:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
 436:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 437:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     tcp_input_pcb = pcb;
 753              	 .loc 1 437 0
 754 0422 3D4A     	 ldr r2,.L58+36
 755 0424 FB69     	 ldr r3,[r7,#28]
 756 0426 1360     	 str r3,[r2]
 438:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     err = tcp_process(pcb);
 757              	 .loc 1 438 0
 758 0428 F869     	 ldr r0,[r7,#28]
 759 042a FFF7FEFF 	 bl tcp_process
 760 042e 0346     	 mov r3,r0
 761 0430 FB74     	 strb r3,[r7,#19]
 439:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* A return value of ERR_ABRT means that tcp_abort() was called
 440:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        and that the pcb has been freed. If so, we don't do anything. */
 441:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (err != ERR_ABRT) {
 762              	 .loc 1 441 0
 763 0432 97F91330 	 ldrsb r3,[r7,#19]
 764 0436 13F10D0F 	 cmn r3,#13
 765 043a 00F0E380 	 beq .L34
 442:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (recv_flags & TF_RESET) {
 766              	 .loc 1 442 0
 767 043e 324B     	 ldr r3,.L58+20
 768 0440 1B78     	 ldrb r3,[r3]
 769 0442 03F00803 	 and r3,r3,#8
 770 0446 002B     	 cmp r3,#0
 771 0448 15D0     	 beq .L35
 443:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* TF_RESET means that the connection was reset by the other
 444:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            end. We then call the error callback to inform the
 445:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            application that the connection is dead before we
 446:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            deallocate the PCB. */
 447:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         TCP_EVENT_ERR(pcb->state, pcb->errf, pcb->callback_arg, ERR_RST);
 772              	 .loc 1 447 0
 773 044a FB69     	 ldr r3,[r7,#28]
 774 044c D3F89030 	 ldr r3,[r3,#144]
 775 0450 002B     	 cmp r3,#0
 776 0452 08D0     	 beq .L36
 777              	 .loc 1 447 0 is_stmt 0 discriminator 1
 778 0454 FB69     	 ldr r3,[r7,#28]
 779 0456 D3F89030 	 ldr r3,[r3,#144]
 780 045a FA69     	 ldr r2,[r7,#28]
 781 045c 1269     	 ldr r2,[r2,#16]
 782 045e 1046     	 mov r0,r2
 783 0460 6FF00D01 	 mvn r1,#13
 784 0464 9847     	 blx r3
 785              	.L36:
 448:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_pcb_remove(&tcp_active_pcbs, pcb);
 786              	 .loc 1 448 0 is_stmt 1
 787 0466 2D48     	 ldr r0,.L58+40
 788 0468 F969     	 ldr r1,[r7,#28]
 789 046a FFF7FEFF 	 bl tcp_pcb_remove
 449:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_free(pcb);
 790              	 .loc 1 449 0
 791 046e F869     	 ldr r0,[r7,#28]
 792 0470 FFF7FEFF 	 bl tcp_free
 793 0474 C6E0     	 b .L34
 794              	.L35:
 450:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       } else {
 451:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         err = ERR_OK;
 795              	 .loc 1 451 0
 796 0476 0023     	 movs r3,#0
 797 0478 FB74     	 strb r3,[r7,#19]
 452:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* If the application has registered a "sent" function to be
 453:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            called when new send buffer space is available, we call it
 454:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            now. */
 455:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (recv_acked > 0) {
 798              	 .loc 1 455 0
 799 047a 244B     	 ldr r3,.L58+24
 800 047c 1B88     	 ldrh r3,[r3]
 801 047e 002B     	 cmp r3,#0
 802 0480 1ED0     	 beq .L37
 803              	.LBB3:
 456:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           u16_t acked16;
 457:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_WND_SCALE
 458:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* recv_acked is u32_t but the sent callback only takes a u16_t,
 459:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              so we might have to call it multiple times. */
 460:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           u32_t acked = recv_acked;
 461:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           while (acked > 0) {
 462:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             acked16 = (u16_t)LWIP_MIN(acked, 0xffffu);
 463:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             acked -= acked16;
 464:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #else
 465:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           {
 466:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             acked16 = recv_acked;
 804              	 .loc 1 466 0
 805 0482 224B     	 ldr r3,.L58+24
 806 0484 1B88     	 ldrh r3,[r3]
 807 0486 FB81     	 strh r3,[r7,#14]
 467:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif
 468:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             TCP_EVENT_SENT(pcb, (u16_t)acked16, err);
 808              	 .loc 1 468 0
 809 0488 FB69     	 ldr r3,[r7,#28]
 810 048a D3F88030 	 ldr r3,[r3,#128]
 811 048e 002B     	 cmp r3,#0
 812 0490 0BD0     	 beq .L38
 813              	 .loc 1 468 0 is_stmt 0 discriminator 1
 814 0492 FB69     	 ldr r3,[r7,#28]
 815 0494 D3F88030 	 ldr r3,[r3,#128]
 816 0498 FA69     	 ldr r2,[r7,#28]
 817 049a 1169     	 ldr r1,[r2,#16]
 818 049c FA89     	 ldrh r2,[r7,#14]
 819 049e 0846     	 mov r0,r1
 820 04a0 F969     	 ldr r1,[r7,#28]
 821 04a2 9847     	 blx r3
 822 04a4 0346     	 mov r3,r0
 823 04a6 FB74     	 strb r3,[r7,#19]
 824 04a8 01E0     	 b .L39
 825              	.L38:
 826              	 .loc 1 468 0 discriminator 2
 827 04aa 0023     	 movs r3,#0
 828 04ac FB74     	 strb r3,[r7,#19]
 829              	.L39:
 469:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (err == ERR_ABRT) {
 830              	 .loc 1 469 0 is_stmt 1
 831 04ae 97F91330 	 ldrsb r3,[r7,#19]
 832 04b2 13F10D0F 	 cmn r3,#13
 833 04b6 00D1     	 bne .L40
 470:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               goto aborted;
 834              	 .loc 1 470 0
 835 04b8 A4E0     	 b .L34
 836              	.L40:
 471:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
 472:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
 473:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           recv_acked = 0;
 837              	 .loc 1 473 0
 838 04ba 144B     	 ldr r3,.L58+24
 839 04bc 0022     	 movs r2,#0
 840 04be 1A80     	 strh r2,[r3]
 841              	.L37:
 842              	.LBE3:
 474:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
 475:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (tcp_input_delayed_close(pcb)) {
 843              	 .loc 1 475 0
 844 04c0 F869     	 ldr r0,[r7,#28]
 845 04c2 FFF7FEFF 	 bl tcp_input_delayed_close
 846 04c6 0346     	 mov r3,r0
 847 04c8 002B     	 cmp r3,#0
 848 04ca 00D0     	 beq .L41
 476:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           goto aborted;
 849              	 .loc 1 476 0
 850 04cc 9AE0     	 b .L34
 851              	.L41:
 477:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
 478:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_QUEUE_OOSEQ && LWIP_WND_SCALE
 479:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         while (recv_data != NULL) {
 480:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           struct pbuf *rest = NULL;
 481:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pbuf_split_64k(recv_data, &rest);
 482:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #else /* TCP_QUEUE_OOSEQ && LWIP_WND_SCALE */
 483:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (recv_data != NULL) {
 852              	 .loc 1 483 0
 853 04ce 0D4B     	 ldr r3,.L58+16
 854 04d0 1B68     	 ldr r3,[r3]
 855 04d2 002B     	 cmp r3,#0
 856 04d4 50D0     	 beq .L42
 484:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_QUEUE_OOSEQ && LWIP_WND_SCALE */
 485:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 486:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           LWIP_ASSERT("pcb->refused_data == NULL", pcb->refused_data == NULL);
 487:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (pcb->flags & TF_RXCLOSED) {
 857              	 .loc 1 487 0
 858 04d6 FB69     	 ldr r3,[r7,#28]
 859 04d8 5B8B     	 ldrh r3,[r3,#26]
 860 04da 03F01003 	 and r3,r3,#16
 861 04de 002B     	 cmp r3,#0
 862 04e0 1ED0     	 beq .L43
 488:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* received data although already closed -> abort (send RST) to
 489:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                notify the remote host that not all data has been processed */
 490:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             pbuf_free(recv_data);
 863              	 .loc 1 490 0
 864 04e2 084B     	 ldr r3,.L58+16
 865 04e4 1B68     	 ldr r3,[r3]
 866 04e6 1846     	 mov r0,r3
 867 04e8 FFF7FEFF 	 bl pbuf_free
 491:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_QUEUE_OOSEQ && LWIP_WND_SCALE
 492:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (rest != NULL) {
 493:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               pbuf_free(rest);
 494:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
 495:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_QUEUE_OOSEQ && LWIP_WND_SCALE */
 496:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             tcp_abort(pcb);
 868              	 .loc 1 496 0
 869 04ec F869     	 ldr r0,[r7,#28]
 870 04ee FFF7FEFF 	 bl tcp_abort
 497:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             goto aborted;
 871              	 .loc 1 497 0
 872 04f2 87E0     	 b .L34
 873              	.L59:
 874              	 .align 2
 875              	.L58:
 876 04f4 00000000 	 .word ip_data
 877 04f8 00000000 	 .word tcphdr
 878 04fc 00000000 	 .word tcp_listen_pcbs
 879 0500 00000000 	 .word inseg
 880 0504 00000000 	 .word recv_data
 881 0508 00000000 	 .word recv_flags
 882 050c 00000000 	 .word recv_acked
 883 0510 00000000 	 .word flags
 884 0514 00000000 	 .word tcplen
 885 0518 00000000 	 .word tcp_input_pcb
 886 051c 00000000 	 .word tcp_active_pcbs
 887              	.L43:
 498:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
 499:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 500:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* Notify application that data has been received. */
 501:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           TCP_EVENT_RECV(pcb, recv_data, ERR_OK, err);
 888              	 .loc 1 501 0
 889 0520 FB69     	 ldr r3,[r7,#28]
 890 0522 D3F88430 	 ldr r3,[r3,#132]
 891 0526 002B     	 cmp r3,#0
 892 0528 0ED0     	 beq .L44
 893              	 .loc 1 501 0 is_stmt 0 discriminator 1
 894 052a FB69     	 ldr r3,[r7,#28]
 895 052c D3F88440 	 ldr r4,[r3,#132]
 896 0530 FB69     	 ldr r3,[r7,#28]
 897 0532 1A69     	 ldr r2,[r3,#16]
 898 0534 564B     	 ldr r3,.L60
 899 0536 1B68     	 ldr r3,[r3]
 900 0538 1046     	 mov r0,r2
 901 053a F969     	 ldr r1,[r7,#28]
 902 053c 1A46     	 mov r2,r3
 903 053e 0023     	 movs r3,#0
 904 0540 A047     	 blx r4
 905 0542 0346     	 mov r3,r0
 906 0544 FB74     	 strb r3,[r7,#19]
 907 0546 09E0     	 b .L45
 908              	.L44:
 909              	 .loc 1 501 0 discriminator 2
 910 0548 514B     	 ldr r3,.L60
 911 054a 1B68     	 ldr r3,[r3]
 912 054c 0020     	 movs r0,#0
 913 054e F969     	 ldr r1,[r7,#28]
 914 0550 1A46     	 mov r2,r3
 915 0552 0023     	 movs r3,#0
 916 0554 FFF7FEFF 	 bl tcp_recv_null
 917 0558 0346     	 mov r3,r0
 918 055a FB74     	 strb r3,[r7,#19]
 919              	.L45:
 502:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (err == ERR_ABRT) {
 920              	 .loc 1 502 0 is_stmt 1
 921 055c 97F91330 	 ldrsb r3,[r7,#19]
 922 0560 13F10D0F 	 cmn r3,#13
 923 0564 00D1     	 bne .L46
 503:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_QUEUE_OOSEQ && LWIP_WND_SCALE
 504:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (rest != NULL) {
 505:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               pbuf_free(rest);
 506:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
 507:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_QUEUE_OOSEQ && LWIP_WND_SCALE */
 508:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             goto aborted;
 924              	 .loc 1 508 0
 925 0566 4DE0     	 b .L34
 926              	.L46:
 509:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
 510:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 511:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* If the upper layer can't receive this data, store it */
 512:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (err != ERR_OK) {
 927              	 .loc 1 512 0
 928 0568 97F91330 	 ldrsb r3,[r7,#19]
 929 056c 002B     	 cmp r3,#0
 930 056e 03D0     	 beq .L42
 513:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_QUEUE_OOSEQ && LWIP_WND_SCALE
 514:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (rest != NULL) {
 515:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               pbuf_cat(recv_data, rest);
 516:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
 517:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_QUEUE_OOSEQ && LWIP_WND_SCALE */
 518:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             pcb->refused_data = recv_data;
 931              	 .loc 1 518 0
 932 0570 474B     	 ldr r3,.L60
 933 0572 1A68     	 ldr r2,[r3]
 934 0574 FB69     	 ldr r3,[r7,#28]
 935 0576 9A67     	 str r2,[r3,#120]
 936              	.L42:
 519:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_input: keep incoming packet, because pcb is \"full\"
 520:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_QUEUE_OOSEQ && LWIP_WND_SCALE
 521:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             break;
 522:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           } else {
 523:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* Upper layer received the data, go on with the rest if > 64K */
 524:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             recv_data = rest;
 525:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_QUEUE_OOSEQ && LWIP_WND_SCALE */
 526:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
 527:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
 528:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 529:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* If a FIN segment was received, we call the callback
 530:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            function with a NULL buffer to indicate EOF. */
 531:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (recv_flags & TF_GOT_FIN) {
 937              	 .loc 1 531 0
 938 0578 464B     	 ldr r3,.L60+4
 939 057a 1B78     	 ldrb r3,[r3]
 940 057c 03F02003 	 and r3,r3,#32
 941 0580 002B     	 cmp r3,#0
 942 0582 32D0     	 beq .L47
 532:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (pcb->refused_data != NULL) {
 943              	 .loc 1 532 0
 944 0584 FB69     	 ldr r3,[r7,#28]
 945 0586 9B6F     	 ldr r3,[r3,#120]
 946 0588 002B     	 cmp r3,#0
 947 058a 09D0     	 beq .L48
 533:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* Delay this if we have refused data. */
 534:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             pcb->refused_data->flags |= PBUF_FLAG_TCP_FIN;
 948              	 .loc 1 534 0
 949 058c FB69     	 ldr r3,[r7,#28]
 950 058e 9B6F     	 ldr r3,[r3,#120]
 951 0590 FA69     	 ldr r2,[r7,#28]
 952 0592 926F     	 ldr r2,[r2,#120]
 953 0594 527B     	 ldrb r2,[r2,#13]
 954 0596 42F02002 	 orr r2,r2,#32
 955 059a D2B2     	 uxtb r2,r2
 956 059c 5A73     	 strb r2,[r3,#13]
 957 059e 24E0     	 b .L47
 958              	.L48:
 535:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           } else {
 536:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* correct rcv_wnd as the application won't call tcp_recved()
 537:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                for the FIN's seqno */
 538:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (pcb->rcv_wnd != TCP_WND_MAX(pcb)) {
 959              	 .loc 1 538 0
 960 05a0 FB69     	 ldr r3,[r7,#28]
 961 05a2 1B8D     	 ldrh r3,[r3,#40]
 962 05a4 B3F5066F 	 cmp r3,#2144
 963 05a8 05D0     	 beq .L49
 539:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               pcb->rcv_wnd++;
 964              	 .loc 1 539 0
 965 05aa FB69     	 ldr r3,[r7,#28]
 966 05ac 1B8D     	 ldrh r3,[r3,#40]
 967 05ae 0133     	 adds r3,r3,#1
 968 05b0 9AB2     	 uxth r2,r3
 969 05b2 FB69     	 ldr r3,[r7,#28]
 970 05b4 1A85     	 strh r2,[r3,#40]
 971              	.L49:
 540:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
 541:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             TCP_EVENT_CLOSED(pcb, err);
 972              	 .loc 1 541 0
 973 05b6 FB69     	 ldr r3,[r7,#28]
 974 05b8 D3F88430 	 ldr r3,[r3,#132]
 975 05bc 002B     	 cmp r3,#0
 976 05be 0CD0     	 beq .L50
 977              	 .loc 1 541 0 is_stmt 0 discriminator 1
 978 05c0 FB69     	 ldr r3,[r7,#28]
 979 05c2 D3F88440 	 ldr r4,[r3,#132]
 980 05c6 FB69     	 ldr r3,[r7,#28]
 981 05c8 1B69     	 ldr r3,[r3,#16]
 982 05ca 1846     	 mov r0,r3
 983 05cc F969     	 ldr r1,[r7,#28]
 984 05ce 0022     	 movs r2,#0
 985 05d0 0023     	 movs r3,#0
 986 05d2 A047     	 blx r4
 987 05d4 0346     	 mov r3,r0
 988 05d6 FB74     	 strb r3,[r7,#19]
 989 05d8 01E0     	 b .L51
 990              	.L50:
 991              	 .loc 1 541 0 discriminator 2
 992 05da 0023     	 movs r3,#0
 993 05dc FB74     	 strb r3,[r7,#19]
 994              	.L51:
 542:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (err == ERR_ABRT) {
 995              	 .loc 1 542 0 is_stmt 1
 996 05de 97F91330 	 ldrsb r3,[r7,#19]
 997 05e2 13F10D0F 	 cmn r3,#13
 998 05e6 00D1     	 bne .L47
 543:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               goto aborted;
 999              	 .loc 1 543 0
 1000 05e8 0CE0     	 b .L34
 1001              	.L47:
 544:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
 545:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
 546:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
 547:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 548:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_input_pcb = NULL;
 1002              	 .loc 1 548 0
 1003 05ea 2B4B     	 ldr r3,.L60+8
 1004 05ec 0022     	 movs r2,#0
 1005 05ee 1A60     	 str r2,[r3]
 549:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (tcp_input_delayed_close(pcb)) {
 1006              	 .loc 1 549 0
 1007 05f0 F869     	 ldr r0,[r7,#28]
 1008 05f2 FFF7FEFF 	 bl tcp_input_delayed_close
 1009 05f6 0346     	 mov r3,r0
 1010 05f8 002B     	 cmp r3,#0
 1011 05fa 00D0     	 beq .L52
 550:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           goto aborted;
 1012              	 .loc 1 550 0
 1013 05fc 02E0     	 b .L34
 1014              	.L52:
 551:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
 552:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* Try to send something out. */
 553:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_output(pcb);
 1015              	 .loc 1 553 0
 1016 05fe F869     	 ldr r0,[r7,#28]
 1017 0600 FFF7FEFF 	 bl tcp_output
 1018              	.L34:
 554:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_INPUT_DEBUG
 555:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_DEBUG
 556:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_debug_print_state(pcb->state);
 557:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_DEBUG */
 558:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_INPUT_DEBUG */
 559:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
 560:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 561:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* Jump target if pcb has been aborted in a callback (by calling tcp_abort()).
 562:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        Below this line, 'pcb' may not be dereferenced! */
 563:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** aborted:
 564:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     tcp_input_pcb = NULL;
 1019              	 .loc 1 564 0
 1020 0604 244B     	 ldr r3,.L60+8
 1021 0606 0022     	 movs r2,#0
 1022 0608 1A60     	 str r2,[r3]
 565:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     recv_data = NULL;
 1023              	 .loc 1 565 0
 1024 060a 214B     	 ldr r3,.L60
 1025 060c 0022     	 movs r2,#0
 1026 060e 1A60     	 str r2,[r3]
 566:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 567:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* give up our reference to inseg.p */
 568:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (inseg.p != NULL) {
 1027              	 .loc 1 568 0
 1028 0610 224B     	 ldr r3,.L60+12
 1029 0612 5B68     	 ldr r3,[r3,#4]
 1030 0614 002B     	 cmp r3,#0
 1031 0616 33D0     	 beq .L54
 569:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       pbuf_free(inseg.p);
 1032              	 .loc 1 569 0
 1033 0618 204B     	 ldr r3,.L60+12
 1034 061a 5B68     	 ldr r3,[r3,#4]
 1035 061c 1846     	 mov r0,r3
 1036 061e FFF7FEFF 	 bl pbuf_free
 570:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       inseg.p = NULL;
 1037              	 .loc 1 570 0
 1038 0622 1E4B     	 ldr r3,.L60+12
 1039 0624 0022     	 movs r2,#0
 1040 0626 5A60     	 str r2,[r3,#4]
 571:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 572:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   } else {
 573:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* If no matching PCB was found, send a TCP RST (reset) to the
 574:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        sender. */
 575:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     LWIP_DEBUGF(TCP_RST_DEBUG, ("tcp_input: no PCB match found, resetting.\n"));
 576:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (!(TCPH_FLAGS(tcphdr) & TCP_RST)) {
 577:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       TCP_STATS_INC(tcp.proterr);
 578:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       TCP_STATS_INC(tcp.drop);
 579:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       tcp_rst(NULL, ackno, seqno + tcplen, ip_current_dest_addr(),
 580:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               ip_current_src_addr(), tcphdr->dest, tcphdr->src);
 581:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 582:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     pbuf_free(p);
 583:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 584:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 585:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   LWIP_ASSERT("tcp_input: tcp_pcbs_sane()", tcp_pcbs_sane());
 586:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   PERF_STOP("tcp_input");
 587:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   return;
 1041              	 .loc 1 587 0
 1042 0628 2EE0     	 b .L1
 1043              	.L29:
 576:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       TCP_STATS_INC(tcp.proterr);
 1044              	 .loc 1 576 0
 1045 062a 1D4B     	 ldr r3,.L60+16
 1046 062c 1B68     	 ldr r3,[r3]
 1047 062e 9B89     	 ldrh r3,[r3,#12]
 1048 0630 9BB2     	 uxth r3,r3
 1049 0632 1846     	 mov r0,r3
 1050 0634 FFF7FEFF 	 bl lwip_htons
 1051 0638 0346     	 mov r3,r0
 1052 063a DBB2     	 uxtb r3,r3
 1053 063c 03F00403 	 and r3,r3,#4
 1054 0640 002B     	 cmp r3,#0
 1055 0642 19D1     	 bne .L55
 579:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               ip_current_src_addr(), tcphdr->dest, tcphdr->src);
 1056              	 .loc 1 579 0
 1057 0644 174B     	 ldr r3,.L60+20
 1058 0646 1D68     	 ldr r5,[r3]
 1059 0648 174B     	 ldr r3,.L60+24
 1060 064a 1B88     	 ldrh r3,[r3]
 1061 064c 1A46     	 mov r2,r3
 1062 064e 174B     	 ldr r3,.L60+28
 1063 0650 1B68     	 ldr r3,[r3]
 1064 0652 D418     	 adds r4,r2,r3
 580:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 1065              	 .loc 1 580 0
 1066 0654 124B     	 ldr r3,.L60+16
 1067 0656 1B68     	 ldr r3,[r3]
 579:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               ip_current_src_addr(), tcphdr->dest, tcphdr->src);
 1068              	 .loc 1 579 0
 1069 0658 5B88     	 ldrh r3,[r3,#2]
 1070 065a 9AB2     	 uxth r2,r3
 580:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 1071              	 .loc 1 580 0
 1072 065c 104B     	 ldr r3,.L60+16
 1073 065e 1B68     	 ldr r3,[r3]
 579:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               ip_current_src_addr(), tcphdr->dest, tcphdr->src);
 1074              	 .loc 1 579 0
 1075 0660 1B88     	 ldrh r3,[r3]
 1076 0662 9BB2     	 uxth r3,r3
 1077 0664 1249     	 ldr r1,.L60+32
 1078 0666 0091     	 str r1,[sp]
 1079 0668 0192     	 str r2,[sp,#4]
 1080 066a 0293     	 str r3,[sp,#8]
 1081 066c 0020     	 movs r0,#0
 1082 066e 2946     	 mov r1,r5
 1083 0670 2246     	 mov r2,r4
 1084 0672 104B     	 ldr r3,.L60+36
 1085 0674 FFF7FEFF 	 bl tcp_rst
 1086              	.L55:
 582:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 1087              	 .loc 1 582 0
 1088 0678 7868     	 ldr r0,[r7,#4]
 1089 067a FFF7FEFF 	 bl pbuf_free
 1090              	 .loc 1 587 0
 1091 067e 03E0     	 b .L1
 1092              	.L54:
 1093              	 .loc 1 587 0 is_stmt 0 discriminator 1
 1094 0680 02E0     	 b .L1
 1095              	.L3:
 588:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** dropped:
 589:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   TCP_STATS_INC(tcp.drop);
 590:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   MIB2_STATS_INC(mib2.tcpinerrs);
 591:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   pbuf_free(p);
 1096              	 .loc 1 591 0 is_stmt 1
 1097 0682 7868     	 ldr r0,[r7,#4]
 1098 0684 FFF7FEFF 	 bl pbuf_free
 1099              	.L1:
 592:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** }
 1100              	 .loc 1 592 0
 1101 0688 2037     	 adds r7,r7,#32
 1102              	.LCFI3:
 1103              	 .cfi_def_cfa_offset 16
 1104 068a BD46     	 mov sp,r7
 1105              	.LCFI4:
 1106              	 .cfi_def_cfa_register 13
 1107              	 
 1108 068c B0BD     	 pop {r4,r5,r7,pc}
 1109              	.L61:
 1110 068e 00BF     	 .align 2
 1111              	.L60:
 1112 0690 00000000 	 .word recv_data
 1113 0694 00000000 	 .word recv_flags
 1114 0698 00000000 	 .word tcp_input_pcb
 1115 069c 00000000 	 .word inseg
 1116 06a0 00000000 	 .word tcphdr
 1117 06a4 00000000 	 .word ackno
 1118 06a8 00000000 	 .word tcplen
 1119 06ac 00000000 	 .word seqno
 1120 06b0 10000000 	 .word ip_data+16
 1121 06b4 14000000 	 .word ip_data+20
 1122              	 .cfi_endproc
 1123              	.LFE133:
 1125              	 .section .text.tcp_input_delayed_close,"ax",%progbits
 1126              	 .align 2
 1127              	 .thumb
 1128              	 .thumb_func
 1130              	tcp_input_delayed_close:
 1131              	.LFB134:
 593:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 594:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** /** Called from tcp_input to check for TF_CLOSED flag. This results in closing
 595:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * and deallocating a pcb at the correct place to ensure noone references it
 596:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * any more.
 597:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * @returns 1 if the pcb has been closed and deallocated, 0 otherwise
 598:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  */
 599:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static int
 600:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** tcp_input_delayed_close(struct tcp_pcb *pcb)
 601:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** {
 1132              	 .loc 1 601 0
 1133              	 .cfi_startproc
 1134              	 
 1135              	 
 1136 0000 80B5     	 push {r7,lr}
 1137              	.LCFI5:
 1138              	 .cfi_def_cfa_offset 8
 1139              	 .cfi_offset 7,-8
 1140              	 .cfi_offset 14,-4
 1141 0002 82B0     	 sub sp,sp,#8
 1142              	.LCFI6:
 1143              	 .cfi_def_cfa_offset 16
 1144 0004 00AF     	 add r7,sp,#0
 1145              	.LCFI7:
 1146              	 .cfi_def_cfa_register 7
 1147 0006 7860     	 str r0,[r7,#4]
 602:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   LWIP_ASSERT("tcp_input_delayed_close: invalid pcb", pcb != NULL);
 603:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 604:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if (recv_flags & TF_CLOSED) {
 1148              	 .loc 1 604 0
 1149 0008 134B     	 ldr r3,.L66
 1150 000a 1B78     	 ldrb r3,[r3]
 1151 000c 03F01003 	 and r3,r3,#16
 1152 0010 002B     	 cmp r3,#0
 1153 0012 1CD0     	 beq .L63
 605:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* The connection has been closed and we will deallocate the
 606:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         PCB. */
 607:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (!(pcb->flags & TF_RXCLOSED)) {
 1154              	 .loc 1 607 0
 1155 0014 7B68     	 ldr r3,[r7,#4]
 1156 0016 5B8B     	 ldrh r3,[r3,#26]
 1157 0018 03F01003 	 and r3,r3,#16
 1158 001c 002B     	 cmp r3,#0
 1159 001e 0DD1     	 bne .L64
 608:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* Connection closed although the application has only shut down the
 609:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tx side: call the PCB's err callback and indicate the closure to
 610:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           ensure the application doesn't continue using the PCB. */
 611:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       TCP_EVENT_ERR(pcb->state, pcb->errf, pcb->callback_arg, ERR_CLSD);
 1160              	 .loc 1 611 0
 1161 0020 7B68     	 ldr r3,[r7,#4]
 1162 0022 D3F89030 	 ldr r3,[r3,#144]
 1163 0026 002B     	 cmp r3,#0
 1164 0028 08D0     	 beq .L64
 1165              	 .loc 1 611 0 is_stmt 0 discriminator 1
 1166 002a 7B68     	 ldr r3,[r7,#4]
 1167 002c D3F89030 	 ldr r3,[r3,#144]
 1168 0030 7A68     	 ldr r2,[r7,#4]
 1169 0032 1269     	 ldr r2,[r2,#16]
 1170 0034 1046     	 mov r0,r2
 1171 0036 6FF00E01 	 mvn r1,#14
 1172 003a 9847     	 blx r3
 1173              	.L64:
 612:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 613:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     tcp_pcb_remove(&tcp_active_pcbs, pcb);
 1174              	 .loc 1 613 0 is_stmt 1
 1175 003c 0748     	 ldr r0,.L66+4
 1176 003e 7968     	 ldr r1,[r7,#4]
 1177 0040 FFF7FEFF 	 bl tcp_pcb_remove
 614:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     tcp_free(pcb);
 1178              	 .loc 1 614 0
 1179 0044 7868     	 ldr r0,[r7,#4]
 1180 0046 FFF7FEFF 	 bl tcp_free
 615:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     return 1;
 1181              	 .loc 1 615 0
 1182 004a 0123     	 movs r3,#1
 1183 004c 00E0     	 b .L65
 1184              	.L63:
 616:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 617:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   return 0;
 1185              	 .loc 1 617 0
 1186 004e 0023     	 movs r3,#0
 1187              	.L65:
 618:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** }
 1188              	 .loc 1 618 0
 1189 0050 1846     	 mov r0,r3
 1190 0052 0837     	 adds r7,r7,#8
 1191              	.LCFI8:
 1192              	 .cfi_def_cfa_offset 8
 1193 0054 BD46     	 mov sp,r7
 1194              	.LCFI9:
 1195              	 .cfi_def_cfa_register 13
 1196              	 
 1197 0056 80BD     	 pop {r7,pc}
 1198              	.L67:
 1199              	 .align 2
 1200              	.L66:
 1201 0058 00000000 	 .word recv_flags
 1202 005c 00000000 	 .word tcp_active_pcbs
 1203              	 .cfi_endproc
 1204              	.LFE134:
 1206              	 .section .text.tcp_listen_input,"ax",%progbits
 1207              	 .align 2
 1208              	 .thumb
 1209              	 .thumb_func
 1211              	tcp_listen_input:
 1212              	.LFB135:
 619:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 620:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** /**
 621:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * Called by tcp_input() when a segment arrives for a listening
 622:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * connection (from tcp_input()).
 623:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
 624:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * @param pcb the tcp_pcb_listen for which a segment arrived
 625:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
 626:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * @note the segment which arrived is saved in global variables, therefore only the pcb
 627:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *       involved is passed as a parameter to this function
 628:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  */
 629:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static void
 630:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** tcp_listen_input(struct tcp_pcb_listen *pcb)
 631:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** {
 1213              	 .loc 1 631 0
 1214              	 .cfi_startproc
 1215              	 
 1216              	 
 1217 0000 B0B5     	 push {r4,r5,r7,lr}
 1218              	.LCFI10:
 1219              	 .cfi_def_cfa_offset 16
 1220              	 .cfi_offset 4,-16
 1221              	 .cfi_offset 5,-12
 1222              	 .cfi_offset 7,-8
 1223              	 .cfi_offset 14,-4
 1224 0002 8AB0     	 sub sp,sp,#40
 1225              	.LCFI11:
 1226              	 .cfi_def_cfa_offset 56
 1227 0004 04AF     	 add r7,sp,#16
 1228              	.LCFI12:
 1229              	 .cfi_def_cfa 7,40
 1230 0006 7860     	 str r0,[r7,#4]
 632:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   struct tcp_pcb *npcb;
 633:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   u32_t iss;
 634:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   err_t rc;
 635:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 636:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if (flags & TCP_RST) {
 1231              	 .loc 1 636 0
 1232 0008 744B     	 ldr r3,.L78
 1233 000a 1B78     	 ldrb r3,[r3]
 1234 000c 03F00403 	 and r3,r3,#4
 1235 0010 002B     	 cmp r3,#0
 1236 0012 00D0     	 beq .L69
 637:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* An incoming RST should be ignored. Return. */
 638:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     return;
 1237              	 .loc 1 638 0
 1238 0014 DEE0     	 b .L68
 1239              	.L69:
 639:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 640:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 641:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   LWIP_ASSERT("tcp_listen_input: invalid pcb", pcb != NULL);
 642:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 643:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   /* In the LISTEN state, we check for incoming SYN segments,
 644:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      creates a new PCB, and responds with a SYN|ACK. */
 645:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if (flags & TCP_ACK) {
 1240              	 .loc 1 645 0
 1241 0016 714B     	 ldr r3,.L78
 1242 0018 1B78     	 ldrb r3,[r3]
 1243 001a 03F01003 	 and r3,r3,#16
 1244 001e 002B     	 cmp r3,#0
 1245 0020 1AD0     	 beq .L71
 646:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* For incoming segments with the ACK flag set, respond with a
 647:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        RST. */
 648:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     LWIP_DEBUGF(TCP_RST_DEBUG, ("tcp_listen_input: ACK in LISTEN, sending reset\n"));
 649:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     tcp_rst((const struct tcp_pcb *)pcb, ackno, seqno + tcplen, ip_current_dest_addr(),
 1246              	 .loc 1 649 0
 1247 0022 6F4B     	 ldr r3,.L78+4
 1248 0024 1D68     	 ldr r5,[r3]
 1249 0026 6F4B     	 ldr r3,.L78+8
 1250 0028 1B88     	 ldrh r3,[r3]
 1251 002a 1A46     	 mov r2,r3
 1252 002c 6E4B     	 ldr r3,.L78+12
 1253 002e 1B68     	 ldr r3,[r3]
 1254 0030 D418     	 adds r4,r2,r3
 650:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             ip_current_src_addr(), tcphdr->dest, tcphdr->src);
 1255              	 .loc 1 650 0
 1256 0032 6E4B     	 ldr r3,.L78+16
 1257 0034 1B68     	 ldr r3,[r3]
 649:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             ip_current_src_addr(), tcphdr->dest, tcphdr->src);
 1258              	 .loc 1 649 0
 1259 0036 5B88     	 ldrh r3,[r3,#2]
 1260 0038 9AB2     	 uxth r2,r3
 1261              	 .loc 1 650 0
 1262 003a 6C4B     	 ldr r3,.L78+16
 1263 003c 1B68     	 ldr r3,[r3]
 649:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             ip_current_src_addr(), tcphdr->dest, tcphdr->src);
 1264              	 .loc 1 649 0
 1265 003e 1B88     	 ldrh r3,[r3]
 1266 0040 9BB2     	 uxth r3,r3
 1267 0042 6B49     	 ldr r1,.L78+20
 1268 0044 0091     	 str r1,[sp]
 1269 0046 0192     	 str r2,[sp,#4]
 1270 0048 0293     	 str r3,[sp,#8]
 1271 004a 7868     	 ldr r0,[r7,#4]
 1272 004c 2946     	 mov r1,r5
 1273 004e 2246     	 mov r2,r4
 1274 0050 684B     	 ldr r3,.L78+24
 1275 0052 FFF7FEFF 	 bl tcp_rst
 1276 0056 BCE0     	 b .L72
 1277              	.L71:
 651:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   } else if (flags & TCP_SYN) {
 1278              	 .loc 1 651 0
 1279 0058 604B     	 ldr r3,.L78
 1280 005a 1B78     	 ldrb r3,[r3]
 1281 005c 03F00203 	 and r3,r3,#2
 1282 0060 002B     	 cmp r3,#0
 1283 0062 00F0B680 	 beq .L72
 652:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     LWIP_DEBUGF(TCP_DEBUG, ("TCP connection request %"U16_F" -> %"U16_F".\n", tcphdr->src, tcphdr->
 653:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_LISTEN_BACKLOG
 654:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (pcb->accepts_pending >= pcb->backlog) {
 1284              	 .loc 1 654 0
 1285 0066 7B68     	 ldr r3,[r7,#4]
 1286 0068 5A7F     	 ldrb r2,[r3,#29]
 1287 006a 7B68     	 ldr r3,[r7,#4]
 1288 006c 1B7F     	 ldrb r3,[r3,#28]
 1289 006e 9A42     	 cmp r2,r3
 1290 0070 00D3     	 bcc .L73
 655:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_DEBUGF(TCP_DEBUG, ("tcp_listen_input: listen backlog exceeded for port %"U16_F"\n", tcph
 656:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       return;
 1291              	 .loc 1 656 0 discriminator 2
 1292 0072 AFE0     	 b .L68
 1293              	.L73:
 657:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 658:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_LISTEN_BACKLOG */
 659:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     npcb = tcp_alloc(pcb->prio);
 1294              	 .loc 1 659 0
 1295 0074 7B68     	 ldr r3,[r7,#4]
 1296 0076 5B7D     	 ldrb r3,[r3,#21]
 1297 0078 1846     	 mov r0,r3
 1298 007a FFF7FEFF 	 bl tcp_alloc
 1299 007e 7861     	 str r0,[r7,#20]
 660:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* If a new PCB could not be created (probably due to lack of memory),
 661:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        we don't do anything, but rely on the sender will retransmit the
 662:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        SYN at a time when we have more memory available. */
 663:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (npcb == NULL) {
 1300              	 .loc 1 663 0
 1301 0080 7B69     	 ldr r3,[r7,#20]
 1302 0082 002B     	 cmp r3,#0
 1303 0084 12D1     	 bne .L74
 1304              	.LBB4:
 664:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       err_t err;
 665:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_DEBUGF(TCP_DEBUG, ("tcp_listen_input: could not allocate PCB\n"));
 666:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       TCP_STATS_INC(tcp.memerr);
 667:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       TCP_EVENT_ACCEPT(pcb, NULL, pcb->callback_arg, ERR_MEM, err);
 1305              	 .loc 1 667 0
 1306 0086 7B68     	 ldr r3,[r7,#4]
 1307 0088 9B69     	 ldr r3,[r3,#24]
 1308 008a 002B     	 cmp r3,#0
 1309 008c 0BD0     	 beq .L75
 1310              	 .loc 1 667 0 is_stmt 0 discriminator 1
 1311 008e 7B68     	 ldr r3,[r7,#4]
 1312 0090 9B69     	 ldr r3,[r3,#24]
 1313 0092 7A68     	 ldr r2,[r7,#4]
 1314 0094 1269     	 ldr r2,[r2,#16]
 1315 0096 1046     	 mov r0,r2
 1316 0098 0021     	 movs r1,#0
 1317 009a 4FF0FF32 	 mov r2,#-1
 1318 009e 9847     	 blx r3
 1319 00a0 0346     	 mov r3,r0
 1320 00a2 FB74     	 strb r3,[r7,#19]
 668:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_UNUSED_ARG(err); /* err not useful here */
 669:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       return;
 1321              	 .loc 1 669 0 is_stmt 1 discriminator 1
 1322 00a4 96E0     	 b .L68
 1323              	.L75:
 667:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_UNUSED_ARG(err); /* err not useful here */
 1324              	 .loc 1 667 0 discriminator 2
 1325 00a6 F023     	 movs r3,#240
 1326 00a8 FB74     	 strb r3,[r7,#19]
 1327              	 .loc 1 669 0 discriminator 2
 1328 00aa 93E0     	 b .L68
 1329              	.L74:
 1330              	.LBE4:
 670:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 671:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_LISTEN_BACKLOG
 672:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     pcb->accepts_pending++;
 1331              	 .loc 1 672 0
 1332 00ac 7B68     	 ldr r3,[r7,#4]
 1333 00ae 5B7F     	 ldrb r3,[r3,#29]
 1334 00b0 0133     	 adds r3,r3,#1
 1335 00b2 DAB2     	 uxtb r2,r3
 1336 00b4 7B68     	 ldr r3,[r7,#4]
 1337 00b6 5A77     	 strb r2,[r3,#29]
 673:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     tcp_set_flags(npcb, TF_BACKLOGPEND);
 1338              	 .loc 1 673 0
 1339 00b8 7B69     	 ldr r3,[r7,#20]
 1340 00ba 5B8B     	 ldrh r3,[r3,#26]
 1341 00bc 43F40073 	 orr r3,r3,#512
 1342 00c0 9AB2     	 uxth r2,r3
 1343 00c2 7B69     	 ldr r3,[r7,#20]
 1344 00c4 5A83     	 strh r2,[r3,#26]
 674:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_LISTEN_BACKLOG */
 675:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* Set up the new PCB. */
 676:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     ip_addr_copy(npcb->local_ip, *ip_current_dest_addr());
 1345              	 .loc 1 676 0
 1346 00c6 4C4B     	 ldr r3,.L78+28
 1347 00c8 5A69     	 ldr r2,[r3,#20]
 1348 00ca 7B69     	 ldr r3,[r7,#20]
 1349 00cc 1A60     	 str r2,[r3]
 677:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     ip_addr_copy(npcb->remote_ip, *ip_current_src_addr());
 1350              	 .loc 1 677 0
 1351 00ce 4A4B     	 ldr r3,.L78+28
 1352 00d0 1A69     	 ldr r2,[r3,#16]
 1353 00d2 7B69     	 ldr r3,[r7,#20]
 1354 00d4 5A60     	 str r2,[r3,#4]
 678:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     npcb->local_port = pcb->local_port;
 1355              	 .loc 1 678 0
 1356 00d6 7B68     	 ldr r3,[r7,#4]
 1357 00d8 DA8A     	 ldrh r2,[r3,#22]
 1358 00da 7B69     	 ldr r3,[r7,#20]
 1359 00dc DA82     	 strh r2,[r3,#22]
 679:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     npcb->remote_port = tcphdr->src;
 1360              	 .loc 1 679 0
 1361 00de 434B     	 ldr r3,.L78+16
 1362 00e0 1B68     	 ldr r3,[r3]
 1363 00e2 1B88     	 ldrh r3,[r3]
 1364 00e4 9AB2     	 uxth r2,r3
 1365 00e6 7B69     	 ldr r3,[r7,#20]
 1366 00e8 1A83     	 strh r2,[r3,#24]
 680:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     npcb->state = SYN_RCVD;
 1367              	 .loc 1 680 0
 1368 00ea 7B69     	 ldr r3,[r7,#20]
 1369 00ec 0322     	 movs r2,#3
 1370 00ee 1A75     	 strb r2,[r3,#20]
 681:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     npcb->rcv_nxt = seqno + 1;
 1371              	 .loc 1 681 0
 1372 00f0 3D4B     	 ldr r3,.L78+12
 1373 00f2 1B68     	 ldr r3,[r3]
 1374 00f4 5A1C     	 adds r2,r3,#1
 1375 00f6 7B69     	 ldr r3,[r7,#20]
 1376 00f8 5A62     	 str r2,[r3,#36]
 682:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     npcb->rcv_ann_right_edge = npcb->rcv_nxt;
 1377              	 .loc 1 682 0
 1378 00fa 7B69     	 ldr r3,[r7,#20]
 1379 00fc 5A6A     	 ldr r2,[r3,#36]
 1380 00fe 7B69     	 ldr r3,[r7,#20]
 1381 0100 DA62     	 str r2,[r3,#44]
 683:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     iss = tcp_next_iss(npcb);
 1382              	 .loc 1 683 0
 1383 0102 7869     	 ldr r0,[r7,#20]
 1384 0104 FFF7FEFF 	 bl tcp_next_iss
 1385 0108 F860     	 str r0,[r7,#12]
 684:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     npcb->snd_wl2 = iss;
 1386              	 .loc 1 684 0
 1387 010a 7B69     	 ldr r3,[r7,#20]
 1388 010c FA68     	 ldr r2,[r7,#12]
 1389 010e 9A65     	 str r2,[r3,#88]
 685:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     npcb->snd_nxt = iss;
 1390              	 .loc 1 685 0
 1391 0110 7B69     	 ldr r3,[r7,#20]
 1392 0112 FA68     	 ldr r2,[r7,#12]
 1393 0114 1A65     	 str r2,[r3,#80]
 686:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     npcb->lastack = iss;
 1394              	 .loc 1 686 0
 1395 0116 7B69     	 ldr r3,[r7,#20]
 1396 0118 FA68     	 ldr r2,[r7,#12]
 1397 011a 5A64     	 str r2,[r3,#68]
 687:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     npcb->snd_lbb = iss;
 1398              	 .loc 1 687 0
 1399 011c 7B69     	 ldr r3,[r7,#20]
 1400 011e FA68     	 ldr r2,[r7,#12]
 1401 0120 DA65     	 str r2,[r3,#92]
 688:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     npcb->snd_wl1 = seqno - 1;/* initialise to seqno-1 to force window update */
 1402              	 .loc 1 688 0
 1403 0122 314B     	 ldr r3,.L78+12
 1404 0124 1B68     	 ldr r3,[r3]
 1405 0126 5A1E     	 subs r2,r3,#1
 1406 0128 7B69     	 ldr r3,[r7,#20]
 1407 012a 5A65     	 str r2,[r3,#84]
 689:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     npcb->callback_arg = pcb->callback_arg;
 1408              	 .loc 1 689 0
 1409 012c 7B68     	 ldr r3,[r7,#4]
 1410 012e 1A69     	 ldr r2,[r3,#16]
 1411 0130 7B69     	 ldr r3,[r7,#20]
 1412 0132 1A61     	 str r2,[r3,#16]
 690:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_CALLBACK_API || TCP_LISTEN_BACKLOG
 691:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     npcb->listener = pcb;
 1413              	 .loc 1 691 0
 1414 0134 7B69     	 ldr r3,[r7,#20]
 1415 0136 7A68     	 ldr r2,[r7,#4]
 1416 0138 DA67     	 str r2,[r3,#124]
 692:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* LWIP_CALLBACK_API || TCP_LISTEN_BACKLOG */
 693:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* inherit socket options */
 694:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     npcb->so_options = pcb->so_options & SOF_INHERITED;
 1417              	 .loc 1 694 0
 1418 013a 7B68     	 ldr r3,[r7,#4]
 1419 013c 5B7A     	 ldrb r3,[r3,#9]
 1420 013e 03F00C03 	 and r3,r3,#12
 1421 0142 DAB2     	 uxtb r2,r3
 1422 0144 7B69     	 ldr r3,[r7,#20]
 1423 0146 5A72     	 strb r2,[r3,#9]
 695:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     npcb->netif_idx = pcb->netif_idx;
 1424              	 .loc 1 695 0
 1425 0148 7B68     	 ldr r3,[r7,#4]
 1426 014a 1A7A     	 ldrb r2,[r3,#8]
 1427 014c 7B69     	 ldr r3,[r7,#20]
 1428 014e 1A72     	 strb r2,[r3,#8]
 696:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* Register the new PCB so that we can begin receiving segments
 697:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        for it. */
 698:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     TCP_REG_ACTIVE(npcb);
 1429              	 .loc 1 698 0
 1430 0150 2A4B     	 ldr r3,.L78+32
 1431 0152 1A68     	 ldr r2,[r3]
 1432 0154 7B69     	 ldr r3,[r7,#20]
 1433 0156 DA60     	 str r2,[r3,#12]
 1434 0158 284A     	 ldr r2,.L78+32
 1435 015a 7B69     	 ldr r3,[r7,#20]
 1436 015c 1360     	 str r3,[r2]
 1437 015e FFF7FEFF 	 bl tcp_timer_needed
 1438 0162 274B     	 ldr r3,.L78+36
 1439 0164 0122     	 movs r2,#1
 1440 0166 1A70     	 strb r2,[r3]
 699:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 700:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* Parse any options in the SYN. */
 701:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     tcp_parseopt(npcb);
 1441              	 .loc 1 701 0
 1442 0168 7869     	 ldr r0,[r7,#20]
 1443 016a FFF7FEFF 	 bl tcp_parseopt
 702:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     npcb->snd_wnd = tcphdr->wnd;
 1444              	 .loc 1 702 0
 1445 016e 1F4B     	 ldr r3,.L78+16
 1446 0170 1B68     	 ldr r3,[r3]
 1447 0172 DB89     	 ldrh r3,[r3,#14]
 1448 0174 9AB2     	 uxth r2,r3
 1449 0176 7B69     	 ldr r3,[r7,#20]
 1450 0178 A3F86020 	 strh r2,[r3,#96]
 703:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     npcb->snd_wnd_max = npcb->snd_wnd;
 1451              	 .loc 1 703 0
 1452 017c 7B69     	 ldr r3,[r7,#20]
 1453 017e B3F86020 	 ldrh r2,[r3,#96]
 1454 0182 7B69     	 ldr r3,[r7,#20]
 1455 0184 A3F86220 	 strh r2,[r3,#98]
 704:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 705:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_CALCULATE_EFF_SEND_MSS
 706:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     npcb->mss = tcp_eff_send_mss(npcb->mss, &npcb->local_ip, &npcb->remote_ip);
 1456              	 .loc 1 706 0
 1457 0188 7B69     	 ldr r3,[r7,#20]
 1458 018a 5C8E     	 ldrh r4,[r3,#50]
 1459 018c 7B69     	 ldr r3,[r7,#20]
 1460 018e 0433     	 adds r3,r3,#4
 1461 0190 1846     	 mov r0,r3
 1462 0192 FFF7FEFF 	 bl ip4_route
 1463 0196 0246     	 mov r2,r0
 1464 0198 7B69     	 ldr r3,[r7,#20]
 1465 019a 0433     	 adds r3,r3,#4
 1466 019c 2046     	 mov r0,r4
 1467 019e 1146     	 mov r1,r2
 1468 01a0 1A46     	 mov r2,r3
 1469 01a2 FFF7FEFF 	 bl tcp_eff_send_mss_netif
 1470 01a6 0346     	 mov r3,r0
 1471 01a8 1A46     	 mov r2,r3
 1472 01aa 7B69     	 ldr r3,[r7,#20]
 1473 01ac 5A86     	 strh r2,[r3,#50]
 707:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_CALCULATE_EFF_SEND_MSS */
 708:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 709:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     MIB2_STATS_INC(mib2.tcppassiveopens);
 710:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 711:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_TCP_PCB_NUM_EXT_ARGS
 712:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (tcp_ext_arg_invoke_callbacks_passive_open(pcb, npcb) != ERR_OK) {
 713:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       tcp_abandon(npcb, 0);
 714:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       return;
 715:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 716:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif
 717:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 718:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* Send a SYN|ACK together with the MSS option. */
 719:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     rc = tcp_enqueue_flags(npcb, TCP_SYN | TCP_ACK);
 1474              	 .loc 1 719 0
 1475 01ae 7869     	 ldr r0,[r7,#20]
 1476 01b0 1221     	 movs r1,#18
 1477 01b2 FFF7FEFF 	 bl tcp_enqueue_flags
 1478 01b6 0346     	 mov r3,r0
 1479 01b8 FB72     	 strb r3,[r7,#11]
 720:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (rc != ERR_OK) {
 1480              	 .loc 1 720 0
 1481 01ba 97F90B30 	 ldrsb r3,[r7,#11]
 1482 01be 002B     	 cmp r3,#0
 1483 01c0 04D0     	 beq .L77
 721:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       tcp_abandon(npcb, 0);
 1484              	 .loc 1 721 0
 1485 01c2 7869     	 ldr r0,[r7,#20]
 1486 01c4 0021     	 movs r1,#0
 1487 01c6 FFF7FEFF 	 bl tcp_abandon
 722:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       return;
 1488              	 .loc 1 722 0
 1489 01ca 03E0     	 b .L68
 1490              	.L77:
 723:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 724:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     tcp_output(npcb);
 1491              	 .loc 1 724 0
 1492 01cc 7869     	 ldr r0,[r7,#20]
 1493 01ce FFF7FEFF 	 bl tcp_output
 1494              	.L72:
 725:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 726:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   return;
 1495              	 .loc 1 726 0 discriminator 4
 1496 01d2 00BF     	 nop
 1497              	.L68:
 727:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** }
 1498              	 .loc 1 727 0
 1499 01d4 1837     	 adds r7,r7,#24
 1500              	.LCFI13:
 1501              	 .cfi_def_cfa_offset 16
 1502 01d6 BD46     	 mov sp,r7
 1503              	.LCFI14:
 1504              	 .cfi_def_cfa_register 13
 1505              	 
 1506 01d8 B0BD     	 pop {r4,r5,r7,pc}
 1507              	.L79:
 1508 01da 00BF     	 .align 2
 1509              	.L78:
 1510 01dc 00000000 	 .word flags
 1511 01e0 00000000 	 .word ackno
 1512 01e4 00000000 	 .word tcplen
 1513 01e8 00000000 	 .word seqno
 1514 01ec 00000000 	 .word tcphdr
 1515 01f0 10000000 	 .word ip_data+16
 1516 01f4 14000000 	 .word ip_data+20
 1517 01f8 00000000 	 .word ip_data
 1518 01fc 00000000 	 .word tcp_active_pcbs
 1519 0200 00000000 	 .word tcp_active_pcbs_changed
 1520              	 .cfi_endproc
 1521              	.LFE135:
 1523              	 .section .text.tcp_timewait_input,"ax",%progbits
 1524              	 .align 2
 1525              	 .thumb
 1526              	 .thumb_func
 1528              	tcp_timewait_input:
 1529              	.LFB136:
 728:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 729:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** /**
 730:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * Called by tcp_input() when a segment arrives for a connection in
 731:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * TIME_WAIT.
 732:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
 733:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * @param pcb the tcp_pcb for which a segment arrived
 734:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
 735:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * @note the segment which arrived is saved in global variables, therefore only the pcb
 736:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *       involved is passed as a parameter to this function
 737:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  */
 738:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static void
 739:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** tcp_timewait_input(struct tcp_pcb *pcb)
 740:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** {
 1530              	 .loc 1 740 0
 1531              	 .cfi_startproc
 1532              	 
 1533              	 
 1534 0000 B0B5     	 push {r4,r5,r7,lr}
 1535              	.LCFI15:
 1536              	 .cfi_def_cfa_offset 16
 1537              	 .cfi_offset 4,-16
 1538              	 .cfi_offset 5,-12
 1539              	 .cfi_offset 7,-8
 1540              	 .cfi_offset 14,-4
 1541 0002 86B0     	 sub sp,sp,#24
 1542              	.LCFI16:
 1543              	 .cfi_def_cfa_offset 40
 1544 0004 04AF     	 add r7,sp,#16
 1545              	.LCFI17:
 1546              	 .cfi_def_cfa 7,24
 1547 0006 7860     	 str r0,[r7,#4]
 741:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   /* RFC 1337: in TIME_WAIT, ignore RST and ACK FINs + any 'acceptable' segments */
 742:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   /* RFC 793 3.9 Event Processing - Segment Arrives:
 743:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****    * - first check sequence number - we skip that one in TIME_WAIT (always
 744:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****    *   acceptable since we only send ACKs)
 745:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****    * - second check the RST bit (... return) */
 746:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if (flags & TCP_RST) {
 1548              	 .loc 1 746 0
 1549 0008 2A4B     	 ldr r3,.L86
 1550 000a 1B78     	 ldrb r3,[r3]
 1551 000c 03F00403 	 and r3,r3,#4
 1552 0010 002B     	 cmp r3,#0
 1553 0012 00D0     	 beq .L81
 747:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     return;
 1554              	 .loc 1 747 0
 1555 0014 4AE0     	 b .L80
 1556              	.L81:
 748:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 749:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 750:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   LWIP_ASSERT("tcp_timewait_input: invalid pcb", pcb != NULL);
 751:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 752:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   /* - fourth, check the SYN bit, */
 753:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if (flags & TCP_SYN) {
 1557              	 .loc 1 753 0
 1558 0016 274B     	 ldr r3,.L86
 1559 0018 1B78     	 ldrb r3,[r3]
 1560 001a 03F00203 	 and r3,r3,#2
 1561 001e 002B     	 cmp r3,#0
 1562 0020 2BD0     	 beq .L83
 754:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* If an incoming segment is not acceptable, an acknowledgment
 755:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        should be sent in reply */
 756:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (TCP_SEQ_BETWEEN(seqno, pcb->rcv_nxt, pcb->rcv_nxt + pcb->rcv_wnd)) {
 1563              	 .loc 1 756 0
 1564 0022 254B     	 ldr r3,.L86+4
 1565 0024 1A68     	 ldr r2,[r3]
 1566 0026 7B68     	 ldr r3,[r7,#4]
 1567 0028 5B6A     	 ldr r3,[r3,#36]
 1568 002a D31A     	 subs r3,r2,r3
 1569 002c 002B     	 cmp r3,#0
 1570 002e 2EDB     	 blt .L84
 1571              	 .loc 1 756 0 is_stmt 0 discriminator 1
 1572 0030 214B     	 ldr r3,.L86+4
 1573 0032 1A68     	 ldr r2,[r3]
 1574 0034 7B68     	 ldr r3,[r7,#4]
 1575 0036 5B6A     	 ldr r3,[r3,#36]
 1576 0038 7968     	 ldr r1,[r7,#4]
 1577 003a 098D     	 ldrh r1,[r1,#40]
 1578 003c 0B44     	 add r3,r3,r1
 1579 003e D31A     	 subs r3,r2,r3
 1580 0040 002B     	 cmp r3,#0
 1581 0042 24DC     	 bgt .L84
 757:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* If the SYN is in the window it is an error, send a reset */
 758:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       tcp_rst(pcb, ackno, seqno + tcplen, ip_current_dest_addr(),
 1582              	 .loc 1 758 0 is_stmt 1
 1583 0044 1D4B     	 ldr r3,.L86+8
 1584 0046 1D68     	 ldr r5,[r3]
 1585 0048 1D4B     	 ldr r3,.L86+12
 1586 004a 1B88     	 ldrh r3,[r3]
 1587 004c 1A46     	 mov r2,r3
 1588 004e 1A4B     	 ldr r3,.L86+4
 1589 0050 1B68     	 ldr r3,[r3]
 1590 0052 D418     	 adds r4,r2,r3
 759:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               ip_current_src_addr(), tcphdr->dest, tcphdr->src);
 1591              	 .loc 1 759 0
 1592 0054 1B4B     	 ldr r3,.L86+16
 1593 0056 1B68     	 ldr r3,[r3]
 758:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               ip_current_src_addr(), tcphdr->dest, tcphdr->src);
 1594              	 .loc 1 758 0
 1595 0058 5B88     	 ldrh r3,[r3,#2]
 1596 005a 9AB2     	 uxth r2,r3
 1597              	 .loc 1 759 0
 1598 005c 194B     	 ldr r3,.L86+16
 1599 005e 1B68     	 ldr r3,[r3]
 758:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               ip_current_src_addr(), tcphdr->dest, tcphdr->src);
 1600              	 .loc 1 758 0
 1601 0060 1B88     	 ldrh r3,[r3]
 1602 0062 9BB2     	 uxth r3,r3
 1603 0064 1849     	 ldr r1,.L86+20
 1604 0066 0091     	 str r1,[sp]
 1605 0068 0192     	 str r2,[sp,#4]
 1606 006a 0293     	 str r3,[sp,#8]
 1607 006c 7868     	 ldr r0,[r7,#4]
 1608 006e 2946     	 mov r1,r5
 1609 0070 2246     	 mov r2,r4
 1610 0072 164B     	 ldr r3,.L86+24
 1611 0074 FFF7FEFF 	 bl tcp_rst
 760:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       return;
 1612              	 .loc 1 760 0
 1613 0078 18E0     	 b .L80
 1614              	.L83:
 761:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 762:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   } else if (flags & TCP_FIN) {
 1615              	 .loc 1 762 0
 1616 007a 0E4B     	 ldr r3,.L86
 1617 007c 1B78     	 ldrb r3,[r3]
 1618 007e 03F00103 	 and r3,r3,#1
 1619 0082 002B     	 cmp r3,#0
 1620 0084 03D0     	 beq .L84
 763:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* - eighth, check the FIN bit: Remain in the TIME-WAIT state.
 764:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          Restart the 2 MSL time-wait timeout.*/
 765:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     pcb->tmr = tcp_ticks;
 1621              	 .loc 1 765 0
 1622 0086 124B     	 ldr r3,.L86+28
 1623 0088 1A68     	 ldr r2,[r3]
 1624 008a 7B68     	 ldr r3,[r7,#4]
 1625 008c 1A62     	 str r2,[r3,#32]
 1626              	.L84:
 766:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 767:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 768:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if ((tcplen > 0)) {
 1627              	 .loc 1 768 0
 1628 008e 0C4B     	 ldr r3,.L86+12
 1629 0090 1B88     	 ldrh r3,[r3]
 1630 0092 002B     	 cmp r3,#0
 1631 0094 09D0     	 beq .L85
 769:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* Acknowledge data, FIN or out-of-window SYN */
 770:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     tcp_ack_now(pcb);
 1632              	 .loc 1 770 0
 1633 0096 7B68     	 ldr r3,[r7,#4]
 1634 0098 5B8B     	 ldrh r3,[r3,#26]
 1635 009a 43F00203 	 orr r3,r3,#2
 1636 009e 9AB2     	 uxth r2,r3
 1637 00a0 7B68     	 ldr r3,[r7,#4]
 1638 00a2 5A83     	 strh r2,[r3,#26]
 771:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     tcp_output(pcb);
 1639              	 .loc 1 771 0
 1640 00a4 7868     	 ldr r0,[r7,#4]
 1641 00a6 FFF7FEFF 	 bl tcp_output
 1642              	.L85:
 772:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 773:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   return;
 1643              	 .loc 1 773 0 discriminator 2
 1644 00aa 00BF     	 nop
 1645              	.L80:
 774:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** }
 1646              	 .loc 1 774 0
 1647 00ac 0837     	 adds r7,r7,#8
 1648              	.LCFI18:
 1649              	 .cfi_def_cfa_offset 16
 1650 00ae BD46     	 mov sp,r7
 1651              	.LCFI19:
 1652              	 .cfi_def_cfa_register 13
 1653              	 
 1654 00b0 B0BD     	 pop {r4,r5,r7,pc}
 1655              	.L87:
 1656 00b2 00BF     	 .align 2
 1657              	.L86:
 1658 00b4 00000000 	 .word flags
 1659 00b8 00000000 	 .word seqno
 1660 00bc 00000000 	 .word ackno
 1661 00c0 00000000 	 .word tcplen
 1662 00c4 00000000 	 .word tcphdr
 1663 00c8 10000000 	 .word ip_data+16
 1664 00cc 14000000 	 .word ip_data+20
 1665 00d0 00000000 	 .word tcp_ticks
 1666              	 .cfi_endproc
 1667              	.LFE136:
 1669              	 .section .text.tcp_process,"ax",%progbits
 1670              	 .align 2
 1671              	 .thumb
 1672              	 .thumb_func
 1674              	tcp_process:
 1675              	.LFB137:
 775:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 776:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** /**
 777:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * Implements the TCP state machine. Called by tcp_input. In some
 778:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * states tcp_receive() is called to receive data. The tcp_seg
 779:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * argument will be freed by the caller (tcp_input()) unless the
 780:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * recv_data pointer in the pcb is set.
 781:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
 782:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * @param pcb the tcp_pcb for which a segment arrived
 783:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
 784:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * @note the segment which arrived is saved in global variables, therefore only the pcb
 785:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *       involved is passed as a parameter to this function
 786:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  */
 787:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static err_t
 788:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** tcp_process(struct tcp_pcb *pcb)
 789:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** {
 1676              	 .loc 1 789 0
 1677              	 .cfi_startproc
 1678              	 
 1679              	 
 1680 0000 B0B5     	 push {r4,r5,r7,lr}
 1681              	.LCFI20:
 1682              	 .cfi_def_cfa_offset 16
 1683              	 .cfi_offset 4,-16
 1684              	 .cfi_offset 5,-12
 1685              	 .cfi_offset 7,-8
 1686              	 .cfi_offset 14,-4
 1687 0002 8CB0     	 sub sp,sp,#48
 1688              	.LCFI21:
 1689              	 .cfi_def_cfa_offset 64
 1690 0004 04AF     	 add r7,sp,#16
 1691              	.LCFI22:
 1692              	 .cfi_def_cfa 7,48
 1693 0006 7860     	 str r0,[r7,#4]
 790:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   struct tcp_seg *rseg;
 791:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   u8_t acceptable = 0;
 1694              	 .loc 1 791 0
 1695 0008 0023     	 movs r3,#0
 1696 000a FB76     	 strb r3,[r7,#27]
 792:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   err_t err;
 793:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 794:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   err = ERR_OK;
 1697              	 .loc 1 794 0
 1698 000c 0023     	 movs r3,#0
 1699 000e BB76     	 strb r3,[r7,#26]
 795:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 796:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   LWIP_ASSERT("tcp_process: invalid pcb", pcb != NULL);
 797:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 798:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   /* Process incoming RST segments. */
 799:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if (flags & TCP_RST) {
 1700              	 .loc 1 799 0
 1701 0010 A14B     	 ldr r3,.L160
 1702 0012 1B78     	 ldrb r3,[r3]
 1703 0014 03F00403 	 and r3,r3,#4
 1704 0018 002B     	 cmp r3,#0
 1705 001a 42D0     	 beq .L89
 800:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* First, determine if the reset is acceptable. */
 801:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (pcb->state == SYN_SENT) {
 1706              	 .loc 1 801 0
 1707 001c 7B68     	 ldr r3,[r7,#4]
 1708 001e 1B7D     	 ldrb r3,[r3,#20]
 1709 0020 022B     	 cmp r3,#2
 1710 0022 08D1     	 bne .L90
 802:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* "In the SYN-SENT state (a RST received in response to an initial SYN),
 803:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           the RST is acceptable if the ACK field acknowledges the SYN." */
 804:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (ackno == pcb->snd_nxt) {
 1711              	 .loc 1 804 0
 1712 0024 7B68     	 ldr r3,[r7,#4]
 1713 0026 1A6D     	 ldr r2,[r3,#80]
 1714 0028 9C4B     	 ldr r3,.L160+4
 1715 002a 1B68     	 ldr r3,[r3]
 1716 002c 9A42     	 cmp r2,r3
 1717 002e 23D1     	 bne .L92
 805:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         acceptable = 1;
 1718              	 .loc 1 805 0
 1719 0030 0123     	 movs r3,#1
 1720 0032 FB76     	 strb r3,[r7,#27]
 1721 0034 20E0     	 b .L92
 1722              	.L90:
 806:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
 807:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     } else {
 808:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* "In all states except SYN-SENT, all reset (RST) segments are validated
 809:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           by checking their SEQ-fields." */
 810:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (seqno == pcb->rcv_nxt) {
 1723              	 .loc 1 810 0
 1724 0036 7B68     	 ldr r3,[r7,#4]
 1725 0038 5A6A     	 ldr r2,[r3,#36]
 1726 003a 994B     	 ldr r3,.L160+8
 1727 003c 1B68     	 ldr r3,[r3]
 1728 003e 9A42     	 cmp r2,r3
 1729 0040 02D1     	 bne .L93
 811:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         acceptable = 1;
 1730              	 .loc 1 811 0
 1731 0042 0123     	 movs r3,#1
 1732 0044 FB76     	 strb r3,[r7,#27]
 1733 0046 17E0     	 b .L92
 1734              	.L93:
 812:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       } else  if (TCP_SEQ_BETWEEN(seqno, pcb->rcv_nxt,
 1735              	 .loc 1 812 0
 1736 0048 954B     	 ldr r3,.L160+8
 1737 004a 1A68     	 ldr r2,[r3]
 1738 004c 7B68     	 ldr r3,[r7,#4]
 1739 004e 5B6A     	 ldr r3,[r3,#36]
 1740 0050 D31A     	 subs r3,r2,r3
 1741 0052 002B     	 cmp r3,#0
 1742 0054 10DB     	 blt .L92
 1743              	 .loc 1 812 0 is_stmt 0 discriminator 1
 1744 0056 924B     	 ldr r3,.L160+8
 1745 0058 1A68     	 ldr r2,[r3]
 1746 005a 7B68     	 ldr r3,[r7,#4]
 1747 005c 5B6A     	 ldr r3,[r3,#36]
 1748 005e 7968     	 ldr r1,[r7,#4]
 1749 0060 098D     	 ldrh r1,[r1,#40]
 1750 0062 0B44     	 add r3,r3,r1
 1751 0064 D31A     	 subs r3,r2,r3
 1752 0066 002B     	 cmp r3,#0
 1753 0068 06DC     	 bgt .L92
 813:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                   pcb->rcv_nxt + pcb->rcv_wnd)) {
 814:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* If the sequence number is inside the window, we send a challenge ACK
 815:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            and wait for a re-send with matching sequence number.
 816:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            This follows RFC 5961 section 3.2 and addresses CVE-2004-0230
 817:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            (RST spoofing attack), which is present in RFC 793 RST handling. */
 818:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_ack_now(pcb);
 1754              	 .loc 1 818 0 is_stmt 1
 1755 006a 7B68     	 ldr r3,[r7,#4]
 1756 006c 5B8B     	 ldrh r3,[r3,#26]
 1757 006e 43F00203 	 orr r3,r3,#2
 1758 0072 9AB2     	 uxth r2,r3
 1759 0074 7B68     	 ldr r3,[r7,#4]
 1760 0076 5A83     	 strh r2,[r3,#26]
 1761              	.L92:
 819:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
 820:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 821:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 822:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (acceptable) {
 1762              	 .loc 1 822 0
 1763 0078 FB7E     	 ldrb r3,[r7,#27]
 1764 007a 002B     	 cmp r3,#0
 1765 007c 0FD0     	 beq .L94
 823:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_process: Connection RESET\n"));
 824:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_ASSERT("tcp_input: pcb->state != CLOSED", pcb->state != CLOSED);
 825:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       recv_flags |= TF_RESET;
 1766              	 .loc 1 825 0
 1767 007e 894B     	 ldr r3,.L160+12
 1768 0080 1B78     	 ldrb r3,[r3]
 1769 0082 43F00803 	 orr r3,r3,#8
 1770 0086 DAB2     	 uxtb r2,r3
 1771 0088 864B     	 ldr r3,.L160+12
 1772 008a 1A70     	 strb r2,[r3]
 826:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       tcp_clear_flags(pcb, TF_ACK_DELAY);
 1773              	 .loc 1 826 0
 1774 008c 7B68     	 ldr r3,[r7,#4]
 1775 008e 5B8B     	 ldrh r3,[r3,#26]
 1776 0090 23F00103 	 bic r3,r3,#1
 1777 0094 9AB2     	 uxth r2,r3
 1778 0096 7B68     	 ldr r3,[r7,#4]
 1779 0098 5A83     	 strh r2,[r3,#26]
 827:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       return ERR_RST;
 1780              	 .loc 1 827 0
 1781 009a F223     	 movs r3,#242
 1782 009c 3CE3     	 b .L95
 1783              	.L94:
 828:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     } else {
 829:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_process: unacceptable reset seqno %"U32_F" rcv_nxt %"U32_F
 830:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                     seqno, pcb->rcv_nxt));
 831:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_DEBUGF(TCP_DEBUG, ("tcp_process: unacceptable reset seqno %"U32_F" rcv_nxt %"U32_F"\n",
 832:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                               seqno, pcb->rcv_nxt));
 833:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       return ERR_OK;
 1784              	 .loc 1 833 0
 1785 009e 0023     	 movs r3,#0
 1786 00a0 3AE3     	 b .L95
 1787              	.L89:
 834:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
 835:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 836:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 837:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if ((flags & TCP_SYN) && (pcb->state != SYN_SENT && pcb->state != SYN_RCVD)) {
 1788              	 .loc 1 837 0
 1789 00a2 7D4B     	 ldr r3,.L160
 1790 00a4 1B78     	 ldrb r3,[r3]
 1791 00a6 03F00203 	 and r3,r3,#2
 1792 00aa 002B     	 cmp r3,#0
 1793 00ac 10D0     	 beq .L96
 1794              	 .loc 1 837 0 is_stmt 0 discriminator 1
 1795 00ae 7B68     	 ldr r3,[r7,#4]
 1796 00b0 1B7D     	 ldrb r3,[r3,#20]
 1797 00b2 022B     	 cmp r3,#2
 1798 00b4 0CD0     	 beq .L96
 1799              	 .loc 1 837 0 discriminator 2
 1800 00b6 7B68     	 ldr r3,[r7,#4]
 1801 00b8 1B7D     	 ldrb r3,[r3,#20]
 1802 00ba 032B     	 cmp r3,#3
 1803 00bc 08D0     	 beq .L96
 838:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* Cope with new connection attempt after remote end crashed */
 839:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     tcp_ack_now(pcb);
 1804              	 .loc 1 839 0 is_stmt 1
 1805 00be 7B68     	 ldr r3,[r7,#4]
 1806 00c0 5B8B     	 ldrh r3,[r3,#26]
 1807 00c2 43F00203 	 orr r3,r3,#2
 1808 00c6 9AB2     	 uxth r2,r3
 1809 00c8 7B68     	 ldr r3,[r7,#4]
 1810 00ca 5A83     	 strh r2,[r3,#26]
 840:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     return ERR_OK;
 1811              	 .loc 1 840 0
 1812 00cc 0023     	 movs r3,#0
 1813 00ce 23E3     	 b .L95
 1814              	.L96:
 841:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 842:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 843:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if ((pcb->flags & TF_RXCLOSED) == 0) {
 1815              	 .loc 1 843 0
 1816 00d0 7B68     	 ldr r3,[r7,#4]
 1817 00d2 5B8B     	 ldrh r3,[r3,#26]
 1818 00d4 03F01003 	 and r3,r3,#16
 1819 00d8 002B     	 cmp r3,#0
 1820 00da 03D1     	 bne .L97
 844:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* Update the PCB (in)activity timer unless rx is closed (see tcp_shutdown) */
 845:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     pcb->tmr = tcp_ticks;
 1821              	 .loc 1 845 0
 1822 00dc 724B     	 ldr r3,.L160+16
 1823 00de 1A68     	 ldr r2,[r3]
 1824 00e0 7B68     	 ldr r3,[r7,#4]
 1825 00e2 1A62     	 str r2,[r3,#32]
 1826              	.L97:
 846:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
 847:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   pcb->keep_cnt_sent = 0;
 1827              	 .loc 1 847 0
 1828 00e4 7B68     	 ldr r3,[r7,#4]
 1829 00e6 0022     	 movs r2,#0
 1830 00e8 83F89B20 	 strb r2,[r3,#155]
 848:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   pcb->persist_probe = 0;
 1831              	 .loc 1 848 0
 1832 00ec 7B68     	 ldr r3,[r7,#4]
 1833 00ee 0022     	 movs r2,#0
 1834 00f0 83F89A20 	 strb r2,[r3,#154]
 849:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 850:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   tcp_parseopt(pcb);
 1835              	 .loc 1 850 0
 1836 00f4 7868     	 ldr r0,[r7,#4]
 1837 00f6 FFF7FEFF 	 bl tcp_parseopt
 851:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 852:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   /* Do different things depending on the TCP state. */
 853:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   switch (pcb->state) {
 1838              	 .loc 1 853 0
 1839 00fa 7B68     	 ldr r3,[r7,#4]
 1840 00fc 1B7D     	 ldrb r3,[r3,#20]
 1841 00fe 023B     	 subs r3,r3,#2
 1842 0100 072B     	 cmp r3,#7
 1843 0102 00F20783 	 bhi .L159
 1844 0106 01A2     	 adr r2,.L100
 1845 0108 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1846              	 .p2align 2
 1847              	.L100:
 1848 010c 2D010000 	 .word .L99+1
 1849 0110 1B030000 	 .word .L101+1
 1850 0114 83040000 	 .word .L102+1
 1851 0118 AD040000 	 .word .L103+1
 1852 011c BF050000 	 .word .L104+1
 1853 0120 83040000 	 .word .L102+1
 1854 0124 4B060000 	 .word .L105+1
 1855 0128 DD060000 	 .word .L106+1
 1856              	 .p2align 1
 1857              	.L99:
 854:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     case SYN_SENT:
 855:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_DEBUGF(TCP_INPUT_DEBUG, ("SYN-SENT: ackno %"U32_F" pcb->snd_nxt %"U32_F" unacked %"U32_F
 856:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                     pcb->snd_nxt, lwip_ntohl(pcb->unacked->tcphdr->seqno)));
 857:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* received SYN ACK with expected sequence number? */
 858:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if ((flags & TCP_ACK) && (flags & TCP_SYN)
 1858              	 .loc 1 858 0
 1859 012c 5A4B     	 ldr r3,.L160
 1860 012e 1B78     	 ldrb r3,[r3]
 1861 0130 03F01003 	 and r3,r3,#16
 1862 0134 002B     	 cmp r3,#0
 1863 0136 00F0C380 	 beq .L107
 1864              	 .loc 1 858 0 is_stmt 0 discriminator 1
 1865 013a 574B     	 ldr r3,.L160
 1866 013c 1B78     	 ldrb r3,[r3]
 1867 013e 03F00203 	 and r3,r3,#2
 1868 0142 002B     	 cmp r3,#0
 1869 0144 00F0BC80 	 beq .L107
 859:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           && (ackno == pcb->lastack + 1)) {
 1870              	 .loc 1 859 0 is_stmt 1
 1871 0148 7B68     	 ldr r3,[r7,#4]
 1872 014a 5B6C     	 ldr r3,[r3,#68]
 1873 014c 5A1C     	 adds r2,r3,#1
 1874 014e 534B     	 ldr r3,.L160+4
 1875 0150 1B68     	 ldr r3,[r3]
 1876 0152 9A42     	 cmp r2,r3
 1877 0154 40F0B480 	 bne .L107
 860:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->rcv_nxt = seqno + 1;
 1878              	 .loc 1 860 0
 1879 0158 514B     	 ldr r3,.L160+8
 1880 015a 1B68     	 ldr r3,[r3]
 1881 015c 5A1C     	 adds r2,r3,#1
 1882 015e 7B68     	 ldr r3,[r7,#4]
 1883 0160 5A62     	 str r2,[r3,#36]
 861:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->rcv_ann_right_edge = pcb->rcv_nxt;
 1884              	 .loc 1 861 0
 1885 0162 7B68     	 ldr r3,[r7,#4]
 1886 0164 5A6A     	 ldr r2,[r3,#36]
 1887 0166 7B68     	 ldr r3,[r7,#4]
 1888 0168 DA62     	 str r2,[r3,#44]
 862:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->lastack = ackno;
 1889              	 .loc 1 862 0
 1890 016a 4C4B     	 ldr r3,.L160+4
 1891 016c 1A68     	 ldr r2,[r3]
 1892 016e 7B68     	 ldr r3,[r7,#4]
 1893 0170 5A64     	 str r2,[r3,#68]
 863:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->snd_wnd = tcphdr->wnd;
 1894              	 .loc 1 863 0
 1895 0172 4E4B     	 ldr r3,.L160+20
 1896 0174 1B68     	 ldr r3,[r3]
 1897 0176 DB89     	 ldrh r3,[r3,#14]
 1898 0178 9AB2     	 uxth r2,r3
 1899 017a 7B68     	 ldr r3,[r7,#4]
 1900 017c A3F86020 	 strh r2,[r3,#96]
 864:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->snd_wnd_max = pcb->snd_wnd;
 1901              	 .loc 1 864 0
 1902 0180 7B68     	 ldr r3,[r7,#4]
 1903 0182 B3F86020 	 ldrh r2,[r3,#96]
 1904 0186 7B68     	 ldr r3,[r7,#4]
 1905 0188 A3F86220 	 strh r2,[r3,#98]
 865:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->snd_wl1 = seqno - 1; /* initialise to seqno - 1 to force window update */
 1906              	 .loc 1 865 0
 1907 018c 444B     	 ldr r3,.L160+8
 1908 018e 1B68     	 ldr r3,[r3]
 1909 0190 5A1E     	 subs r2,r3,#1
 1910 0192 7B68     	 ldr r3,[r7,#4]
 1911 0194 5A65     	 str r2,[r3,#84]
 866:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->state = ESTABLISHED;
 1912              	 .loc 1 866 0
 1913 0196 7B68     	 ldr r3,[r7,#4]
 1914 0198 0422     	 movs r2,#4
 1915 019a 1A75     	 strb r2,[r3,#20]
 867:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 868:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_CALCULATE_EFF_SEND_MSS
 869:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->mss = tcp_eff_send_mss(pcb->mss, &pcb->local_ip, &pcb->remote_ip);
 1916              	 .loc 1 869 0
 1917 019c 7B68     	 ldr r3,[r7,#4]
 1918 019e 5C8E     	 ldrh r4,[r3,#50]
 1919 01a0 7B68     	 ldr r3,[r7,#4]
 1920 01a2 0433     	 adds r3,r3,#4
 1921 01a4 1846     	 mov r0,r3
 1922 01a6 FFF7FEFF 	 bl ip4_route
 1923 01aa 0246     	 mov r2,r0
 1924 01ac 7B68     	 ldr r3,[r7,#4]
 1925 01ae 0433     	 adds r3,r3,#4
 1926 01b0 2046     	 mov r0,r4
 1927 01b2 1146     	 mov r1,r2
 1928 01b4 1A46     	 mov r2,r3
 1929 01b6 FFF7FEFF 	 bl tcp_eff_send_mss_netif
 1930 01ba 0346     	 mov r3,r0
 1931 01bc 1A46     	 mov r2,r3
 1932 01be 7B68     	 ldr r3,[r7,#4]
 1933 01c0 5A86     	 strh r2,[r3,#50]
 870:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_CALCULATE_EFF_SEND_MSS */
 871:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 872:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->cwnd = LWIP_TCP_CALC_INITIAL_CWND(pcb->mss);
 1934              	 .loc 1 872 0
 1935 01c2 7B68     	 ldr r3,[r7,#4]
 1936 01c4 5B8E     	 ldrh r3,[r3,#50]
 1937 01c6 9A00     	 lsls r2,r3,#2
 1938 01c8 7B68     	 ldr r3,[r7,#4]
 1939 01ca 5B8E     	 ldrh r3,[r3,#50]
 1940 01cc 5B00     	 lsls r3,r3,#1
 1941 01ce 41F21C11 	 movw r1,#4380
 1942 01d2 8B42     	 cmp r3,r1
 1943 01d4 38BF     	 it cc
 1944 01d6 0B46     	 movcc r3,r1
 1945 01d8 9A42     	 cmp r2,r3
 1946 01da 04D2     	 bcs .L108
 1947              	 .loc 1 872 0 is_stmt 0 discriminator 1
 1948 01dc 7B68     	 ldr r3,[r7,#4]
 1949 01de 5B8E     	 ldrh r3,[r3,#50]
 1950 01e0 9B00     	 lsls r3,r3,#2
 1951 01e2 9BB2     	 uxth r3,r3
 1952 01e4 0DE0     	 b .L109
 1953              	.L108:
 1954              	 .loc 1 872 0 discriminator 2
 1955 01e6 7B68     	 ldr r3,[r7,#4]
 1956 01e8 5B8E     	 ldrh r3,[r3,#50]
 1957 01ea 5B00     	 lsls r3,r3,#1
 1958 01ec 41F21C12 	 movw r2,#4380
 1959 01f0 9342     	 cmp r3,r2
 1960 01f2 04D9     	 bls .L110
 1961              	 .loc 1 872 0 discriminator 4
 1962 01f4 7B68     	 ldr r3,[r7,#4]
 1963 01f6 5B8E     	 ldrh r3,[r3,#50]
 1964 01f8 5B00     	 lsls r3,r3,#1
 1965 01fa 9BB2     	 uxth r3,r3
 1966 01fc 01E0     	 b .L109
 1967              	.L110:
 1968              	 .loc 1 872 0 discriminator 5
 1969 01fe 41F21C13 	 movw r3,#4380
 1970              	.L109:
 1971              	 .loc 1 872 0 discriminator 8
 1972 0202 7A68     	 ldr r2,[r7,#4]
 1973 0204 A2F84830 	 strh r3,[r2,#72]
 873:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         LWIP_DEBUGF(TCP_CWND_DEBUG, ("tcp_process (SENT): cwnd %"TCPWNDSIZE_F
 874:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                      " ssthresh %"TCPWNDSIZE_F"\n",
 875:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                      pcb->cwnd, pcb->ssthresh));
 876:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         LWIP_ASSERT("pcb->snd_queuelen > 0", (pcb->snd_queuelen > 0));
 877:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         --pcb->snd_queuelen;
 1974              	 .loc 1 877 0 is_stmt 1 discriminator 8
 1975 0208 7B68     	 ldr r3,[r7,#4]
 1976 020a B3F86630 	 ldrh r3,[r3,#102]
 1977 020e 013B     	 subs r3,r3,#1
 1978 0210 9AB2     	 uxth r2,r3
 1979 0212 7B68     	 ldr r3,[r7,#4]
 1980 0214 A3F86620 	 strh r2,[r3,#102]
 878:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_process: SYN-SENT --queuelen %"TCPWNDSIZE_F"\n", (tcpwnd_
 879:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         rseg = pcb->unacked;
 1981              	 .loc 1 879 0 discriminator 8
 1982 0218 7B68     	 ldr r3,[r7,#4]
 1983 021a 1B6F     	 ldr r3,[r3,#112]
 1984 021c FB61     	 str r3,[r7,#28]
 880:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (rseg == NULL) {
 1985              	 .loc 1 880 0 discriminator 8
 1986 021e FB69     	 ldr r3,[r7,#28]
 1987 0220 002B     	 cmp r3,#0
 1988 0222 07D1     	 bne .L112
 881:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* might happen if tcp_output fails in tcp_rexmit_rto()
 882:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              in which case the segment is on the unsent list */
 883:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           rseg = pcb->unsent;
 1989              	 .loc 1 883 0
 1990 0224 7B68     	 ldr r3,[r7,#4]
 1991 0226 DB6E     	 ldr r3,[r3,#108]
 1992 0228 FB61     	 str r3,[r7,#28]
 884:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           LWIP_ASSERT("no segment to free", rseg != NULL);
 885:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pcb->unsent = rseg->next;
 1993              	 .loc 1 885 0
 1994 022a FB69     	 ldr r3,[r7,#28]
 1995 022c 1A68     	 ldr r2,[r3]
 1996 022e 7B68     	 ldr r3,[r7,#4]
 1997 0230 DA66     	 str r2,[r3,#108]
 1998 0232 03E0     	 b .L113
 1999              	.L112:
 886:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         } else {
 887:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pcb->unacked = rseg->next;
 2000              	 .loc 1 887 0
 2001 0234 FB69     	 ldr r3,[r7,#28]
 2002 0236 1A68     	 ldr r2,[r3]
 2003 0238 7B68     	 ldr r3,[r7,#4]
 2004 023a 1A67     	 str r2,[r3,#112]
 2005              	.L113:
 888:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
 889:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_seg_free(rseg);
 2006              	 .loc 1 889 0
 2007 023c F869     	 ldr r0,[r7,#28]
 2008 023e FFF7FEFF 	 bl tcp_seg_free
 890:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 891:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* If there's nothing left to acknowledge, stop the retransmit
 892:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            timer, otherwise reset it to start again */
 893:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (pcb->unacked == NULL) {
 2009              	 .loc 1 893 0
 2010 0242 7B68     	 ldr r3,[r7,#4]
 2011 0244 1B6F     	 ldr r3,[r3,#112]
 2012 0246 002B     	 cmp r3,#0
 2013 0248 04D1     	 bne .L114
 894:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pcb->rtime = -1;
 2014              	 .loc 1 894 0
 2015 024a 7B68     	 ldr r3,[r7,#4]
 2016 024c 4FF6FF72 	 movw r2,#65535
 2017 0250 1A86     	 strh r2,[r3,#48]
 2018 0252 06E0     	 b .L115
 2019              	.L114:
 895:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         } else {
 896:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pcb->rtime = 0;
 2020              	 .loc 1 896 0
 2021 0254 7B68     	 ldr r3,[r7,#4]
 2022 0256 0022     	 movs r2,#0
 2023 0258 1A86     	 strh r2,[r3,#48]
 897:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pcb->nrtx = 0;
 2024              	 .loc 1 897 0
 2025 025a 7B68     	 ldr r3,[r7,#4]
 2026 025c 0022     	 movs r2,#0
 2027 025e 83F84220 	 strb r2,[r3,#66]
 2028              	.L115:
 898:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
 899:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 900:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* Call the user specified function to call when successfully
 901:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          * connected. */
 902:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         TCP_EVENT_CONNECTED(pcb, ERR_OK, err);
 2029              	 .loc 1 902 0
 2030 0262 7B68     	 ldr r3,[r7,#4]
 2031 0264 D3F88830 	 ldr r3,[r3,#136]
 2032 0268 002B     	 cmp r3,#0
 2033 026a 0BD0     	 beq .L116
 2034              	 .loc 1 902 0 is_stmt 0 discriminator 1
 2035 026c 7B68     	 ldr r3,[r7,#4]
 2036 026e D3F88830 	 ldr r3,[r3,#136]
 2037 0272 7A68     	 ldr r2,[r7,#4]
 2038 0274 1269     	 ldr r2,[r2,#16]
 2039 0276 1046     	 mov r0,r2
 2040 0278 7968     	 ldr r1,[r7,#4]
 2041 027a 0022     	 movs r2,#0
 2042 027c 9847     	 blx r3
 2043 027e 0346     	 mov r3,r0
 2044 0280 BB76     	 strb r3,[r7,#26]
 2045 0282 01E0     	 b .L117
 2046              	.L116:
 2047              	 .loc 1 902 0 discriminator 2
 2048 0284 0023     	 movs r3,#0
 2049 0286 BB76     	 strb r3,[r7,#26]
 2050              	.L117:
 903:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (err == ERR_ABRT) {
 2051              	 .loc 1 903 0 is_stmt 1
 2052 0288 97F91A30 	 ldrsb r3,[r7,#26]
 2053 028c 13F10D0F 	 cmn r3,#13
 2054 0290 0ED1     	 bne .L118
 904:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           return ERR_ABRT;
 2055              	 .loc 1 904 0
 2056 0292 F323     	 movs r3,#243
 2057 0294 40E2     	 b .L95
 2058              	.L161:
 2059 0296 00BF     	 .align 2
 2060              	.L160:
 2061 0298 00000000 	 .word flags
 2062 029c 00000000 	 .word ackno
 2063 02a0 00000000 	 .word seqno
 2064 02a4 00000000 	 .word recv_flags
 2065 02a8 00000000 	 .word tcp_ticks
 2066 02ac 00000000 	 .word tcphdr
 2067              	.L118:
 905:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
 906:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_ack_now(pcb);
 2068              	 .loc 1 906 0
 2069 02b0 7B68     	 ldr r3,[r7,#4]
 2070 02b2 5B8B     	 ldrh r3,[r3,#26]
 2071 02b4 43F00203 	 orr r3,r3,#2
 2072 02b8 9AB2     	 uxth r2,r3
 2073 02ba 7B68     	 ldr r3,[r7,#4]
 2074 02bc 5A83     	 strh r2,[r3,#26]
 2075 02be 2BE0     	 b .L119
 2076              	.L107:
 907:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
 908:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* received ACK? possibly a half-open connection */
 909:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       else if (flags & TCP_ACK) {
 2077              	 .loc 1 909 0
 2078 02c0 984B     	 ldr r3,.L162
 2079 02c2 1B78     	 ldrb r3,[r3]
 2080 02c4 03F01003 	 and r3,r3,#16
 2081 02c8 002B     	 cmp r3,#0
 2082 02ca 25D0     	 beq .L119
 910:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* send a RST to bring the other side in a non-synchronized state. */
 911:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_rst(pcb, ackno, seqno + tcplen, ip_current_dest_addr(),
 2083              	 .loc 1 911 0
 2084 02cc 964B     	 ldr r3,.L162+4
 2085 02ce 1D68     	 ldr r5,[r3]
 2086 02d0 964B     	 ldr r3,.L162+8
 2087 02d2 1B88     	 ldrh r3,[r3]
 2088 02d4 1A46     	 mov r2,r3
 2089 02d6 964B     	 ldr r3,.L162+12
 2090 02d8 1B68     	 ldr r3,[r3]
 2091 02da D418     	 adds r4,r2,r3
 912:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 ip_current_src_addr(), tcphdr->dest, tcphdr->src);
 2092              	 .loc 1 912 0
 2093 02dc 954B     	 ldr r3,.L162+16
 2094 02de 1B68     	 ldr r3,[r3]
 911:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 ip_current_src_addr(), tcphdr->dest, tcphdr->src);
 2095              	 .loc 1 911 0
 2096 02e0 5B88     	 ldrh r3,[r3,#2]
 2097 02e2 9AB2     	 uxth r2,r3
 2098              	 .loc 1 912 0
 2099 02e4 934B     	 ldr r3,.L162+16
 2100 02e6 1B68     	 ldr r3,[r3]
 911:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 ip_current_src_addr(), tcphdr->dest, tcphdr->src);
 2101              	 .loc 1 911 0
 2102 02e8 1B88     	 ldrh r3,[r3]
 2103 02ea 9BB2     	 uxth r3,r3
 2104 02ec 9249     	 ldr r1,.L162+20
 2105 02ee 0091     	 str r1,[sp]
 2106 02f0 0192     	 str r2,[sp,#4]
 2107 02f2 0293     	 str r3,[sp,#8]
 2108 02f4 7868     	 ldr r0,[r7,#4]
 2109 02f6 2946     	 mov r1,r5
 2110 02f8 2246     	 mov r2,r4
 2111 02fa 904B     	 ldr r3,.L162+24
 2112 02fc FFF7FEFF 	 bl tcp_rst
 913:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* Resend SYN immediately (don't wait for rto timeout) to establish
 914:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           connection faster, but do not send more SYNs than we otherwise would
 915:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           have, or we might get caught in a loop on loopback interfaces. */
 916:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (pcb->nrtx < TCP_SYNMAXRTX) {
 2113              	 .loc 1 916 0
 2114 0300 7B68     	 ldr r3,[r7,#4]
 2115 0302 93F84230 	 ldrb r3,[r3,#66]
 2116 0306 052B     	 cmp r3,#5
 2117 0308 06D8     	 bhi .L119
 917:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pcb->rtime = 0;
 2118              	 .loc 1 917 0
 2119 030a 7B68     	 ldr r3,[r7,#4]
 2120 030c 0022     	 movs r2,#0
 2121 030e 1A86     	 strh r2,[r3,#48]
 918:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tcp_rexmit_rto(pcb);
 2122              	 .loc 1 918 0
 2123 0310 7868     	 ldr r0,[r7,#4]
 2124 0312 FFF7FEFF 	 bl tcp_rexmit_rto
 919:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
 920:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
 921:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       break;
 2125              	 .loc 1 921 0
 2126 0316 FEE1     	 b .L120
 2127              	.L119:
 2128 0318 FDE1     	 b .L120
 2129              	.L101:
 922:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     case SYN_RCVD:
 923:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (flags & TCP_ACK) {
 2130              	 .loc 1 923 0
 2131 031a 824B     	 ldr r3,.L162
 2132 031c 1B78     	 ldrb r3,[r3]
 2133 031e 03F01003 	 and r3,r3,#16
 2134 0322 002B     	 cmp r3,#0
 2135 0324 00F09B80 	 beq .L121
 924:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* expected ACK number? */
 925:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (TCP_SEQ_BETWEEN(ackno, pcb->lastack + 1, pcb->snd_nxt)) {
 2136              	 .loc 1 925 0
 2137 0328 7F4B     	 ldr r3,.L162+4
 2138 032a 1A68     	 ldr r2,[r3]
 2139 032c 7B68     	 ldr r3,[r7,#4]
 2140 032e 5B6C     	 ldr r3,[r3,#68]
 2141 0330 D31A     	 subs r3,r2,r3
 2142 0332 013B     	 subs r3,r3,#1
 2143 0334 002B     	 cmp r3,#0
 2144 0336 76DB     	 blt .L122
 2145              	 .loc 1 925 0 is_stmt 0 discriminator 1
 2146 0338 7B4B     	 ldr r3,.L162+4
 2147 033a 1A68     	 ldr r2,[r3]
 2148 033c 7B68     	 ldr r3,[r7,#4]
 2149 033e 1B6D     	 ldr r3,[r3,#80]
 2150 0340 D31A     	 subs r3,r2,r3
 2151 0342 002B     	 cmp r3,#0
 2152 0344 6FDC     	 bgt .L122
 926:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pcb->state = ESTABLISHED;
 2153              	 .loc 1 926 0 is_stmt 1
 2154 0346 7B68     	 ldr r3,[r7,#4]
 2155 0348 0422     	 movs r2,#4
 2156 034a 1A75     	 strb r2,[r3,#20]
 927:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           LWIP_DEBUGF(TCP_DEBUG, ("TCP connection established %"U16_F" -> %"U16_F".\n", inseg.tcphd
 928:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_CALLBACK_API || TCP_LISTEN_BACKLOG
 929:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (pcb->listener == NULL) {
 2157              	 .loc 1 929 0
 2158 034c 7B68     	 ldr r3,[r7,#4]
 2159 034e DB6F     	 ldr r3,[r3,#124]
 2160 0350 002B     	 cmp r3,#0
 2161 0352 02D1     	 bne .L123
 930:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* listen pcb might be closed by now */
 931:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             err = ERR_VAL;
 2162              	 .loc 1 931 0
 2163 0354 FA23     	 movs r3,#250
 2164 0356 BB76     	 strb r3,[r7,#26]
 2165 0358 15E0     	 b .L124
 2166              	.L123:
 932:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           } else
 933:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* LWIP_CALLBACK_API || TCP_LISTEN_BACKLOG */
 934:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           {
 935:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_CALLBACK_API
 936:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             LWIP_ASSERT("pcb->listener->accept != NULL", pcb->listener->accept != NULL);
 937:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif
 938:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             tcp_backlog_accepted(pcb);
 2167              	 .loc 1 938 0
 2168 035a 7868     	 ldr r0,[r7,#4]
 2169 035c FFF7FEFF 	 bl tcp_backlog_accepted
 939:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* Call the accept function. */
 940:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             TCP_EVENT_ACCEPT(pcb->listener, pcb, pcb->callback_arg, ERR_OK, err);
 2170              	 .loc 1 940 0
 2171 0360 7B68     	 ldr r3,[r7,#4]
 2172 0362 DB6F     	 ldr r3,[r3,#124]
 2173 0364 9B69     	 ldr r3,[r3,#24]
 2174 0366 002B     	 cmp r3,#0
 2175 0368 0BD0     	 beq .L125
 2176              	 .loc 1 940 0 is_stmt 0 discriminator 1
 2177 036a 7B68     	 ldr r3,[r7,#4]
 2178 036c DB6F     	 ldr r3,[r3,#124]
 2179 036e 9B69     	 ldr r3,[r3,#24]
 2180 0370 7A68     	 ldr r2,[r7,#4]
 2181 0372 1269     	 ldr r2,[r2,#16]
 2182 0374 1046     	 mov r0,r2
 2183 0376 7968     	 ldr r1,[r7,#4]
 2184 0378 0022     	 movs r2,#0
 2185 037a 9847     	 blx r3
 2186 037c 0346     	 mov r3,r0
 2187 037e BB76     	 strb r3,[r7,#26]
 2188 0380 01E0     	 b .L124
 2189              	.L125:
 2190              	 .loc 1 940 0 discriminator 2
 2191 0382 F023     	 movs r3,#240
 2192 0384 BB76     	 strb r3,[r7,#26]
 2193              	.L124:
 941:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
 942:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (err != ERR_OK) {
 2194              	 .loc 1 942 0 is_stmt 1
 2195 0386 97F91A30 	 ldrsb r3,[r7,#26]
 2196 038a 002B     	 cmp r3,#0
 2197 038c 09D0     	 beq .L126
 943:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* If the accept function returns with an error, we abort
 944:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              * the connection. */
 945:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* Already aborted? */
 946:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (err != ERR_ABRT) {
 2198              	 .loc 1 946 0
 2199 038e 97F91A30 	 ldrsb r3,[r7,#26]
 2200 0392 13F10D0F 	 cmn r3,#13
 2201 0396 02D0     	 beq .L127
 947:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               tcp_abort(pcb);
 2202              	 .loc 1 947 0
 2203 0398 7868     	 ldr r0,[r7,#4]
 2204 039a FFF7FEFF 	 bl tcp_abort
 2205              	.L127:
 948:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
 949:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             return ERR_ABRT;
 2206              	 .loc 1 949 0
 2207 039e F323     	 movs r3,#243
 2208 03a0 BAE1     	 b .L95
 2209              	.L126:
 950:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
 951:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* If there was any data contained within this ACK,
 952:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            * we'd better pass it on to the application as well. */
 953:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tcp_receive(pcb);
 2210              	 .loc 1 953 0
 2211 03a2 7868     	 ldr r0,[r7,#4]
 2212 03a4 FFF7FEFF 	 bl tcp_receive
 954:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 955:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* Prevent ACK for SYN to generate a sent event */
 956:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (recv_acked != 0) {
 2213              	 .loc 1 956 0
 2214 03a8 654B     	 ldr r3,.L162+28
 2215 03aa 1B88     	 ldrh r3,[r3]
 2216 03ac 002B     	 cmp r3,#0
 2217 03ae 05D0     	 beq .L128
 957:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             recv_acked--;
 2218              	 .loc 1 957 0
 2219 03b0 634B     	 ldr r3,.L162+28
 2220 03b2 1B88     	 ldrh r3,[r3]
 2221 03b4 013B     	 subs r3,r3,#1
 2222 03b6 9AB2     	 uxth r2,r3
 2223 03b8 614B     	 ldr r3,.L162+28
 2224 03ba 1A80     	 strh r2,[r3]
 2225              	.L128:
 958:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
 959:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 960:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pcb->cwnd = LWIP_TCP_CALC_INITIAL_CWND(pcb->mss);
 2226              	 .loc 1 960 0
 2227 03bc 7B68     	 ldr r3,[r7,#4]
 2228 03be 5B8E     	 ldrh r3,[r3,#50]
 2229 03c0 9A00     	 lsls r2,r3,#2
 2230 03c2 7B68     	 ldr r3,[r7,#4]
 2231 03c4 5B8E     	 ldrh r3,[r3,#50]
 2232 03c6 5B00     	 lsls r3,r3,#1
 2233 03c8 41F21C11 	 movw r1,#4380
 2234 03cc 8B42     	 cmp r3,r1
 2235 03ce 38BF     	 it cc
 2236 03d0 0B46     	 movcc r3,r1
 2237 03d2 9A42     	 cmp r2,r3
 2238 03d4 04D2     	 bcs .L129
 2239              	 .loc 1 960 0 is_stmt 0 discriminator 1
 2240 03d6 7B68     	 ldr r3,[r7,#4]
 2241 03d8 5B8E     	 ldrh r3,[r3,#50]
 2242 03da 9B00     	 lsls r3,r3,#2
 2243 03dc 9BB2     	 uxth r3,r3
 2244 03de 0DE0     	 b .L130
 2245              	.L129:
 2246              	 .loc 1 960 0 discriminator 2
 2247 03e0 7B68     	 ldr r3,[r7,#4]
 2248 03e2 5B8E     	 ldrh r3,[r3,#50]
 2249 03e4 5B00     	 lsls r3,r3,#1
 2250 03e6 41F21C12 	 movw r2,#4380
 2251 03ea 9342     	 cmp r3,r2
 2252 03ec 04D9     	 bls .L131
 2253              	 .loc 1 960 0 discriminator 4
 2254 03ee 7B68     	 ldr r3,[r7,#4]
 2255 03f0 5B8E     	 ldrh r3,[r3,#50]
 2256 03f2 5B00     	 lsls r3,r3,#1
 2257 03f4 9BB2     	 uxth r3,r3
 2258 03f6 01E0     	 b .L130
 2259              	.L131:
 2260              	 .loc 1 960 0 discriminator 5
 2261 03f8 41F21C13 	 movw r3,#4380
 2262              	.L130:
 2263              	 .loc 1 960 0 discriminator 8
 2264 03fc 7A68     	 ldr r2,[r7,#4]
 2265 03fe A2F84830 	 strh r3,[r2,#72]
 961:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           LWIP_DEBUGF(TCP_CWND_DEBUG, ("tcp_process (SYN_RCVD): cwnd %"TCPWNDSIZE_F
 962:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                        " ssthresh %"TCPWNDSIZE_F"\n",
 963:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                        pcb->cwnd, pcb->ssthresh));
 964:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 965:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (recv_flags & TF_GOT_FIN) {
 2266              	 .loc 1 965 0 is_stmt 1 discriminator 8
 2267 0402 504B     	 ldr r3,.L162+32
 2268 0404 1B78     	 ldrb r3,[r3]
 2269 0406 03F02003 	 and r3,r3,#32
 2270 040a 002B     	 cmp r3,#0
 2271 040c 0AD0     	 beq .L133
 966:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             tcp_ack_now(pcb);
 2272              	 .loc 1 966 0
 2273 040e 7B68     	 ldr r3,[r7,#4]
 2274 0410 5B8B     	 ldrh r3,[r3,#26]
 2275 0412 43F00203 	 orr r3,r3,#2
 2276 0416 9AB2     	 uxth r2,r3
 2277 0418 7B68     	 ldr r3,[r7,#4]
 2278 041a 5A83     	 strh r2,[r3,#26]
 967:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             pcb->state = CLOSE_WAIT;
 2279              	 .loc 1 967 0
 2280 041c 7B68     	 ldr r3,[r7,#4]
 2281 041e 0722     	 movs r2,#7
 2282 0420 1A75     	 strb r2,[r3,#20]
 965:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             tcp_ack_now(pcb);
 2283              	 .loc 1 965 0
 2284 0422 1BE0     	 b .L134
 2285              	.L133:
 2286 0424 1AE0     	 b .L134
 2287              	.L122:
 968:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
 969:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         } else {
 970:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* incorrect ACK number, send RST */
 971:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tcp_rst(pcb, ackno, seqno + tcplen, ip_current_dest_addr(),
 2288              	 .loc 1 971 0
 2289 0426 404B     	 ldr r3,.L162+4
 2290 0428 1D68     	 ldr r5,[r3]
 2291 042a 404B     	 ldr r3,.L162+8
 2292 042c 1B88     	 ldrh r3,[r3]
 2293 042e 1A46     	 mov r2,r3
 2294 0430 3F4B     	 ldr r3,.L162+12
 2295 0432 1B68     	 ldr r3,[r3]
 2296 0434 D418     	 adds r4,r2,r3
 972:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   ip_current_src_addr(), tcphdr->dest, tcphdr->src);
 2297              	 .loc 1 972 0
 2298 0436 3F4B     	 ldr r3,.L162+16
 2299 0438 1B68     	 ldr r3,[r3]
 971:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   ip_current_src_addr(), tcphdr->dest, tcphdr->src);
 2300              	 .loc 1 971 0
 2301 043a 5B88     	 ldrh r3,[r3,#2]
 2302 043c 9AB2     	 uxth r2,r3
 2303              	 .loc 1 972 0
 2304 043e 3D4B     	 ldr r3,.L162+16
 2305 0440 1B68     	 ldr r3,[r3]
 971:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   ip_current_src_addr(), tcphdr->dest, tcphdr->src);
 2306              	 .loc 1 971 0
 2307 0442 1B88     	 ldrh r3,[r3]
 2308 0444 9BB2     	 uxth r3,r3
 2309 0446 3C49     	 ldr r1,.L162+20
 2310 0448 0091     	 str r1,[sp]
 2311 044a 0192     	 str r2,[sp,#4]
 2312 044c 0293     	 str r3,[sp,#8]
 2313 044e 7868     	 ldr r0,[r7,#4]
 2314 0450 2946     	 mov r1,r5
 2315 0452 2246     	 mov r2,r4
 2316 0454 394B     	 ldr r3,.L162+24
 2317 0456 FFF7FEFF 	 bl tcp_rst
 2318 045a 11E0     	 b .L135
 2319              	.L134:
 2320 045c 10E0     	 b .L135
 2321              	.L121:
 973:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
 974:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       } else if ((flags & TCP_SYN) && (seqno == pcb->rcv_nxt - 1)) {
 2322              	 .loc 1 974 0
 2323 045e 314B     	 ldr r3,.L162
 2324 0460 1B78     	 ldrb r3,[r3]
 2325 0462 03F00203 	 and r3,r3,#2
 2326 0466 002B     	 cmp r3,#0
 2327 0468 0AD0     	 beq .L135
 2328              	 .loc 1 974 0 is_stmt 0 discriminator 1
 2329 046a 7B68     	 ldr r3,[r7,#4]
 2330 046c 5B6A     	 ldr r3,[r3,#36]
 2331 046e 5A1E     	 subs r2,r3,#1
 2332 0470 2F4B     	 ldr r3,.L162+12
 2333 0472 1B68     	 ldr r3,[r3]
 2334 0474 9A42     	 cmp r2,r3
 2335 0476 03D1     	 bne .L135
 975:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* Looks like another copy of the SYN - retransmit our SYN-ACK */
 976:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_rexmit(pcb);
 2336              	 .loc 1 976 0 is_stmt 1
 2337 0478 7868     	 ldr r0,[r7,#4]
 2338 047a FFF7FEFF 	 bl tcp_rexmit
 977:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
 978:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       break;
 2339              	 .loc 1 978 0
 2340 047e 4AE1     	 b .L120
 2341              	.L135:
 2342              	 .loc 1 978 0 is_stmt 0 discriminator 2
 2343 0480 49E1     	 b .L120
 2344              	.L102:
 979:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     case CLOSE_WAIT:
 980:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* FALLTHROUGH */
 981:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     case ESTABLISHED:
 982:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       tcp_receive(pcb);
 2345              	 .loc 1 982 0 is_stmt 1
 2346 0482 7868     	 ldr r0,[r7,#4]
 2347 0484 FFF7FEFF 	 bl tcp_receive
 983:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (recv_flags & TF_GOT_FIN) { /* passive close */
 2348              	 .loc 1 983 0
 2349 0488 2E4B     	 ldr r3,.L162+32
 2350 048a 1B78     	 ldrb r3,[r3]
 2351 048c 03F02003 	 and r3,r3,#32
 2352 0490 002B     	 cmp r3,#0
 2353 0492 0AD0     	 beq .L136
 984:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_ack_now(pcb);
 2354              	 .loc 1 984 0
 2355 0494 7B68     	 ldr r3,[r7,#4]
 2356 0496 5B8B     	 ldrh r3,[r3,#26]
 2357 0498 43F00203 	 orr r3,r3,#2
 2358 049c 9AB2     	 uxth r2,r3
 2359 049e 7B68     	 ldr r3,[r7,#4]
 2360 04a0 5A83     	 strh r2,[r3,#26]
 985:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->state = CLOSE_WAIT;
 2361              	 .loc 1 985 0
 2362 04a2 7B68     	 ldr r3,[r7,#4]
 2363 04a4 0722     	 movs r2,#7
 2364 04a6 1A75     	 strb r2,[r3,#20]
 986:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
 987:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       break;
 2365              	 .loc 1 987 0
 2366 04a8 35E1     	 b .L120
 2367              	.L136:
 2368 04aa 34E1     	 b .L120
 2369              	.L103:
 988:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     case FIN_WAIT_1:
 989:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       tcp_receive(pcb);
 2370              	 .loc 1 989 0
 2371 04ac 7868     	 ldr r0,[r7,#4]
 2372 04ae FFF7FEFF 	 bl tcp_receive
 990:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (recv_flags & TF_GOT_FIN) {
 2373              	 .loc 1 990 0
 2374 04b2 244B     	 ldr r3,.L162+32
 2375 04b4 1B78     	 ldrb r3,[r3]
 2376 04b6 03F02003 	 and r3,r3,#32
 2377 04ba 002B     	 cmp r3,#0
 2378 04bc 6AD0     	 beq .L137
 991:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if ((flags & TCP_ACK) && (ackno == pcb->snd_nxt) &&
 2379              	 .loc 1 991 0
 2380 04be 194B     	 ldr r3,.L162
 2381 04c0 1B78     	 ldrb r3,[r3]
 2382 04c2 03F01003 	 and r3,r3,#16
 2383 04c6 002B     	 cmp r3,#0
 2384 04c8 59D0     	 beq .L138
 2385              	 .loc 1 991 0 is_stmt 0 discriminator 1
 2386 04ca 7B68     	 ldr r3,[r7,#4]
 2387 04cc 1A6D     	 ldr r2,[r3,#80]
 2388 04ce 164B     	 ldr r3,.L162+4
 2389 04d0 1B68     	 ldr r3,[r3]
 2390 04d2 9A42     	 cmp r2,r3
 2391 04d4 53D1     	 bne .L138
 992:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             pcb->unsent == NULL) {
 2392              	 .loc 1 992 0 is_stmt 1 discriminator 2
 2393 04d6 7B68     	 ldr r3,[r7,#4]
 2394 04d8 DB6E     	 ldr r3,[r3,#108]
 991:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if ((flags & TCP_ACK) && (ackno == pcb->snd_nxt) &&
 2395              	 .loc 1 991 0 discriminator 2
 2396 04da 002B     	 cmp r3,#0
 2397 04dc 4FD1     	 bne .L138
 993:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           LWIP_DEBUGF(TCP_DEBUG,
 994:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                       ("TCP connection closed: FIN_WAIT_1 %"U16_F" -> %"U16_F".\n", inseg.tcphdr->s
 995:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tcp_ack_now(pcb);
 2398              	 .loc 1 995 0
 2399 04de 7B68     	 ldr r3,[r7,#4]
 2400 04e0 5B8B     	 ldrh r3,[r3,#26]
 2401 04e2 43F00203 	 orr r3,r3,#2
 2402 04e6 9AB2     	 uxth r2,r3
 2403 04e8 7B68     	 ldr r3,[r7,#4]
 2404 04ea 5A83     	 strh r2,[r3,#26]
 996:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tcp_pcb_purge(pcb);
 2405              	 .loc 1 996 0
 2406 04ec 7868     	 ldr r0,[r7,#4]
 2407 04ee FFF7FEFF 	 bl tcp_pcb_purge
 997:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           TCP_RMV_ACTIVE(pcb);
 2408              	 .loc 1 997 0
 2409 04f2 154B     	 ldr r3,.L162+36
 2410 04f4 1A68     	 ldr r2,[r3]
 2411 04f6 7B68     	 ldr r3,[r7,#4]
 2412 04f8 9A42     	 cmp r2,r3
 2413 04fa 05D1     	 bne .L139
 2414              	 .loc 1 997 0 is_stmt 0 discriminator 1
 2415 04fc 124B     	 ldr r3,.L162+36
 2416 04fe 1B68     	 ldr r3,[r3]
 2417 0500 DB68     	 ldr r3,[r3,#12]
 2418 0502 114A     	 ldr r2,.L162+36
 2419 0504 1360     	 str r3,[r2]
 2420 0506 27E0     	 b .L140
 2421              	.L139:
 2422              	.LBB5:
 2423              	 .loc 1 997 0 discriminator 2
 2424 0508 0F4B     	 ldr r3,.L162+36
 2425 050a 1B68     	 ldr r3,[r3]
 2426 050c 7B61     	 str r3,[r7,#20]
 2427 050e 20E0     	 b .L141
 2428              	.L143:
 2429              	 .loc 1 997 0 discriminator 9
 2430 0510 7B69     	 ldr r3,[r7,#20]
 2431 0512 DA68     	 ldr r2,[r3,#12]
 2432 0514 7B68     	 ldr r3,[r7,#4]
 2433 0516 9A42     	 cmp r2,r3
 2434 0518 18D1     	 bne .L142
 2435              	 .loc 1 997 0 discriminator 5
 2436 051a 7B68     	 ldr r3,[r7,#4]
 2437 051c DA68     	 ldr r2,[r3,#12]
 2438 051e 7B69     	 ldr r3,[r7,#20]
 2439 0520 DA60     	 str r2,[r3,#12]
 2440 0522 19E0     	 b .L140
 2441              	.L163:
 2442              	 .align 2
 2443              	.L162:
 2444 0524 00000000 	 .word flags
 2445 0528 00000000 	 .word ackno
 2446 052c 00000000 	 .word tcplen
 2447 0530 00000000 	 .word seqno
 2448 0534 00000000 	 .word tcphdr
 2449 0538 10000000 	 .word ip_data+16
 2450 053c 14000000 	 .word ip_data+20
 2451 0540 00000000 	 .word recv_acked
 2452 0544 00000000 	 .word recv_flags
 2453 0548 00000000 	 .word tcp_active_pcbs
 2454              	.L142:
 2455              	 .loc 1 997 0 discriminator 6
 2456 054c 7B69     	 ldr r3,[r7,#20]
 2457 054e DB68     	 ldr r3,[r3,#12]
 2458 0550 7B61     	 str r3,[r7,#20]
 2459              	.L141:
 2460              	 .loc 1 997 0 discriminator 8
 2461 0552 7B69     	 ldr r3,[r7,#20]
 2462 0554 002B     	 cmp r3,#0
 2463 0556 DBD1     	 bne .L143
 2464              	.L140:
 2465              	.LBE5:
 2466              	 .loc 1 997 0 discriminator 10
 2467 0558 7B68     	 ldr r3,[r7,#4]
 2468 055a 0022     	 movs r2,#0
 2469 055c DA60     	 str r2,[r3,#12]
 2470 055e 714B     	 ldr r3,.L164
 2471 0560 0122     	 movs r2,#1
 2472 0562 1A70     	 strb r2,[r3]
 998:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pcb->state = TIME_WAIT;
 2473              	 .loc 1 998 0 is_stmt 1 discriminator 10
 2474 0564 7B68     	 ldr r3,[r7,#4]
 2475 0566 0A22     	 movs r2,#10
 2476 0568 1A75     	 strb r2,[r3,#20]
 999:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           TCP_REG(&tcp_tw_pcbs, pcb);
 2477              	 .loc 1 999 0 discriminator 10
 2478 056a 6F4B     	 ldr r3,.L164+4
 2479 056c 1A68     	 ldr r2,[r3]
 2480 056e 7B68     	 ldr r3,[r7,#4]
 2481 0570 DA60     	 str r2,[r3,#12]
 2482 0572 6D4A     	 ldr r2,.L164+4
 2483 0574 7B68     	 ldr r3,[r7,#4]
 2484 0576 1360     	 str r3,[r2]
 2485 0578 FFF7FEFF 	 bl tcp_timer_needed
 2486 057c 1EE0     	 b .L145
 2487              	.L138:
1000:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         } else {
1001:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tcp_ack_now(pcb);
 2488              	 .loc 1 1001 0
 2489 057e 7B68     	 ldr r3,[r7,#4]
 2490 0580 5B8B     	 ldrh r3,[r3,#26]
 2491 0582 43F00203 	 orr r3,r3,#2
 2492 0586 9AB2     	 uxth r2,r3
 2493 0588 7B68     	 ldr r3,[r7,#4]
 2494 058a 5A83     	 strh r2,[r3,#26]
1002:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pcb->state = CLOSING;
 2495              	 .loc 1 1002 0
 2496 058c 7B68     	 ldr r3,[r7,#4]
 2497 058e 0822     	 movs r2,#8
 2498 0590 1A75     	 strb r2,[r3,#20]
 2499 0592 13E0     	 b .L145
 2500              	.L137:
1003:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
1004:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       } else if ((flags & TCP_ACK) && (ackno == pcb->snd_nxt) &&
 2501              	 .loc 1 1004 0
 2502 0594 654B     	 ldr r3,.L164+8
 2503 0596 1B78     	 ldrb r3,[r3]
 2504 0598 03F01003 	 and r3,r3,#16
 2505 059c 002B     	 cmp r3,#0
 2506 059e 0DD0     	 beq .L145
 2507              	 .loc 1 1004 0 is_stmt 0 discriminator 1
 2508 05a0 7B68     	 ldr r3,[r7,#4]
 2509 05a2 1A6D     	 ldr r2,[r3,#80]
 2510 05a4 624B     	 ldr r3,.L164+12
 2511 05a6 1B68     	 ldr r3,[r3]
 2512 05a8 9A42     	 cmp r2,r3
 2513 05aa 07D1     	 bne .L145
1005:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                  pcb->unsent == NULL) {
 2514              	 .loc 1 1005 0 is_stmt 1 discriminator 2
 2515 05ac 7B68     	 ldr r3,[r7,#4]
 2516 05ae DB6E     	 ldr r3,[r3,#108]
1004:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                  pcb->unsent == NULL) {
 2517              	 .loc 1 1004 0 discriminator 2
 2518 05b0 002B     	 cmp r3,#0
 2519 05b2 03D1     	 bne .L145
1006:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->state = FIN_WAIT_2;
 2520              	 .loc 1 1006 0
 2521 05b4 7B68     	 ldr r3,[r7,#4]
 2522 05b6 0622     	 movs r2,#6
 2523 05b8 1A75     	 strb r2,[r3,#20]
1007:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
1008:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       break;
 2524              	 .loc 1 1008 0
 2525 05ba ACE0     	 b .L120
 2526              	.L145:
 2527              	 .loc 1 1008 0 is_stmt 0 discriminator 3
 2528 05bc ABE0     	 b .L120
 2529              	.L104:
1009:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     case FIN_WAIT_2:
1010:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       tcp_receive(pcb);
 2530              	 .loc 1 1010 0 is_stmt 1
 2531 05be 7868     	 ldr r0,[r7,#4]
 2532 05c0 FFF7FEFF 	 bl tcp_receive
1011:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (recv_flags & TF_GOT_FIN) {
 2533              	 .loc 1 1011 0
 2534 05c4 5B4B     	 ldr r3,.L164+16
 2535 05c6 1B78     	 ldrb r3,[r3]
 2536 05c8 03F02003 	 and r3,r3,#32
 2537 05cc 002B     	 cmp r3,#0
 2538 05ce 3BD0     	 beq .L146
1012:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         LWIP_DEBUGF(TCP_DEBUG, ("TCP connection closed: FIN_WAIT_2 %"U16_F" -> %"U16_F".\n", inseg.
1013:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_ack_now(pcb);
 2539              	 .loc 1 1013 0
 2540 05d0 7B68     	 ldr r3,[r7,#4]
 2541 05d2 5B8B     	 ldrh r3,[r3,#26]
 2542 05d4 43F00203 	 orr r3,r3,#2
 2543 05d8 9AB2     	 uxth r2,r3
 2544 05da 7B68     	 ldr r3,[r7,#4]
 2545 05dc 5A83     	 strh r2,[r3,#26]
1014:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_pcb_purge(pcb);
 2546              	 .loc 1 1014 0
 2547 05de 7868     	 ldr r0,[r7,#4]
 2548 05e0 FFF7FEFF 	 bl tcp_pcb_purge
1015:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         TCP_RMV_ACTIVE(pcb);
 2549              	 .loc 1 1015 0
 2550 05e4 544B     	 ldr r3,.L164+20
 2551 05e6 1A68     	 ldr r2,[r3]
 2552 05e8 7B68     	 ldr r3,[r7,#4]
 2553 05ea 9A42     	 cmp r2,r3
 2554 05ec 05D1     	 bne .L147
 2555              	 .loc 1 1015 0 is_stmt 0 discriminator 1
 2556 05ee 524B     	 ldr r3,.L164+20
 2557 05f0 1B68     	 ldr r3,[r3]
 2558 05f2 DB68     	 ldr r3,[r3,#12]
 2559 05f4 504A     	 ldr r2,.L164+20
 2560 05f6 1360     	 str r3,[r2]
 2561 05f8 13E0     	 b .L148
 2562              	.L147:
 2563              	.LBB6:
 2564              	 .loc 1 1015 0 discriminator 2
 2565 05fa 4F4B     	 ldr r3,.L164+20
 2566 05fc 1B68     	 ldr r3,[r3]
 2567 05fe 3B61     	 str r3,[r7,#16]
 2568 0600 0CE0     	 b .L149
 2569              	.L151:
 2570              	 .loc 1 1015 0 discriminator 9
 2571 0602 3B69     	 ldr r3,[r7,#16]
 2572 0604 DA68     	 ldr r2,[r3,#12]
 2573 0606 7B68     	 ldr r3,[r7,#4]
 2574 0608 9A42     	 cmp r2,r3
 2575 060a 04D1     	 bne .L150
 2576              	 .loc 1 1015 0 discriminator 5
 2577 060c 7B68     	 ldr r3,[r7,#4]
 2578 060e DA68     	 ldr r2,[r3,#12]
 2579 0610 3B69     	 ldr r3,[r7,#16]
 2580 0612 DA60     	 str r2,[r3,#12]
 2581 0614 05E0     	 b .L148
 2582              	.L150:
 2583              	 .loc 1 1015 0 discriminator 6
 2584 0616 3B69     	 ldr r3,[r7,#16]
 2585 0618 DB68     	 ldr r3,[r3,#12]
 2586 061a 3B61     	 str r3,[r7,#16]
 2587              	.L149:
 2588              	 .loc 1 1015 0 discriminator 8
 2589 061c 3B69     	 ldr r3,[r7,#16]
 2590 061e 002B     	 cmp r3,#0
 2591 0620 EFD1     	 bne .L151
 2592              	.L148:
 2593              	.LBE6:
 2594              	 .loc 1 1015 0 discriminator 10
 2595 0622 7B68     	 ldr r3,[r7,#4]
 2596 0624 0022     	 movs r2,#0
 2597 0626 DA60     	 str r2,[r3,#12]
 2598 0628 3E4B     	 ldr r3,.L164
 2599 062a 0122     	 movs r2,#1
 2600 062c 1A70     	 strb r2,[r3]
1016:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->state = TIME_WAIT;
 2601              	 .loc 1 1016 0 is_stmt 1 discriminator 10
 2602 062e 7B68     	 ldr r3,[r7,#4]
 2603 0630 0A22     	 movs r2,#10
 2604 0632 1A75     	 strb r2,[r3,#20]
1017:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         TCP_REG(&tcp_tw_pcbs, pcb);
 2605              	 .loc 1 1017 0 discriminator 10
 2606 0634 3C4B     	 ldr r3,.L164+4
 2607 0636 1A68     	 ldr r2,[r3]
 2608 0638 7B68     	 ldr r3,[r7,#4]
 2609 063a DA60     	 str r2,[r3,#12]
 2610 063c 3A4A     	 ldr r2,.L164+4
 2611 063e 7B68     	 ldr r3,[r7,#4]
 2612 0640 1360     	 str r3,[r2]
 2613 0642 FFF7FEFF 	 bl tcp_timer_needed
1018:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
1019:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       break;
 2614              	 .loc 1 1019 0 discriminator 10
 2615 0646 66E0     	 b .L120
 2616              	.L146:
 2617              	 .loc 1 1019 0 is_stmt 0
 2618 0648 65E0     	 b .L120
 2619              	.L105:
1020:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     case CLOSING:
1021:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       tcp_receive(pcb);
 2620              	 .loc 1 1021 0 is_stmt 1
 2621 064a 7868     	 ldr r0,[r7,#4]
 2622 064c FFF7FEFF 	 bl tcp_receive
1022:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if ((flags & TCP_ACK) && ackno == pcb->snd_nxt && pcb->unsent == NULL) {
 2623              	 .loc 1 1022 0
 2624 0650 364B     	 ldr r3,.L164+8
 2625 0652 1B78     	 ldrb r3,[r3]
 2626 0654 03F01003 	 and r3,r3,#16
 2627 0658 002B     	 cmp r3,#0
 2628 065a 3ED0     	 beq .L152
 2629              	 .loc 1 1022 0 is_stmt 0 discriminator 1
 2630 065c 7B68     	 ldr r3,[r7,#4]
 2631 065e 1A6D     	 ldr r2,[r3,#80]
 2632 0660 334B     	 ldr r3,.L164+12
 2633 0662 1B68     	 ldr r3,[r3]
 2634 0664 9A42     	 cmp r2,r3
 2635 0666 38D1     	 bne .L152
 2636              	 .loc 1 1022 0 discriminator 2
 2637 0668 7B68     	 ldr r3,[r7,#4]
 2638 066a DB6E     	 ldr r3,[r3,#108]
 2639 066c 002B     	 cmp r3,#0
 2640 066e 34D1     	 bne .L152
1023:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         LWIP_DEBUGF(TCP_DEBUG, ("TCP connection closed: CLOSING %"U16_F" -> %"U16_F".\n", inseg.tcp
1024:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_pcb_purge(pcb);
 2641              	 .loc 1 1024 0 is_stmt 1
 2642 0670 7868     	 ldr r0,[r7,#4]
 2643 0672 FFF7FEFF 	 bl tcp_pcb_purge
1025:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         TCP_RMV_ACTIVE(pcb);
 2644              	 .loc 1 1025 0
 2645 0676 304B     	 ldr r3,.L164+20
 2646 0678 1A68     	 ldr r2,[r3]
 2647 067a 7B68     	 ldr r3,[r7,#4]
 2648 067c 9A42     	 cmp r2,r3
 2649 067e 05D1     	 bne .L153
 2650              	 .loc 1 1025 0 is_stmt 0 discriminator 1
 2651 0680 2D4B     	 ldr r3,.L164+20
 2652 0682 1B68     	 ldr r3,[r3]
 2653 0684 DB68     	 ldr r3,[r3,#12]
 2654 0686 2C4A     	 ldr r2,.L164+20
 2655 0688 1360     	 str r3,[r2]
 2656 068a 13E0     	 b .L154
 2657              	.L153:
 2658              	.LBB7:
 2659              	 .loc 1 1025 0 discriminator 2
 2660 068c 2A4B     	 ldr r3,.L164+20
 2661 068e 1B68     	 ldr r3,[r3]
 2662 0690 FB60     	 str r3,[r7,#12]
 2663 0692 0CE0     	 b .L155
 2664              	.L157:
 2665              	 .loc 1 1025 0 discriminator 9
 2666 0694 FB68     	 ldr r3,[r7,#12]
 2667 0696 DA68     	 ldr r2,[r3,#12]
 2668 0698 7B68     	 ldr r3,[r7,#4]
 2669 069a 9A42     	 cmp r2,r3
 2670 069c 04D1     	 bne .L156
 2671              	 .loc 1 1025 0 discriminator 5
 2672 069e 7B68     	 ldr r3,[r7,#4]
 2673 06a0 DA68     	 ldr r2,[r3,#12]
 2674 06a2 FB68     	 ldr r3,[r7,#12]
 2675 06a4 DA60     	 str r2,[r3,#12]
 2676 06a6 05E0     	 b .L154
 2677              	.L156:
 2678              	 .loc 1 1025 0 discriminator 6
 2679 06a8 FB68     	 ldr r3,[r7,#12]
 2680 06aa DB68     	 ldr r3,[r3,#12]
 2681 06ac FB60     	 str r3,[r7,#12]
 2682              	.L155:
 2683              	 .loc 1 1025 0 discriminator 8
 2684 06ae FB68     	 ldr r3,[r7,#12]
 2685 06b0 002B     	 cmp r3,#0
 2686 06b2 EFD1     	 bne .L157
 2687              	.L154:
 2688              	.LBE7:
 2689              	 .loc 1 1025 0 discriminator 10
 2690 06b4 7B68     	 ldr r3,[r7,#4]
 2691 06b6 0022     	 movs r2,#0
 2692 06b8 DA60     	 str r2,[r3,#12]
 2693 06ba 1A4B     	 ldr r3,.L164
 2694 06bc 0122     	 movs r2,#1
 2695 06be 1A70     	 strb r2,[r3]
1026:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->state = TIME_WAIT;
 2696              	 .loc 1 1026 0 is_stmt 1 discriminator 10
 2697 06c0 7B68     	 ldr r3,[r7,#4]
 2698 06c2 0A22     	 movs r2,#10
 2699 06c4 1A75     	 strb r2,[r3,#20]
1027:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         TCP_REG(&tcp_tw_pcbs, pcb);
 2700              	 .loc 1 1027 0 discriminator 10
 2701 06c6 184B     	 ldr r3,.L164+4
 2702 06c8 1A68     	 ldr r2,[r3]
 2703 06ca 7B68     	 ldr r3,[r7,#4]
 2704 06cc DA60     	 str r2,[r3,#12]
 2705 06ce 164A     	 ldr r2,.L164+4
 2706 06d0 7B68     	 ldr r3,[r7,#4]
 2707 06d2 1360     	 str r3,[r2]
 2708 06d4 FFF7FEFF 	 bl tcp_timer_needed
1028:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
1029:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       break;
 2709              	 .loc 1 1029 0 discriminator 10
 2710 06d8 1DE0     	 b .L120
 2711              	.L152:
 2712              	 .loc 1 1029 0 is_stmt 0
 2713 06da 1CE0     	 b .L120
 2714              	.L106:
1030:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     case LAST_ACK:
1031:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       tcp_receive(pcb);
 2715              	 .loc 1 1031 0 is_stmt 1
 2716 06dc 7868     	 ldr r0,[r7,#4]
 2717 06de FFF7FEFF 	 bl tcp_receive
1032:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if ((flags & TCP_ACK) && ackno == pcb->snd_nxt && pcb->unsent == NULL) {
 2718              	 .loc 1 1032 0
 2719 06e2 124B     	 ldr r3,.L164+8
 2720 06e4 1B78     	 ldrb r3,[r3]
 2721 06e6 03F01003 	 and r3,r3,#16
 2722 06ea 002B     	 cmp r3,#0
 2723 06ec 11D0     	 beq .L158
 2724              	 .loc 1 1032 0 is_stmt 0 discriminator 1
 2725 06ee 7B68     	 ldr r3,[r7,#4]
 2726 06f0 1A6D     	 ldr r2,[r3,#80]
 2727 06f2 0F4B     	 ldr r3,.L164+12
 2728 06f4 1B68     	 ldr r3,[r3]
 2729 06f6 9A42     	 cmp r2,r3
 2730 06f8 0BD1     	 bne .L158
 2731              	 .loc 1 1032 0 discriminator 2
 2732 06fa 7B68     	 ldr r3,[r7,#4]
 2733 06fc DB6E     	 ldr r3,[r3,#108]
 2734 06fe 002B     	 cmp r3,#0
 2735 0700 07D1     	 bne .L158
1033:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         LWIP_DEBUGF(TCP_DEBUG, ("TCP connection closed: LAST_ACK %"U16_F" -> %"U16_F".\n", inseg.tc
1034:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* bugfix #21699: don't set pcb->state to CLOSED here or we risk leaking segments */
1035:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         recv_flags |= TF_CLOSED;
 2736              	 .loc 1 1035 0 is_stmt 1
 2737 0702 0C4B     	 ldr r3,.L164+16
 2738 0704 1B78     	 ldrb r3,[r3]
 2739 0706 43F01003 	 orr r3,r3,#16
 2740 070a DAB2     	 uxtb r2,r3
 2741 070c 094B     	 ldr r3,.L164+16
 2742 070e 1A70     	 strb r2,[r3]
1036:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
1037:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       break;
 2743              	 .loc 1 1037 0
 2744 0710 01E0     	 b .L120
 2745              	.L158:
 2746 0712 00E0     	 b .L120
 2747              	.L159:
1038:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     default:
1039:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       break;
 2748              	 .loc 1 1039 0
 2749 0714 00BF     	 nop
 2750              	.L120:
1040:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
1041:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   return ERR_OK;
 2751              	 .loc 1 1041 0
 2752 0716 0023     	 movs r3,#0
 2753              	.L95:
 2754 0718 5BB2     	 sxtb r3,r3
1042:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** }
 2755              	 .loc 1 1042 0
 2756 071a 1846     	 mov r0,r3
 2757 071c 2037     	 adds r7,r7,#32
 2758              	.LCFI23:
 2759              	 .cfi_def_cfa_offset 16
 2760 071e BD46     	 mov sp,r7
 2761              	.LCFI24:
 2762              	 .cfi_def_cfa_register 13
 2763              	 
 2764 0720 B0BD     	 pop {r4,r5,r7,pc}
 2765              	.L165:
 2766 0722 00BF     	 .align 2
 2767              	.L164:
 2768 0724 00000000 	 .word tcp_active_pcbs_changed
 2769 0728 00000000 	 .word tcp_tw_pcbs
 2770 072c 00000000 	 .word flags
 2771 0730 00000000 	 .word ackno
 2772 0734 00000000 	 .word recv_flags
 2773 0738 00000000 	 .word tcp_active_pcbs
 2774              	 .cfi_endproc
 2775              	.LFE137:
 2777              	 .section .text.tcp_oos_insert_segment,"ax",%progbits
 2778              	 .align 2
 2779              	 .thumb
 2780              	 .thumb_func
 2782              	tcp_oos_insert_segment:
 2783              	.LFB138:
1043:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1044:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_QUEUE_OOSEQ
1045:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** /**
1046:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * Insert segment into the list (segments covered with new one will be deleted)
1047:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
1048:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * Called from tcp_receive()
1049:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  */
1050:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static void
1051:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** tcp_oos_insert_segment(struct tcp_seg *cseg, struct tcp_seg *next)
1052:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** {
 2784              	 .loc 1 1052 0
 2785              	 .cfi_startproc
 2786              	 
 2787              	 
 2788 0000 B0B5     	 push {r4,r5,r7,lr}
 2789              	.LCFI25:
 2790              	 .cfi_def_cfa_offset 16
 2791              	 .cfi_offset 4,-16
 2792              	 .cfi_offset 5,-12
 2793              	 .cfi_offset 7,-8
 2794              	 .cfi_offset 14,-4
 2795 0002 84B0     	 sub sp,sp,#16
 2796              	.LCFI26:
 2797              	 .cfi_def_cfa_offset 32
 2798 0004 00AF     	 add r7,sp,#0
 2799              	.LCFI27:
 2800              	 .cfi_def_cfa_register 7
 2801 0006 7860     	 str r0,[r7,#4]
 2802 0008 3960     	 str r1,[r7]
1053:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   struct tcp_seg *old_seg;
1054:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1055:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   LWIP_ASSERT("tcp_oos_insert_segment: invalid cseg", cseg != NULL);
1056:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1057:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if (TCPH_FLAGS(cseg->tcphdr) & TCP_FIN) {
 2803              	 .loc 1 1057 0
 2804 000a 7B68     	 ldr r3,[r7,#4]
 2805 000c DB68     	 ldr r3,[r3,#12]
 2806 000e 9B89     	 ldrh r3,[r3,#12]
 2807 0010 9BB2     	 uxth r3,r3
 2808 0012 1846     	 mov r0,r3
 2809 0014 FFF7FEFF 	 bl lwip_htons
 2810 0018 0346     	 mov r3,r0
 2811 001a DBB2     	 uxtb r3,r3
 2812 001c 03F00103 	 and r3,r3,#1
 2813 0020 002B     	 cmp r3,#0
 2814 0022 05D0     	 beq .L167
1058:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* received segment overlaps all following segments */
1059:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     tcp_segs_free(next);
 2815              	 .loc 1 1059 0
 2816 0024 3868     	 ldr r0,[r7]
 2817 0026 FFF7FEFF 	 bl tcp_segs_free
1060:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     next = NULL;
 2818              	 .loc 1 1060 0
 2819 002a 0023     	 movs r3,#0
 2820 002c 3B60     	 str r3,[r7]
 2821 002e 56E0     	 b .L168
 2822              	.L167:
1061:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   } else {
1062:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* delete some following segments
1063:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        oos queue may have segments with FIN flag */
1064:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     while (next &&
 2823              	 .loc 1 1064 0
 2824 0030 21E0     	 b .L169
 2825              	.L172:
1065:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            TCP_SEQ_GEQ((seqno + cseg->len),
1066:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                        (next->tcphdr->seqno + next->len))) {
1067:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* cseg with FIN already processed */
1068:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (TCPH_FLAGS(next->tcphdr) & TCP_FIN) {
 2826              	 .loc 1 1068 0
 2827 0032 3B68     	 ldr r3,[r7]
 2828 0034 DB68     	 ldr r3,[r3,#12]
 2829 0036 9B89     	 ldrh r3,[r3,#12]
 2830 0038 9BB2     	 uxth r3,r3
 2831 003a 1846     	 mov r0,r3
 2832 003c FFF7FEFF 	 bl lwip_htons
 2833 0040 0346     	 mov r3,r0
 2834 0042 DBB2     	 uxtb r3,r3
 2835 0044 03F00103 	 and r3,r3,#1
 2836 0048 002B     	 cmp r3,#0
 2837 004a 0CD0     	 beq .L170
1069:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         TCPH_SET_FLAG(cseg->tcphdr, TCP_FIN);
 2838              	 .loc 1 1069 0
 2839 004c 7B68     	 ldr r3,[r7,#4]
 2840 004e DC68     	 ldr r4,[r3,#12]
 2841 0050 7B68     	 ldr r3,[r7,#4]
 2842 0052 DB68     	 ldr r3,[r3,#12]
 2843 0054 9B89     	 ldrh r3,[r3,#12]
 2844 0056 9DB2     	 uxth r5,r3
 2845 0058 0120     	 movs r0,#1
 2846 005a FFF7FEFF 	 bl lwip_htons
 2847 005e 0346     	 mov r3,r0
 2848 0060 2B43     	 orrs r3,r3,r5
 2849 0062 9BB2     	 uxth r3,r3
 2850 0064 A381     	 strh r3,[r4,#12]
 2851              	.L170:
1070:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
1071:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       old_seg = next;
 2852              	 .loc 1 1071 0
 2853 0066 3B68     	 ldr r3,[r7]
 2854 0068 FB60     	 str r3,[r7,#12]
1072:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       next = next->next;
 2855              	 .loc 1 1072 0
 2856 006a 3B68     	 ldr r3,[r7]
 2857 006c 1B68     	 ldr r3,[r3]
 2858 006e 3B60     	 str r3,[r7]
1073:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       tcp_seg_free(old_seg);
 2859              	 .loc 1 1073 0
 2860 0070 F868     	 ldr r0,[r7,#12]
 2861 0072 FFF7FEFF 	 bl tcp_seg_free
 2862              	.L169:
1064:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            TCP_SEQ_GEQ((seqno + cseg->len),
 2863              	 .loc 1 1064 0
 2864 0076 3B68     	 ldr r3,[r7]
 2865 0078 002B     	 cmp r3,#0
 2866 007a 0ED0     	 beq .L171
1065:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                        (next->tcphdr->seqno + next->len))) {
 2867              	 .loc 1 1065 0 discriminator 1
 2868 007c 7B68     	 ldr r3,[r7,#4]
 2869 007e 1B89     	 ldrh r3,[r3,#8]
 2870 0080 1A46     	 mov r2,r3
 2871 0082 1A4B     	 ldr r3,.L173
 2872 0084 1B68     	 ldr r3,[r3]
 2873 0086 1A44     	 add r2,r2,r3
 2874 0088 3B68     	 ldr r3,[r7]
 2875 008a DB68     	 ldr r3,[r3,#12]
 2876 008c 5B68     	 ldr r3,[r3,#4]
 2877 008e 3968     	 ldr r1,[r7]
 2878 0090 0989     	 ldrh r1,[r1,#8]
 2879 0092 0B44     	 add r3,r3,r1
 2880 0094 D31A     	 subs r3,r2,r3
1064:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            TCP_SEQ_GEQ((seqno + cseg->len),
 2881              	 .loc 1 1064 0 discriminator 1
 2882 0096 002B     	 cmp r3,#0
 2883 0098 CBDA     	 bge .L172
 2884              	.L171:
1074:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
1075:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (next &&
 2885              	 .loc 1 1075 0
 2886 009a 3B68     	 ldr r3,[r7]
 2887 009c 002B     	 cmp r3,#0
 2888 009e 1ED0     	 beq .L168
1076:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         TCP_SEQ_GT(seqno + cseg->len, next->tcphdr->seqno)) {
 2889              	 .loc 1 1076 0 discriminator 1
 2890 00a0 7B68     	 ldr r3,[r7,#4]
 2891 00a2 1B89     	 ldrh r3,[r3,#8]
 2892 00a4 1A46     	 mov r2,r3
 2893 00a6 114B     	 ldr r3,.L173
 2894 00a8 1B68     	 ldr r3,[r3]
 2895 00aa 1A44     	 add r2,r2,r3
 2896 00ac 3B68     	 ldr r3,[r7]
 2897 00ae DB68     	 ldr r3,[r3,#12]
 2898 00b0 5B68     	 ldr r3,[r3,#4]
 2899 00b2 D31A     	 subs r3,r2,r3
1075:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         TCP_SEQ_GT(seqno + cseg->len, next->tcphdr->seqno)) {
 2900              	 .loc 1 1075 0 discriminator 1
 2901 00b4 002B     	 cmp r3,#0
 2902 00b6 12DD     	 ble .L168
1077:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* We need to trim the incoming segment. */
1078:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       cseg->len = (u16_t)(next->tcphdr->seqno - seqno);
 2903              	 .loc 1 1078 0
 2904 00b8 3B68     	 ldr r3,[r7]
 2905 00ba DB68     	 ldr r3,[r3,#12]
 2906 00bc 5B68     	 ldr r3,[r3,#4]
 2907 00be 9AB2     	 uxth r2,r3
 2908 00c0 0A4B     	 ldr r3,.L173
 2909 00c2 1B68     	 ldr r3,[r3]
 2910 00c4 9BB2     	 uxth r3,r3
 2911 00c6 D31A     	 subs r3,r2,r3
 2912 00c8 9AB2     	 uxth r2,r3
 2913 00ca 7B68     	 ldr r3,[r7,#4]
 2914 00cc 1A81     	 strh r2,[r3,#8]
1079:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       pbuf_realloc(cseg->p, cseg->len);
 2915              	 .loc 1 1079 0
 2916 00ce 7B68     	 ldr r3,[r7,#4]
 2917 00d0 5A68     	 ldr r2,[r3,#4]
 2918 00d2 7B68     	 ldr r3,[r7,#4]
 2919 00d4 1B89     	 ldrh r3,[r3,#8]
 2920 00d6 1046     	 mov r0,r2
 2921 00d8 1946     	 mov r1,r3
 2922 00da FFF7FEFF 	 bl pbuf_realloc
 2923              	.L168:
1080:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
1081:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
1082:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   cseg->next = next;
 2924              	 .loc 1 1082 0
 2925 00de 7B68     	 ldr r3,[r7,#4]
 2926 00e0 3A68     	 ldr r2,[r7]
 2927 00e2 1A60     	 str r2,[r3]
1083:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** }
 2928              	 .loc 1 1083 0
 2929 00e4 1037     	 adds r7,r7,#16
 2930              	.LCFI28:
 2931              	 .cfi_def_cfa_offset 16
 2932 00e6 BD46     	 mov sp,r7
 2933              	.LCFI29:
 2934              	 .cfi_def_cfa_register 13
 2935              	 
 2936 00e8 B0BD     	 pop {r4,r5,r7,pc}
 2937              	.L174:
 2938 00ea 00BF     	 .align 2
 2939              	.L173:
 2940 00ec 00000000 	 .word seqno
 2941              	 .cfi_endproc
 2942              	.LFE138:
 2944              	 .section .text.tcp_free_acked_segments,"ax",%progbits
 2945              	 .align 2
 2946              	 .thumb
 2947              	 .thumb_func
 2949              	tcp_free_acked_segments:
 2950              	.LFB139:
1084:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_QUEUE_OOSEQ */
1085:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1086:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** /** Remove segments from a list if the incoming ACK acknowledges them */
1087:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static struct tcp_seg *
1088:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** tcp_free_acked_segments(struct tcp_pcb *pcb, struct tcp_seg *seg_list, const char *dbg_list_name,
1089:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                         struct tcp_seg *dbg_other_seg_list)
1090:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** {
 2951              	 .loc 1 1090 0
 2952              	 .cfi_startproc
 2953              	 
 2954              	 
 2955 0000 B0B5     	 push {r4,r5,r7,lr}
 2956              	.LCFI30:
 2957              	 .cfi_def_cfa_offset 16
 2958              	 .cfi_offset 4,-16
 2959              	 .cfi_offset 5,-12
 2960              	 .cfi_offset 7,-8
 2961              	 .cfi_offset 14,-4
 2962 0002 86B0     	 sub sp,sp,#24
 2963              	.LCFI31:
 2964              	 .cfi_def_cfa_offset 40
 2965 0004 00AF     	 add r7,sp,#0
 2966              	.LCFI32:
 2967              	 .cfi_def_cfa_register 7
 2968 0006 F860     	 str r0,[r7,#12]
 2969 0008 B960     	 str r1,[r7,#8]
 2970 000a 7A60     	 str r2,[r7,#4]
 2971 000c 3B60     	 str r3,[r7]
1091:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   struct tcp_seg *next;
1092:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   u16_t clen;
1093:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1094:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   LWIP_UNUSED_ARG(dbg_list_name);
1095:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   LWIP_UNUSED_ARG(dbg_other_seg_list);
1096:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1097:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   while (seg_list != NULL &&
 2972              	 .loc 1 1097 0
 2973 000e 1FE0     	 b .L176
 2974              	.L180:
1098:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          TCP_SEQ_LEQ(lwip_ntohl(seg_list->tcphdr->seqno) +
1099:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                      TCP_TCPLEN(seg_list), ackno)) {
1100:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_receive: removing %"U32_F":%"U32_F" from pcb->%s\n",
1101:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                   lwip_ntohl(seg_list->tcphdr->seqno),
1102:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                   lwip_ntohl(seg_list->tcphdr->seqno) + TCP_TCPLEN(seg_list),
1103:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                   dbg_list_name));
1104:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1105:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     next = seg_list;
 2975              	 .loc 1 1105 0
 2976 0010 BB68     	 ldr r3,[r7,#8]
 2977 0012 7B61     	 str r3,[r7,#20]
1106:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     seg_list = seg_list->next;
 2978              	 .loc 1 1106 0
 2979 0014 BB68     	 ldr r3,[r7,#8]
 2980 0016 1B68     	 ldr r3,[r3]
 2981 0018 BB60     	 str r3,[r7,#8]
1107:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1108:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     clen = pbuf_clen(next->p);
 2982              	 .loc 1 1108 0
 2983 001a 7B69     	 ldr r3,[r7,#20]
 2984 001c 5B68     	 ldr r3,[r3,#4]
 2985 001e 1846     	 mov r0,r3
 2986 0020 FFF7FEFF 	 bl pbuf_clen
 2987 0024 0346     	 mov r3,r0
 2988 0026 7B82     	 strh r3,[r7,#18]
1109:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     LWIP_DEBUGF(TCP_QLEN_DEBUG, ("tcp_receive: queuelen %"TCPWNDSIZE_F" ... ",
1110:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                  (tcpwnd_size_t)pcb->snd_queuelen));
1111:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     LWIP_ASSERT("pcb->snd_queuelen >= pbuf_clen(next->p)", (pcb->snd_queuelen >= clen));
1112:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1113:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     pcb->snd_queuelen = (u16_t)(pcb->snd_queuelen - clen);
 2989              	 .loc 1 1113 0
 2990 0028 FB68     	 ldr r3,[r7,#12]
 2991 002a B3F86620 	 ldrh r2,[r3,#102]
 2992 002e 7B8A     	 ldrh r3,[r7,#18]
 2993 0030 D31A     	 subs r3,r2,r3
 2994 0032 9AB2     	 uxth r2,r3
 2995 0034 FB68     	 ldr r3,[r7,#12]
 2996 0036 A3F86620 	 strh r2,[r3,#102]
1114:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     recv_acked = (tcpwnd_size_t)(recv_acked + next->len);
 2997              	 .loc 1 1114 0
 2998 003a 7B69     	 ldr r3,[r7,#20]
 2999 003c 1A89     	 ldrh r2,[r3,#8]
 3000 003e 194B     	 ldr r3,.L182
 3001 0040 1B88     	 ldrh r3,[r3]
 3002 0042 1344     	 add r3,r3,r2
 3003 0044 9AB2     	 uxth r2,r3
 3004 0046 174B     	 ldr r3,.L182
 3005 0048 1A80     	 strh r2,[r3]
1115:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     tcp_seg_free(next);
 3006              	 .loc 1 1115 0
 3007 004a 7869     	 ldr r0,[r7,#20]
 3008 004c FFF7FEFF 	 bl tcp_seg_free
 3009              	.L176:
1097:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          TCP_SEQ_LEQ(lwip_ntohl(seg_list->tcphdr->seqno) +
 3010              	 .loc 1 1097 0
 3011 0050 BB68     	 ldr r3,[r7,#8]
 3012 0052 002B     	 cmp r3,#0
 3013 0054 20D0     	 beq .L177
1098:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                      TCP_TCPLEN(seg_list), ackno)) {
 3014              	 .loc 1 1098 0
 3015 0056 BB68     	 ldr r3,[r7,#8]
 3016 0058 DB68     	 ldr r3,[r3,#12]
 3017 005a 5B68     	 ldr r3,[r3,#4]
 3018 005c 1846     	 mov r0,r3
 3019 005e FFF7FEFF 	 bl lwip_htonl
 3020 0062 0446     	 mov r4,r0
 3021 0064 BB68     	 ldr r3,[r7,#8]
 3022 0066 1B89     	 ldrh r3,[r3,#8]
 3023 0068 1D46     	 mov r5,r3
 3024 006a BB68     	 ldr r3,[r7,#8]
 3025 006c DB68     	 ldr r3,[r3,#12]
 3026 006e 9B89     	 ldrh r3,[r3,#12]
 3027 0070 9BB2     	 uxth r3,r3
 3028 0072 1846     	 mov r0,r3
 3029 0074 FFF7FEFF 	 bl lwip_htons
 3030 0078 0346     	 mov r3,r0
 3031 007a DBB2     	 uxtb r3,r3
 3032 007c 03F00303 	 and r3,r3,#3
 3033 0080 002B     	 cmp r3,#0
 3034 0082 01D0     	 beq .L178
1098:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                      TCP_TCPLEN(seg_list), ackno)) {
 3035              	 .loc 1 1098 0 is_stmt 0 discriminator 1
 3036 0084 0123     	 movs r3,#1
 3037 0086 00E0     	 b .L179
 3038              	.L178:
1098:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                      TCP_TCPLEN(seg_list), ackno)) {
 3039              	 .loc 1 1098 0 discriminator 2
 3040 0088 0023     	 movs r3,#0
 3041              	.L179:
1098:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                      TCP_TCPLEN(seg_list), ackno)) {
 3042              	 .loc 1 1098 0 discriminator 4
 3043 008a 2B44     	 add r3,r3,r5
 3044 008c E218     	 adds r2,r4,r3
 3045 008e 064B     	 ldr r3,.L182+4
 3046 0090 1B68     	 ldr r3,[r3]
 3047 0092 D31A     	 subs r3,r2,r3
1097:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          TCP_SEQ_LEQ(lwip_ntohl(seg_list->tcphdr->seqno) +
 3048              	 .loc 1 1097 0 is_stmt 1 discriminator 4
 3049 0094 002B     	 cmp r3,#0
 3050 0096 BBDD     	 ble .L180
 3051              	.L177:
1116:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1117:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     LWIP_DEBUGF(TCP_QLEN_DEBUG, ("%"TCPWNDSIZE_F" (after freeing %s)\n",
1118:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                  (tcpwnd_size_t)pcb->snd_queuelen,
1119:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                  dbg_list_name));
1120:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (pcb->snd_queuelen != 0) {
1121:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_ASSERT("tcp_receive: valid queue length",
1122:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   seg_list != NULL || dbg_other_seg_list != NULL);
1123:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
1124:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
1125:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   return seg_list;
 3052              	 .loc 1 1125 0
 3053 0098 BB68     	 ldr r3,[r7,#8]
1126:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** }
 3054              	 .loc 1 1126 0
 3055 009a 1846     	 mov r0,r3
 3056 009c 1837     	 adds r7,r7,#24
 3057              	.LCFI33:
 3058              	 .cfi_def_cfa_offset 16
 3059 009e BD46     	 mov sp,r7
 3060              	.LCFI34:
 3061              	 .cfi_def_cfa_register 13
 3062              	 
 3063 00a0 B0BD     	 pop {r4,r5,r7,pc}
 3064              	.L183:
 3065 00a2 00BF     	 .align 2
 3066              	.L182:
 3067 00a4 00000000 	 .word recv_acked
 3068 00a8 00000000 	 .word ackno
 3069              	 .cfi_endproc
 3070              	.LFE139:
 3072              	 .section .rodata
 3073              	 .align 2
 3074              	.LC0:
 3075 0000 756E6163 	 .ascii "unacked\000"
 3075      6B656400 
 3076              	 .align 2
 3077              	.LC1:
 3078 0008 756E7365 	 .ascii "unsent\000"
 3078      6E7400
 3079 000f 00       	 .section .text.tcp_receive,"ax",%progbits
 3080              	 .align 2
 3081              	 .thumb
 3082              	 .thumb_func
 3084              	tcp_receive:
 3085              	.LFB140:
1127:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1128:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** /**
1129:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * Called by tcp_process. Checks if the given segment is an ACK for outstanding
1130:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * data, and if so frees the memory of the buffered data. Next, it places the
1131:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * segment on any of the receive queues (pcb->recved or pcb->ooseq). If the segment
1132:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * is buffered, the pbuf is referenced by pbuf_ref so that it will not be freed until
1133:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * it has been removed from the buffer.
1134:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
1135:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * If the incoming segment constitutes an ACK for a segment that was used for RTT
1136:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * estimation, the RTT is estimated here as well.
1137:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
1138:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * Called from tcp_process().
1139:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  */
1140:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static void
1141:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** tcp_receive(struct tcp_pcb *pcb)
1142:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** {
 3086              	 .loc 1 1142 0
 3087              	 .cfi_startproc
 3088              	 
 3089              	 
 3090 0000 B0B5     	 push {r4,r5,r7,lr}
 3091              	.LCFI35:
 3092              	 .cfi_def_cfa_offset 16
 3093              	 .cfi_offset 4,-16
 3094              	 .cfi_offset 5,-12
 3095              	 .cfi_offset 7,-8
 3096              	 .cfi_offset 14,-4
 3097 0002 94B0     	 sub sp,sp,#80
 3098              	.LCFI36:
 3099              	 .cfi_def_cfa_offset 96
 3100 0004 00AF     	 add r7,sp,#0
 3101              	.LCFI37:
 3102              	 .cfi_def_cfa_register 7
 3103 0006 7860     	 str r0,[r7,#4]
1143:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   s16_t m;
1144:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   u32_t right_wnd_edge;
1145:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   int found_dupack = 0;
 3104              	 .loc 1 1145 0
 3105 0008 0023     	 movs r3,#0
 3106 000a BB64     	 str r3,[r7,#72]
1146:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1147:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   LWIP_ASSERT("tcp_receive: invalid pcb", pcb != NULL);
1148:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   LWIP_ASSERT("tcp_receive: wrong state", pcb->state >= ESTABLISHED);
1149:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1150:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if (flags & TCP_ACK) {
 3107              	 .loc 1 1150 0
 3108 000c 9F4B     	 ldr r3,.L284
 3109 000e 1B78     	 ldrb r3,[r3]
 3110 0010 03F01003 	 and r3,r3,#16
 3111 0014 002B     	 cmp r3,#0
 3112 0016 00F05E82 	 beq .L185
1151:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     right_wnd_edge = pcb->snd_wnd + pcb->snd_wl2;
 3113              	 .loc 1 1151 0
 3114 001a 7B68     	 ldr r3,[r7,#4]
 3115 001c B3F86030 	 ldrh r3,[r3,#96]
 3116 0020 1A46     	 mov r2,r3
 3117 0022 7B68     	 ldr r3,[r7,#4]
 3118 0024 9B6D     	 ldr r3,[r3,#88]
 3119 0026 1344     	 add r3,r3,r2
 3120 0028 3B63     	 str r3,[r7,#48]
1152:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1153:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* Update window. */
1154:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (TCP_SEQ_LT(pcb->snd_wl1, seqno) ||
 3121              	 .loc 1 1154 0
 3122 002a 7B68     	 ldr r3,[r7,#4]
 3123 002c 5A6D     	 ldr r2,[r3,#84]
 3124 002e 984B     	 ldr r3,.L284+4
 3125 0030 1B68     	 ldr r3,[r3]
 3126 0032 D31A     	 subs r3,r2,r3
 3127 0034 002B     	 cmp r3,#0
 3128 0036 1BDB     	 blt .L186
1155:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         (pcb->snd_wl1 == seqno && TCP_SEQ_LT(pcb->snd_wl2, ackno)) ||
 3129              	 .loc 1 1155 0 discriminator 1
 3130 0038 7B68     	 ldr r3,[r7,#4]
 3131 003a 5A6D     	 ldr r2,[r3,#84]
 3132 003c 944B     	 ldr r3,.L284+4
 3133 003e 1B68     	 ldr r3,[r3]
1154:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         (pcb->snd_wl1 == seqno && TCP_SEQ_LT(pcb->snd_wl2, ackno)) ||
 3134              	 .loc 1 1154 0 discriminator 1
 3135 0040 9A42     	 cmp r2,r3
 3136 0042 06D1     	 bne .L187
 3137              	 .loc 1 1155 0
 3138 0044 7B68     	 ldr r3,[r7,#4]
 3139 0046 9A6D     	 ldr r2,[r3,#88]
 3140 0048 924B     	 ldr r3,.L284+8
 3141 004a 1B68     	 ldr r3,[r3]
 3142 004c D31A     	 subs r3,r2,r3
 3143 004e 002B     	 cmp r3,#0
 3144 0050 0EDB     	 blt .L186
 3145              	.L187:
1156:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         (pcb->snd_wl2 == ackno && (u32_t)SND_WND_SCALE(pcb, tcphdr->wnd) > pcb->snd_wnd)) {
 3146              	 .loc 1 1156 0 discriminator 1
 3147 0052 7B68     	 ldr r3,[r7,#4]
 3148 0054 9A6D     	 ldr r2,[r3,#88]
 3149 0056 8F4B     	 ldr r3,.L284+8
 3150 0058 1B68     	 ldr r3,[r3]
1155:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         (pcb->snd_wl1 == seqno && TCP_SEQ_LT(pcb->snd_wl2, ackno)) ||
 3151              	 .loc 1 1155 0 discriminator 1
 3152 005a 9A42     	 cmp r2,r3
 3153 005c 25D1     	 bne .L188
 3154              	 .loc 1 1156 0
 3155 005e 8E4B     	 ldr r3,.L284+12
 3156 0060 1B68     	 ldr r3,[r3]
 3157 0062 DB89     	 ldrh r3,[r3,#14]
 3158 0064 9AB2     	 uxth r2,r3
 3159 0066 7B68     	 ldr r3,[r7,#4]
 3160 0068 B3F86030 	 ldrh r3,[r3,#96]
 3161 006c 9A42     	 cmp r2,r3
 3162 006e 1CD9     	 bls .L188
 3163              	.L186:
1157:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       pcb->snd_wnd = SND_WND_SCALE(pcb, tcphdr->wnd);
 3164              	 .loc 1 1157 0
 3165 0070 894B     	 ldr r3,.L284+12
 3166 0072 1B68     	 ldr r3,[r3]
 3167 0074 DB89     	 ldrh r3,[r3,#14]
 3168 0076 9AB2     	 uxth r2,r3
 3169 0078 7B68     	 ldr r3,[r7,#4]
 3170 007a A3F86020 	 strh r2,[r3,#96]
1158:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* keep track of the biggest window announced by the remote host to calculate
1159:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          the maximum segment size */
1160:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (pcb->snd_wnd_max < pcb->snd_wnd) {
 3171              	 .loc 1 1160 0
 3172 007e 7B68     	 ldr r3,[r7,#4]
 3173 0080 B3F86220 	 ldrh r2,[r3,#98]
 3174 0084 7B68     	 ldr r3,[r7,#4]
 3175 0086 B3F86030 	 ldrh r3,[r3,#96]
 3176 008a 9A42     	 cmp r2,r3
 3177 008c 05D2     	 bcs .L189
1161:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->snd_wnd_max = pcb->snd_wnd;
 3178              	 .loc 1 1161 0
 3179 008e 7B68     	 ldr r3,[r7,#4]
 3180 0090 B3F86020 	 ldrh r2,[r3,#96]
 3181 0094 7B68     	 ldr r3,[r7,#4]
 3182 0096 A3F86220 	 strh r2,[r3,#98]
 3183              	.L189:
1162:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
1163:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       pcb->snd_wl1 = seqno;
 3184              	 .loc 1 1163 0
 3185 009a 7D4B     	 ldr r3,.L284+4
 3186 009c 1A68     	 ldr r2,[r3]
 3187 009e 7B68     	 ldr r3,[r7,#4]
 3188 00a0 5A65     	 str r2,[r3,#84]
1164:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       pcb->snd_wl2 = ackno;
 3189              	 .loc 1 1164 0
 3190 00a2 7C4B     	 ldr r3,.L284+8
 3191 00a4 1A68     	 ldr r2,[r3]
 3192 00a6 7B68     	 ldr r3,[r7,#4]
 3193 00a8 9A65     	 str r2,[r3,#88]
 3194              	.L188:
1165:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_DEBUGF(TCP_WND_DEBUG, ("tcp_receive: window update %"TCPWNDSIZE_F"\n", pcb->snd_wnd));
1166:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_WND_DEBUG
1167:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     } else {
1168:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (pcb->snd_wnd != (tcpwnd_size_t)SND_WND_SCALE(pcb, tcphdr->wnd)) {
1169:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         LWIP_DEBUGF(TCP_WND_DEBUG,
1170:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     ("tcp_receive: no window update lastack %"U32_F" ackno %"
1171:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                      U32_F" wl1 %"U32_F" seqno %"U32_F" wl2 %"U32_F"\n",
1172:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                      pcb->lastack, ackno, pcb->snd_wl1, seqno, pcb->snd_wl2));
1173:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
1174:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_WND_DEBUG */
1175:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
1176:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1177:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* (From Stevens TCP/IP Illustrated Vol II, p970.) Its only a
1178:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      * duplicate ack if:
1179:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      * 1) It doesn't ACK new data
1180:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      * 2) length of received packet is zero (i.e. no payload)
1181:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      * 3) the advertised window hasn't changed
1182:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      * 4) There is outstanding unacknowledged data (retransmission timer running)
1183:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      * 5) The ACK is == biggest ACK sequence number so far seen (snd_una)
1184:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      *
1185:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      * If it passes all five, should process as a dupack:
1186:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      * a) dupacks < 3: do nothing
1187:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      * b) dupacks == 3: fast retransmit
1188:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      * c) dupacks > 3: increase cwnd
1189:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      *
1190:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      * If it only passes 1-3, should reset dupack counter (and add to
1191:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      * stats, which we don't do in lwIP)
1192:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      *
1193:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      * If it only passes 1, should reset dupack counter
1194:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      *
1195:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      */
1196:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1197:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* Clause 1 */
1198:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (TCP_SEQ_LEQ(ackno, pcb->lastack)) {
 3195              	 .loc 1 1198 0
 3196 00aa 7A4B     	 ldr r3,.L284+8
 3197 00ac 1A68     	 ldr r2,[r3]
 3198 00ae 7B68     	 ldr r3,[r7,#4]
 3199 00b0 5B6C     	 ldr r3,[r3,#68]
 3200 00b2 D31A     	 subs r3,r2,r3
 3201 00b4 002B     	 cmp r3,#0
 3202 00b6 5DDC     	 bgt .L190
1199:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* Clause 2 */
1200:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (tcplen == 0) {
 3203              	 .loc 1 1200 0
 3204 00b8 784B     	 ldr r3,.L284+16
 3205 00ba 1B88     	 ldrh r3,[r3]
 3206 00bc 002B     	 cmp r3,#0
 3207 00be 50D1     	 bne .L191
1201:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* Clause 3 */
1202:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (pcb->snd_wl2 + pcb->snd_wnd == right_wnd_edge) {
 3208              	 .loc 1 1202 0
 3209 00c0 7B68     	 ldr r3,[r7,#4]
 3210 00c2 9B6D     	 ldr r3,[r3,#88]
 3211 00c4 7A68     	 ldr r2,[r7,#4]
 3212 00c6 B2F86020 	 ldrh r2,[r2,#96]
 3213 00ca 1A44     	 add r2,r2,r3
 3214 00cc 3B6B     	 ldr r3,[r7,#48]
 3215 00ce 9A42     	 cmp r2,r3
 3216 00d0 47D1     	 bne .L191
1203:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* Clause 4 */
1204:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (pcb->rtime >= 0) {
 3217              	 .loc 1 1204 0
 3218 00d2 7B68     	 ldr r3,[r7,#4]
 3219 00d4 1B8E     	 ldrh r3,[r3,#48]
 3220 00d6 1BB2     	 sxth r3,r3
 3221 00d8 002B     	 cmp r3,#0
 3222 00da 42DB     	 blt .L191
1205:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* Clause 5 */
1206:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (pcb->lastack == ackno) {
 3223              	 .loc 1 1206 0
 3224 00dc 7B68     	 ldr r3,[r7,#4]
 3225 00de 5A6C     	 ldr r2,[r3,#68]
 3226 00e0 6C4B     	 ldr r3,.L284+8
 3227 00e2 1B68     	 ldr r3,[r3]
 3228 00e4 9A42     	 cmp r2,r3
 3229 00e6 3CD1     	 bne .L191
1207:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               found_dupack = 1;
 3230              	 .loc 1 1207 0
 3231 00e8 0123     	 movs r3,#1
 3232 00ea BB64     	 str r3,[r7,#72]
1208:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               if ((u8_t)(pcb->dupacks + 1) > pcb->dupacks) {
 3233              	 .loc 1 1208 0
 3234 00ec 7B68     	 ldr r3,[r7,#4]
 3235 00ee 93F84330 	 ldrb r3,[r3,#67]
 3236 00f2 0133     	 adds r3,r3,#1
 3237 00f4 DAB2     	 uxtb r2,r3
 3238 00f6 7B68     	 ldr r3,[r7,#4]
 3239 00f8 93F84330 	 ldrb r3,[r3,#67]
 3240 00fc 9A42     	 cmp r2,r3
 3241 00fe 07D9     	 bls .L192
1209:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 ++pcb->dupacks;
 3242              	 .loc 1 1209 0
 3243 0100 7B68     	 ldr r3,[r7,#4]
 3244 0102 93F84330 	 ldrb r3,[r3,#67]
 3245 0106 0133     	 adds r3,r3,#1
 3246 0108 DAB2     	 uxtb r2,r3
 3247 010a 7B68     	 ldr r3,[r7,#4]
 3248 010c 83F84320 	 strb r2,[r3,#67]
 3249              	.L192:
1210:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               }
1211:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               if (pcb->dupacks > 3) {
 3250              	 .loc 1 1211 0
 3251 0110 7B68     	 ldr r3,[r7,#4]
 3252 0112 93F84330 	 ldrb r3,[r3,#67]
 3253 0116 032B     	 cmp r3,#3
 3254 0118 1BD9     	 bls .L193
1212:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 /* Inflate the congestion window */
1213:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 TCP_WND_INC(pcb->cwnd, pcb->mss);
 3255              	 .loc 1 1213 0
 3256 011a 7B68     	 ldr r3,[r7,#4]
 3257 011c B3F84820 	 ldrh r2,[r3,#72]
 3258 0120 7B68     	 ldr r3,[r7,#4]
 3259 0122 5B8E     	 ldrh r3,[r3,#50]
 3260 0124 1344     	 add r3,r3,r2
 3261 0126 9AB2     	 uxth r2,r3
 3262 0128 7B68     	 ldr r3,[r7,#4]
 3263 012a B3F84830 	 ldrh r3,[r3,#72]
 3264 012e 9A42     	 cmp r2,r3
 3265 0130 0AD3     	 bcc .L194
 3266              	 .loc 1 1213 0 is_stmt 0 discriminator 1
 3267 0132 7B68     	 ldr r3,[r7,#4]
 3268 0134 B3F84820 	 ldrh r2,[r3,#72]
 3269 0138 7B68     	 ldr r3,[r7,#4]
 3270 013a 5B8E     	 ldrh r3,[r3,#50]
 3271 013c 1344     	 add r3,r3,r2
 3272 013e 9AB2     	 uxth r2,r3
 3273 0140 7B68     	 ldr r3,[r7,#4]
 3274 0142 A3F84820 	 strh r2,[r3,#72]
 3275 0146 04E0     	 b .L193
 3276              	.L194:
 3277              	 .loc 1 1213 0 discriminator 2
 3278 0148 7B68     	 ldr r3,[r7,#4]
 3279 014a 4FF6FF72 	 movw r2,#65535
 3280 014e A3F84820 	 strh r2,[r3,#72]
 3281              	.L193:
1214:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               }
1215:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               if (pcb->dupacks >= 3) {
 3282              	 .loc 1 1215 0 is_stmt 1
 3283 0152 7B68     	 ldr r3,[r7,#4]
 3284 0154 93F84330 	 ldrb r3,[r3,#67]
 3285 0158 022B     	 cmp r3,#2
 3286 015a 02D9     	 bls .L191
1216:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 /* Do fast retransmit (checked via TF_INFR, not via dupacks count) */
1217:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 tcp_rexmit_fast(pcb);
 3287              	 .loc 1 1217 0
 3288 015c 7868     	 ldr r0,[r7,#4]
 3289 015e FFF7FEFF 	 bl tcp_rexmit_fast
 3290              	.L191:
1218:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               }
1219:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
1220:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
1221:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
1222:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
1223:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* If Clause (1) or more is true, but not a duplicate ack, reset
1224:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        * count of consecutive duplicate acks */
1225:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (!found_dupack) {
 3291              	 .loc 1 1225 0
 3292 0162 BB6C     	 ldr r3,[r7,#72]
 3293 0164 002B     	 cmp r3,#0
 3294 0166 40F05981 	 bne .L196
1226:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->dupacks = 0;
 3295              	 .loc 1 1226 0
 3296 016a 7B68     	 ldr r3,[r7,#4]
 3297 016c 0022     	 movs r2,#0
 3298 016e 83F84320 	 strb r2,[r3,#67]
 3299 0172 53E1     	 b .L196
 3300              	.L190:
1227:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
1228:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     } else if (TCP_SEQ_BETWEEN(ackno, pcb->lastack + 1, pcb->snd_nxt)) {
 3301              	 .loc 1 1228 0
 3302 0174 474B     	 ldr r3,.L284+8
 3303 0176 1A68     	 ldr r2,[r3]
 3304 0178 7B68     	 ldr r3,[r7,#4]
 3305 017a 5B6C     	 ldr r3,[r3,#68]
 3306 017c D31A     	 subs r3,r2,r3
 3307 017e 013B     	 subs r3,r3,#1
 3308 0180 002B     	 cmp r3,#0
 3309 0182 C0F24881 	 blt .L197
 3310              	 .loc 1 1228 0 is_stmt 0 discriminator 1
 3311 0186 434B     	 ldr r3,.L284+8
 3312 0188 1A68     	 ldr r2,[r3]
 3313 018a 7B68     	 ldr r3,[r7,#4]
 3314 018c 1B6D     	 ldr r3,[r3,#80]
 3315 018e D31A     	 subs r3,r2,r3
 3316 0190 002B     	 cmp r3,#0
 3317 0192 00F34081 	 bgt .L197
 3318              	.LBB8:
1229:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* We come here when the ACK acknowledges new data. */
1230:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       tcpwnd_size_t acked;
1231:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1232:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* Reset the "IN Fast Retransmit" flag, since we are no longer
1233:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          in fast retransmit. Also reset the congestion window to the
1234:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          slow start threshold. */
1235:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (pcb->flags & TF_INFR) {
 3319              	 .loc 1 1235 0 is_stmt 1
 3320 0196 7B68     	 ldr r3,[r7,#4]
 3321 0198 5B8B     	 ldrh r3,[r3,#26]
 3322 019a 03F00403 	 and r3,r3,#4
 3323 019e 002B     	 cmp r3,#0
 3324 01a0 10D0     	 beq .L198
1236:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_clear_flags(pcb, TF_INFR);
 3325              	 .loc 1 1236 0
 3326 01a2 7B68     	 ldr r3,[r7,#4]
 3327 01a4 5B8B     	 ldrh r3,[r3,#26]
 3328 01a6 23F00403 	 bic r3,r3,#4
 3329 01aa 9AB2     	 uxth r2,r3
 3330 01ac 7B68     	 ldr r3,[r7,#4]
 3331 01ae 5A83     	 strh r2,[r3,#26]
1237:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->cwnd = pcb->ssthresh;
 3332              	 .loc 1 1237 0
 3333 01b0 7B68     	 ldr r3,[r7,#4]
 3334 01b2 B3F84A20 	 ldrh r2,[r3,#74]
 3335 01b6 7B68     	 ldr r3,[r7,#4]
 3336 01b8 A3F84820 	 strh r2,[r3,#72]
1238:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->bytes_acked = 0;
 3337              	 .loc 1 1238 0
 3338 01bc 7B68     	 ldr r3,[r7,#4]
 3339 01be 0022     	 movs r2,#0
 3340 01c0 A3F86A20 	 strh r2,[r3,#106]
 3341              	.L198:
1239:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
1240:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1241:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* Reset the number of retransmissions. */
1242:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       pcb->nrtx = 0;
 3342              	 .loc 1 1242 0
 3343 01c4 7B68     	 ldr r3,[r7,#4]
 3344 01c6 0022     	 movs r2,#0
 3345 01c8 83F84220 	 strb r2,[r3,#66]
1243:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1244:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* Reset the retransmission time-out. */
1245:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       pcb->rto = (s16_t)((pcb->sa >> 3) + pcb->sv);
 3346              	 .loc 1 1245 0
 3347 01cc 7B68     	 ldr r3,[r7,#4]
 3348 01ce 9B8F     	 ldrh r3,[r3,#60]
 3349 01d0 1BB2     	 sxth r3,r3
 3350 01d2 DB10     	 asrs r3,r3,#3
 3351 01d4 9BB2     	 uxth r3,r3
 3352 01d6 9AB2     	 uxth r2,r3
 3353 01d8 7B68     	 ldr r3,[r7,#4]
 3354 01da DB8F     	 ldrh r3,[r3,#62]
 3355 01dc 9BB2     	 uxth r3,r3
 3356 01de 1344     	 add r3,r3,r2
 3357 01e0 9BB2     	 uxth r3,r3
 3358 01e2 9AB2     	 uxth r2,r3
 3359 01e4 7B68     	 ldr r3,[r7,#4]
 3360 01e6 A3F84020 	 strh r2,[r3,#64]
1246:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1247:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* Record how much data this ACK acks */
1248:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       acked = (tcpwnd_size_t)(ackno - pcb->lastack);
 3361              	 .loc 1 1248 0
 3362 01ea 2A4B     	 ldr r3,.L284+8
 3363 01ec 1B68     	 ldr r3,[r3]
 3364 01ee 9AB2     	 uxth r2,r3
 3365 01f0 7B68     	 ldr r3,[r7,#4]
 3366 01f2 5B6C     	 ldr r3,[r3,#68]
 3367 01f4 9BB2     	 uxth r3,r3
 3368 01f6 D31A     	 subs r3,r2,r3
 3369 01f8 FB85     	 strh r3,[r7,#46]
1249:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1250:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* Reset the fast retransmit variables. */
1251:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       pcb->dupacks = 0;
 3370              	 .loc 1 1251 0
 3371 01fa 7B68     	 ldr r3,[r7,#4]
 3372 01fc 0022     	 movs r2,#0
 3373 01fe 83F84320 	 strb r2,[r3,#67]
1252:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       pcb->lastack = ackno;
 3374              	 .loc 1 1252 0
 3375 0202 244B     	 ldr r3,.L284+8
 3376 0204 1A68     	 ldr r2,[r3]
 3377 0206 7B68     	 ldr r3,[r7,#4]
 3378 0208 5A64     	 str r2,[r3,#68]
1253:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1254:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* Update the congestion control variables (cwnd and
1255:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          ssthresh). */
1256:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (pcb->state >= ESTABLISHED) {
 3379              	 .loc 1 1256 0
 3380 020a 7B68     	 ldr r3,[r7,#4]
 3381 020c 1B7D     	 ldrb r3,[r3,#20]
 3382 020e 032B     	 cmp r3,#3
 3383 0210 40F28F80 	 bls .L199
1257:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (pcb->cwnd < pcb->ssthresh) {
 3384              	 .loc 1 1257 0
 3385 0214 7B68     	 ldr r3,[r7,#4]
 3386 0216 B3F84820 	 ldrh r2,[r3,#72]
 3387 021a 7B68     	 ldr r3,[r7,#4]
 3388 021c B3F84A30 	 ldrh r3,[r3,#74]
 3389 0220 9A42     	 cmp r2,r3
 3390 0222 3DD2     	 bcs .L200
 3391              	.LBB9:
1258:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tcpwnd_size_t increase;
1259:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* limit to 1 SMSS segment during period following RTO */
1260:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           u8_t num_seg = (pcb->flags & TF_RTO) ? 1 : 2;
 3392              	 .loc 1 1260 0
 3393 0224 7B68     	 ldr r3,[r7,#4]
 3394 0226 5B8B     	 ldrh r3,[r3,#26]
 3395 0228 03F40063 	 and r3,r3,#2048
 3396 022c 002B     	 cmp r3,#0
 3397 022e 01D0     	 beq .L201
 3398              	 .loc 1 1260 0 is_stmt 0 discriminator 1
 3399 0230 0123     	 movs r3,#1
 3400 0232 00E0     	 b .L202
 3401              	.L201:
 3402              	 .loc 1 1260 0 discriminator 2
 3403 0234 0223     	 movs r3,#2
 3404              	.L202:
 3405              	 .loc 1 1260 0 discriminator 4
 3406 0236 87F82D30 	 strb r3,[r7,#45]
1261:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* RFC 3465, section 2.2 Slow Start */
1262:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           increase = LWIP_MIN(acked, (tcpwnd_size_t)(num_seg * pcb->mss));
 3407              	 .loc 1 1262 0 is_stmt 1 discriminator 4
 3408 023a 97F82D30 	 ldrb r3,[r7,#45]
 3409 023e 9AB2     	 uxth r2,r3
 3410 0240 7B68     	 ldr r3,[r7,#4]
 3411 0242 5B8E     	 ldrh r3,[r3,#50]
 3412 0244 12FB03F3 	 smulbb r3,r2,r3
 3413 0248 9AB2     	 uxth r2,r3
 3414 024a FB8D     	 ldrh r3,[r7,#46]
 3415 024c 9342     	 cmp r3,r2
 3416 024e 28BF     	 it cs
 3417 0250 1346     	 movcs r3,r2
 3418 0252 7B85     	 strh r3,[r7,#42]
1263:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           TCP_WND_INC(pcb->cwnd, increase);
 3419              	 .loc 1 1263 0 discriminator 4
 3420 0254 7B68     	 ldr r3,[r7,#4]
 3421 0256 B3F84820 	 ldrh r2,[r3,#72]
 3422 025a 7B8D     	 ldrh r3,[r7,#42]
 3423 025c 1344     	 add r3,r3,r2
 3424 025e 9AB2     	 uxth r2,r3
 3425 0260 7B68     	 ldr r3,[r7,#4]
 3426 0262 B3F84830 	 ldrh r3,[r3,#72]
 3427 0266 9A42     	 cmp r2,r3
 3428 0268 09D3     	 bcc .L203
 3429              	 .loc 1 1263 0 is_stmt 0 discriminator 1
 3430 026a 7B68     	 ldr r3,[r7,#4]
 3431 026c B3F84820 	 ldrh r2,[r3,#72]
 3432 0270 7B8D     	 ldrh r3,[r7,#42]
 3433 0272 1344     	 add r3,r3,r2
 3434 0274 9AB2     	 uxth r2,r3
 3435 0276 7B68     	 ldr r3,[r7,#4]
 3436 0278 A3F84820 	 strh r2,[r3,#72]
 3437 027c 59E0     	 b .L199
 3438              	.L203:
 3439              	 .loc 1 1263 0 discriminator 2
 3440 027e 7B68     	 ldr r3,[r7,#4]
 3441 0280 4FF6FF72 	 movw r2,#65535
 3442 0284 A3F84820 	 strh r2,[r3,#72]
 3443              	.LBE9:
 3444 0288 53E0     	 b .L199
 3445              	.L285:
 3446 028a 00BF     	 .align 2
 3447              	.L284:
 3448 028c 00000000 	 .word flags
 3449 0290 00000000 	 .word seqno
 3450 0294 00000000 	 .word ackno
 3451 0298 00000000 	 .word tcphdr
 3452 029c 00000000 	 .word tcplen
 3453              	.L200:
1264:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           LWIP_DEBUGF(TCP_CWND_DEBUG, ("tcp_receive: slow start cwnd %"TCPWNDSIZE_F"\n", pcb->cwnd)
1265:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         } else {
1266:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* RFC 3465, section 2.1 Congestion Avoidance */
1267:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           TCP_WND_INC(pcb->bytes_acked, acked);
 3454              	 .loc 1 1267 0 is_stmt 1
 3455 02a0 7B68     	 ldr r3,[r7,#4]
 3456 02a2 B3F86A20 	 ldrh r2,[r3,#106]
 3457 02a6 FB8D     	 ldrh r3,[r7,#46]
 3458 02a8 1344     	 add r3,r3,r2
 3459 02aa 9AB2     	 uxth r2,r3
 3460 02ac 7B68     	 ldr r3,[r7,#4]
 3461 02ae B3F86A30 	 ldrh r3,[r3,#106]
 3462 02b2 9A42     	 cmp r2,r3
 3463 02b4 09D3     	 bcc .L205
 3464              	 .loc 1 1267 0 is_stmt 0 discriminator 1
 3465 02b6 7B68     	 ldr r3,[r7,#4]
 3466 02b8 B3F86A20 	 ldrh r2,[r3,#106]
 3467 02bc FB8D     	 ldrh r3,[r7,#46]
 3468 02be 1344     	 add r3,r3,r2
 3469 02c0 9AB2     	 uxth r2,r3
 3470 02c2 7B68     	 ldr r3,[r7,#4]
 3471 02c4 A3F86A20 	 strh r2,[r3,#106]
 3472 02c8 04E0     	 b .L206
 3473              	.L205:
 3474              	 .loc 1 1267 0 discriminator 2
 3475 02ca 7B68     	 ldr r3,[r7,#4]
 3476 02cc 4FF6FF72 	 movw r2,#65535
 3477 02d0 A3F86A20 	 strh r2,[r3,#106]
 3478              	.L206:
1268:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (pcb->bytes_acked >= pcb->cwnd) {
 3479              	 .loc 1 1268 0 is_stmt 1
 3480 02d4 7B68     	 ldr r3,[r7,#4]
 3481 02d6 B3F86A20 	 ldrh r2,[r3,#106]
 3482 02da 7B68     	 ldr r3,[r7,#4]
 3483 02dc B3F84830 	 ldrh r3,[r3,#72]
 3484 02e0 9A42     	 cmp r2,r3
 3485 02e2 26D3     	 bcc .L199
1269:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             pcb->bytes_acked = (tcpwnd_size_t)(pcb->bytes_acked - pcb->cwnd);
 3486              	 .loc 1 1269 0
 3487 02e4 7B68     	 ldr r3,[r7,#4]
 3488 02e6 B3F86A20 	 ldrh r2,[r3,#106]
 3489 02ea 7B68     	 ldr r3,[r7,#4]
 3490 02ec B3F84830 	 ldrh r3,[r3,#72]
 3491 02f0 D31A     	 subs r3,r2,r3
 3492 02f2 9AB2     	 uxth r2,r3
 3493 02f4 7B68     	 ldr r3,[r7,#4]
 3494 02f6 A3F86A20 	 strh r2,[r3,#106]
1270:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             TCP_WND_INC(pcb->cwnd, pcb->mss);
 3495              	 .loc 1 1270 0
 3496 02fa 7B68     	 ldr r3,[r7,#4]
 3497 02fc B3F84820 	 ldrh r2,[r3,#72]
 3498 0300 7B68     	 ldr r3,[r7,#4]
 3499 0302 5B8E     	 ldrh r3,[r3,#50]
 3500 0304 1344     	 add r3,r3,r2
 3501 0306 9AB2     	 uxth r2,r3
 3502 0308 7B68     	 ldr r3,[r7,#4]
 3503 030a B3F84830 	 ldrh r3,[r3,#72]
 3504 030e 9A42     	 cmp r2,r3
 3505 0310 0AD3     	 bcc .L207
 3506              	 .loc 1 1270 0 is_stmt 0 discriminator 1
 3507 0312 7B68     	 ldr r3,[r7,#4]
 3508 0314 B3F84820 	 ldrh r2,[r3,#72]
 3509 0318 7B68     	 ldr r3,[r7,#4]
 3510 031a 5B8E     	 ldrh r3,[r3,#50]
 3511 031c 1344     	 add r3,r3,r2
 3512 031e 9AB2     	 uxth r2,r3
 3513 0320 7B68     	 ldr r3,[r7,#4]
 3514 0322 A3F84820 	 strh r2,[r3,#72]
 3515 0326 04E0     	 b .L199
 3516              	.L207:
 3517              	 .loc 1 1270 0 discriminator 2
 3518 0328 7B68     	 ldr r3,[r7,#4]
 3519 032a 4FF6FF72 	 movw r2,#65535
 3520 032e A3F84820 	 strh r2,[r3,#72]
 3521              	.L199:
1271:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
1272:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           LWIP_DEBUGF(TCP_CWND_DEBUG, ("tcp_receive: congestion avoidance cwnd %"TCPWNDSIZE_F"\n", 
1273:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
1274:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
1275:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_receive: ACK for %"U32_F", unacked->seqno %"U32_F":%"U32_F
1276:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                     ackno,
1277:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                     pcb->unacked != NULL ?
1278:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                     lwip_ntohl(pcb->unacked->tcphdr->seqno) : 0,
1279:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                     pcb->unacked != NULL ?
1280:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                     lwip_ntohl(pcb->unacked->tcphdr->seqno) + TCP_TCPLEN(pcb->unack
1281:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1282:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* Remove segment from the unacknowledged list if the incoming
1283:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          ACK acknowledges them. */
1284:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       pcb->unacked = tcp_free_acked_segments(pcb, pcb->unacked, "unacked", pcb->unsent);
 3522              	 .loc 1 1284 0 is_stmt 1
 3523 0332 7B68     	 ldr r3,[r7,#4]
 3524 0334 1A6F     	 ldr r2,[r3,#112]
 3525 0336 7B68     	 ldr r3,[r7,#4]
 3526 0338 DB6E     	 ldr r3,[r3,#108]
 3527 033a 7868     	 ldr r0,[r7,#4]
 3528 033c 1146     	 mov r1,r2
 3529 033e 964A     	 ldr r2,.L286
 3530 0340 FFF7FEFF 	 bl tcp_free_acked_segments
 3531 0344 0246     	 mov r2,r0
 3532 0346 7B68     	 ldr r3,[r7,#4]
 3533 0348 1A67     	 str r2,[r3,#112]
1285:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* We go through the ->unsent list to see if any of the segments
1286:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          on the list are acknowledged by the ACK. This may seem
1287:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          strange since an "unsent" segment shouldn't be acked. The
1288:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          rationale is that lwIP puts all outstanding segments on the
1289:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          ->unsent list after a retransmission, so these segments may
1290:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          in fact have been sent once. */
1291:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       pcb->unsent = tcp_free_acked_segments(pcb, pcb->unsent, "unsent", pcb->unacked);
 3534              	 .loc 1 1291 0
 3535 034a 7B68     	 ldr r3,[r7,#4]
 3536 034c DA6E     	 ldr r2,[r3,#108]
 3537 034e 7B68     	 ldr r3,[r7,#4]
 3538 0350 1B6F     	 ldr r3,[r3,#112]
 3539 0352 7868     	 ldr r0,[r7,#4]
 3540 0354 1146     	 mov r1,r2
 3541 0356 914A     	 ldr r2,.L286+4
 3542 0358 FFF7FEFF 	 bl tcp_free_acked_segments
 3543 035c 0246     	 mov r2,r0
 3544 035e 7B68     	 ldr r3,[r7,#4]
 3545 0360 DA66     	 str r2,[r3,#108]
1292:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1293:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* If there's nothing left to acknowledge, stop the retransmit
1294:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          timer, otherwise reset it to start again */
1295:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (pcb->unacked == NULL) {
 3546              	 .loc 1 1295 0
 3547 0362 7B68     	 ldr r3,[r7,#4]
 3548 0364 1B6F     	 ldr r3,[r3,#112]
 3549 0366 002B     	 cmp r3,#0
 3550 0368 04D1     	 bne .L208
1296:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->rtime = -1;
 3551              	 .loc 1 1296 0
 3552 036a 7B68     	 ldr r3,[r7,#4]
 3553 036c 4FF6FF72 	 movw r2,#65535
 3554 0370 1A86     	 strh r2,[r3,#48]
 3555 0372 02E0     	 b .L209
 3556              	.L208:
1297:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       } else {
1298:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->rtime = 0;
 3557              	 .loc 1 1298 0
 3558 0374 7B68     	 ldr r3,[r7,#4]
 3559 0376 0022     	 movs r2,#0
 3560 0378 1A86     	 strh r2,[r3,#48]
 3561              	.L209:
1299:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
1300:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1301:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       pcb->polltmr = 0;
 3562              	 .loc 1 1301 0
 3563 037a 7B68     	 ldr r3,[r7,#4]
 3564 037c 0022     	 movs r2,#0
 3565 037e 1A77     	 strb r2,[r3,#28]
1302:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1303:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_OVERSIZE
1304:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (pcb->unsent == NULL) {
 3566              	 .loc 1 1304 0
 3567 0380 7B68     	 ldr r3,[r7,#4]
 3568 0382 DB6E     	 ldr r3,[r3,#108]
 3569 0384 002B     	 cmp r3,#0
 3570 0386 03D1     	 bne .L210
1305:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->unsent_oversize = 0;
 3571              	 .loc 1 1305 0
 3572 0388 7B68     	 ldr r3,[r7,#4]
 3573 038a 0022     	 movs r2,#0
 3574 038c A3F86820 	 strh r2,[r3,#104]
 3575              	.L210:
1306:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
1307:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_OVERSIZE */
1308:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1309:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_IPV6 && LWIP_ND6_TCP_REACHABILITY_HINTS
1310:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (ip_current_is_v6()) {
1311:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* Inform neighbor reachability of forward progress. */
1312:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         nd6_reachability_hint(ip6_current_src_addr());
1313:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
1314:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* LWIP_IPV6 && LWIP_ND6_TCP_REACHABILITY_HINTS*/
1315:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1316:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       pcb->snd_buf = (tcpwnd_size_t)(pcb->snd_buf + recv_acked);
 3576              	 .loc 1 1316 0
 3577 0390 7B68     	 ldr r3,[r7,#4]
 3578 0392 B3F86420 	 ldrh r2,[r3,#100]
 3579 0396 824B     	 ldr r3,.L286+8
 3580 0398 1B88     	 ldrh r3,[r3]
 3581 039a 1344     	 add r3,r3,r2
 3582 039c 9AB2     	 uxth r2,r3
 3583 039e 7B68     	 ldr r3,[r7,#4]
 3584 03a0 A3F86420 	 strh r2,[r3,#100]
1317:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* check if this ACK ends our retransmission of in-flight data */
1318:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (pcb->flags & TF_RTO) {
 3585              	 .loc 1 1318 0
 3586 03a4 7B68     	 ldr r3,[r7,#4]
 3587 03a6 5B8B     	 ldrh r3,[r3,#26]
 3588 03a8 03F40063 	 and r3,r3,#2048
 3589 03ac 002B     	 cmp r3,#0
 3590 03ae 31D0     	 beq .L211
1319:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* RTO is done if
1320:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             1) both queues are empty or
1321:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             2) unacked is empty and unsent head contains data not part of RTO or
1322:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             3) unacked head contains data not part of RTO */
1323:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (pcb->unacked == NULL) {
 3591              	 .loc 1 1323 0
 3592 03b0 7B68     	 ldr r3,[r7,#4]
 3593 03b2 1B6F     	 ldr r3,[r3,#112]
 3594 03b4 002B     	 cmp r3,#0
 3595 03b6 18D1     	 bne .L212
1324:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if ((pcb->unsent == NULL) ||
 3596              	 .loc 1 1324 0
 3597 03b8 7B68     	 ldr r3,[r7,#4]
 3598 03ba DB6E     	 ldr r3,[r3,#108]
 3599 03bc 002B     	 cmp r3,#0
 3600 03be 0CD0     	 beq .L213
1325:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               (TCP_SEQ_LEQ(pcb->rto_end, lwip_ntohl(pcb->unsent->tcphdr->seqno)))) {
 3601              	 .loc 1 1325 0 discriminator 1
 3602 03c0 7B68     	 ldr r3,[r7,#4]
 3603 03c2 DC6C     	 ldr r4,[r3,#76]
 3604 03c4 7B68     	 ldr r3,[r7,#4]
 3605 03c6 DB6E     	 ldr r3,[r3,#108]
 3606 03c8 DB68     	 ldr r3,[r3,#12]
 3607 03ca 5B68     	 ldr r3,[r3,#4]
 3608 03cc 1846     	 mov r0,r3
 3609 03ce FFF7FEFF 	 bl lwip_htonl
 3610 03d2 0346     	 mov r3,r0
 3611 03d4 E31A     	 subs r3,r4,r3
1324:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if ((pcb->unsent == NULL) ||
 3612              	 .loc 1 1324 0 discriminator 1
 3613 03d6 002B     	 cmp r3,#0
 3614 03d8 1CDC     	 bgt .L211
 3615              	.L213:
1326:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             tcp_clear_flags(pcb, TF_RTO);
 3616              	 .loc 1 1326 0
 3617 03da 7B68     	 ldr r3,[r7,#4]
 3618 03dc 5B8B     	 ldrh r3,[r3,#26]
 3619 03de 23F40063 	 bic r3,r3,#2048
 3620 03e2 9AB2     	 uxth r2,r3
 3621 03e4 7B68     	 ldr r3,[r7,#4]
 3622 03e6 5A83     	 strh r2,[r3,#26]
 3623              	.LBE8:
1228:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* We come here when the ACK acknowledges new data. */
 3624              	 .loc 1 1228 0
 3625 03e8 18E0     	 b .L196
 3626              	.L212:
 3627              	.LBB10:
1327:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
1328:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         } else if (TCP_SEQ_LEQ(pcb->rto_end, lwip_ntohl(pcb->unacked->tcphdr->seqno))) {
 3628              	 .loc 1 1328 0
 3629 03ea 7B68     	 ldr r3,[r7,#4]
 3630 03ec DC6C     	 ldr r4,[r3,#76]
 3631 03ee 7B68     	 ldr r3,[r7,#4]
 3632 03f0 1B6F     	 ldr r3,[r3,#112]
 3633 03f2 DB68     	 ldr r3,[r3,#12]
 3634 03f4 5B68     	 ldr r3,[r3,#4]
 3635 03f6 1846     	 mov r0,r3
 3636 03f8 FFF7FEFF 	 bl lwip_htonl
 3637 03fc 0346     	 mov r3,r0
 3638 03fe E31A     	 subs r3,r4,r3
 3639 0400 002B     	 cmp r3,#0
 3640 0402 07DC     	 bgt .L211
1329:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tcp_clear_flags(pcb, TF_RTO);
 3641              	 .loc 1 1329 0
 3642 0404 7B68     	 ldr r3,[r7,#4]
 3643 0406 5B8B     	 ldrh r3,[r3,#26]
 3644 0408 23F40063 	 bic r3,r3,#2048
 3645 040c 9AB2     	 uxth r2,r3
 3646 040e 7B68     	 ldr r3,[r7,#4]
 3647 0410 5A83     	 strh r2,[r3,#26]
 3648              	.LBE10:
1228:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* We come here when the ACK acknowledges new data. */
 3649              	 .loc 1 1228 0
 3650 0412 03E0     	 b .L196
 3651              	.L211:
1228:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* We come here when the ACK acknowledges new data. */
 3652              	 .loc 1 1228 0 is_stmt 0 discriminator 1
 3653 0414 02E0     	 b .L196
 3654              	.L197:
1330:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
1331:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
1332:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* End of ACK for new data processing. */
1333:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     } else {
1334:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* Out of sequence ACK, didn't really ack anything */
1335:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       tcp_send_empty_ack(pcb);
 3655              	 .loc 1 1335 0 is_stmt 1
 3656 0416 7868     	 ldr r0,[r7,#4]
 3657 0418 FFF7FEFF 	 bl tcp_send_empty_ack
 3658              	.L196:
1336:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
1337:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1338:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     LWIP_DEBUGF(TCP_RTO_DEBUG, ("tcp_receive: pcb->rttest %"U32_F" rtseq %"U32_F" ackno %"U32_F"\n"
1339:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                 pcb->rttest, pcb->rtseq, ackno));
1340:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1341:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* RTT estimation calculations. This is done by checking if the
1342:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        incoming segment acknowledges the segment we use to take a
1343:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        round-trip time measurement. */
1344:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (pcb->rttest && TCP_SEQ_LT(pcb->rtseq, ackno)) {
 3659              	 .loc 1 1344 0
 3660 041c 7B68     	 ldr r3,[r7,#4]
 3661 041e 5B6B     	 ldr r3,[r3,#52]
 3662 0420 002B     	 cmp r3,#0
 3663 0422 58D0     	 beq .L185
 3664              	 .loc 1 1344 0 is_stmt 0 discriminator 1
 3665 0424 7B68     	 ldr r3,[r7,#4]
 3666 0426 9A6B     	 ldr r2,[r3,#56]
 3667 0428 5E4B     	 ldr r3,.L286+12
 3668 042a 1B68     	 ldr r3,[r3]
 3669 042c D31A     	 subs r3,r2,r3
 3670 042e 002B     	 cmp r3,#0
 3671 0430 51DA     	 bge .L185
1345:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* diff between this shouldn't exceed 32K since this are tcp timer ticks
1346:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          and a round-trip shouldn't be that long... */
1347:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       m = (s16_t)(tcp_ticks - pcb->rttest);
 3672              	 .loc 1 1347 0 is_stmt 1
 3673 0432 5D4B     	 ldr r3,.L286+16
 3674 0434 1B68     	 ldr r3,[r3]
 3675 0436 9AB2     	 uxth r2,r3
 3676 0438 7B68     	 ldr r3,[r7,#4]
 3677 043a 5B6B     	 ldr r3,[r3,#52]
 3678 043c 9BB2     	 uxth r3,r3
 3679 043e D31A     	 subs r3,r2,r3
 3680 0440 9BB2     	 uxth r3,r3
 3681 0442 A7F84E30 	 strh r3,[r7,#78]
1348:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1349:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_DEBUGF(TCP_RTO_DEBUG, ("tcp_receive: experienced rtt %"U16_F" ticks (%"U16_F" msec).\n",
1350:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                   m, (u16_t)(m * TCP_SLOW_INTERVAL)));
1351:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1352:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* This is taken directly from VJs original code in his paper */
1353:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       m = (s16_t)(m - (pcb->sa >> 3));
 3682              	 .loc 1 1353 0
 3683 0446 B7F84E20 	 ldrh r2,[r7,#78]
 3684 044a 7B68     	 ldr r3,[r7,#4]
 3685 044c 9B8F     	 ldrh r3,[r3,#60]
 3686 044e 1BB2     	 sxth r3,r3
 3687 0450 DB10     	 asrs r3,r3,#3
 3688 0452 9BB2     	 uxth r3,r3
 3689 0454 9BB2     	 uxth r3,r3
 3690 0456 D31A     	 subs r3,r2,r3
 3691 0458 9BB2     	 uxth r3,r3
 3692 045a A7F84E30 	 strh r3,[r7,#78]
1354:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       pcb->sa = (s16_t)(pcb->sa + m);
 3693              	 .loc 1 1354 0
 3694 045e 7B68     	 ldr r3,[r7,#4]
 3695 0460 9B8F     	 ldrh r3,[r3,#60]
 3696 0462 9AB2     	 uxth r2,r3
 3697 0464 B7F84E30 	 ldrh r3,[r7,#78]
 3698 0468 1344     	 add r3,r3,r2
 3699 046a 9BB2     	 uxth r3,r3
 3700 046c 9AB2     	 uxth r2,r3
 3701 046e 7B68     	 ldr r3,[r7,#4]
 3702 0470 9A87     	 strh r2,[r3,#60]
1355:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (m < 0) {
 3703              	 .loc 1 1355 0
 3704 0472 B7F94E30 	 ldrsh r3,[r7,#78]
 3705 0476 002B     	 cmp r3,#0
 3706 0478 05DA     	 bge .L215
1356:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         m = (s16_t) - m;
 3707              	 .loc 1 1356 0
 3708 047a B7F84E30 	 ldrh r3,[r7,#78]
 3709 047e 5B42     	 negs r3,r3
 3710 0480 9BB2     	 uxth r3,r3
 3711 0482 A7F84E30 	 strh r3,[r7,#78]
 3712              	.L215:
1357:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
1358:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       m = (s16_t)(m - (pcb->sv >> 2));
 3713              	 .loc 1 1358 0
 3714 0486 B7F84E20 	 ldrh r2,[r7,#78]
 3715 048a 7B68     	 ldr r3,[r7,#4]
 3716 048c DB8F     	 ldrh r3,[r3,#62]
 3717 048e 1BB2     	 sxth r3,r3
 3718 0490 9B10     	 asrs r3,r3,#2
 3719 0492 9BB2     	 uxth r3,r3
 3720 0494 9BB2     	 uxth r3,r3
 3721 0496 D31A     	 subs r3,r2,r3
 3722 0498 9BB2     	 uxth r3,r3
 3723 049a A7F84E30 	 strh r3,[r7,#78]
1359:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       pcb->sv = (s16_t)(pcb->sv + m);
 3724              	 .loc 1 1359 0
 3725 049e 7B68     	 ldr r3,[r7,#4]
 3726 04a0 DB8F     	 ldrh r3,[r3,#62]
 3727 04a2 9AB2     	 uxth r2,r3
 3728 04a4 B7F84E30 	 ldrh r3,[r7,#78]
 3729 04a8 1344     	 add r3,r3,r2
 3730 04aa 9BB2     	 uxth r3,r3
 3731 04ac 9AB2     	 uxth r2,r3
 3732 04ae 7B68     	 ldr r3,[r7,#4]
 3733 04b0 DA87     	 strh r2,[r3,#62]
1360:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       pcb->rto = (s16_t)((pcb->sa >> 3) + pcb->sv);
 3734              	 .loc 1 1360 0
 3735 04b2 7B68     	 ldr r3,[r7,#4]
 3736 04b4 9B8F     	 ldrh r3,[r3,#60]
 3737 04b6 1BB2     	 sxth r3,r3
 3738 04b8 DB10     	 asrs r3,r3,#3
 3739 04ba 9BB2     	 uxth r3,r3
 3740 04bc 9AB2     	 uxth r2,r3
 3741 04be 7B68     	 ldr r3,[r7,#4]
 3742 04c0 DB8F     	 ldrh r3,[r3,#62]
 3743 04c2 9BB2     	 uxth r3,r3
 3744 04c4 1344     	 add r3,r3,r2
 3745 04c6 9BB2     	 uxth r3,r3
 3746 04c8 9AB2     	 uxth r2,r3
 3747 04ca 7B68     	 ldr r3,[r7,#4]
 3748 04cc A3F84020 	 strh r2,[r3,#64]
1361:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1362:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_DEBUGF(TCP_RTO_DEBUG, ("tcp_receive: RTO %"U16_F" (%"U16_F" milliseconds)\n",
1363:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                   pcb->rto, (u16_t)(pcb->rto * TCP_SLOW_INTERVAL)));
1364:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1365:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       pcb->rttest = 0;
 3749              	 .loc 1 1365 0
 3750 04d0 7B68     	 ldr r3,[r7,#4]
 3751 04d2 0022     	 movs r2,#0
 3752 04d4 5A63     	 str r2,[r3,#52]
 3753              	.L185:
1366:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
1367:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
1368:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1369:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   /* If the incoming segment contains data, we must process it
1370:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      further unless the pcb already received a FIN.
1371:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      (RFC 793, chapter 3.9, "SEGMENT ARRIVES" in states CLOSE-WAIT, CLOSING,
1372:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****      LAST-ACK and TIME-WAIT: "Ignore the segment text.") */
1373:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if ((tcplen > 0) && (pcb->state < CLOSE_WAIT)) {
 3754              	 .loc 1 1373 0
 3755 04d6 354B     	 ldr r3,.L286+20
 3756 04d8 1B88     	 ldrh r3,[r3]
 3757 04da 002B     	 cmp r3,#0
 3758 04dc 00F02A84 	 beq .L216
 3759              	 .loc 1 1373 0 is_stmt 0 discriminator 1
 3760 04e0 7B68     	 ldr r3,[r7,#4]
 3761 04e2 1B7D     	 ldrb r3,[r3,#20]
 3762 04e4 062B     	 cmp r3,#6
 3763 04e6 00F22584 	 bhi .L216
1374:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* This code basically does three things:
1375:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1376:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     +) If the incoming segment contains data that is the next
1377:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     in-sequence data, this data is passed to the application. This
1378:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     might involve trimming the first edge of the data. The rcv_nxt
1379:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     variable and the advertised window are adjusted.
1380:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1381:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     +) If the incoming segment has data that is above the next
1382:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     sequence number expected (->rcv_nxt), the segment is placed on
1383:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     the ->ooseq queue. This is done by finding the appropriate
1384:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     place in the ->ooseq queue (which is ordered by sequence
1385:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     number) and trim the segment in both ends if needed. An
1386:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     immediate ACK is sent to indicate that we received an
1387:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     out-of-sequence segment.
1388:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1389:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     +) Finally, we check if the first segment on the ->ooseq queue
1390:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     now is in sequence (i.e., if rcv_nxt >= ooseq->seqno). If
1391:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     rcv_nxt > ooseq->seqno, we must trim the first edge of the
1392:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     segment on ->ooseq before we adjust rcv_nxt. The data in the
1393:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     segments that are now on sequence are chained onto the
1394:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     incoming segment so that we only need to call the application
1395:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     once.
1396:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     */
1397:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1398:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* First, we check if we must trim the first edge. We have to do
1399:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        this if the sequence number of the incoming segment is less
1400:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        than rcv_nxt, and the sequence number plus the length of the
1401:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        segment is larger than rcv_nxt. */
1402:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /*    if (TCP_SEQ_LT(seqno, pcb->rcv_nxt)) {
1403:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (TCP_SEQ_LT(pcb->rcv_nxt, seqno + tcplen)) {*/
1404:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (TCP_SEQ_BETWEEN(pcb->rcv_nxt, seqno + 1, seqno + tcplen - 1)) {
 3764              	 .loc 1 1404 0 is_stmt 1
 3765 04ea 7B68     	 ldr r3,[r7,#4]
 3766 04ec 5A6A     	 ldr r2,[r3,#36]
 3767 04ee 304B     	 ldr r3,.L286+24
 3768 04f0 1B68     	 ldr r3,[r3]
 3769 04f2 D31A     	 subs r3,r2,r3
 3770 04f4 013B     	 subs r3,r3,#1
 3771 04f6 002B     	 cmp r3,#0
 3772 04f8 5EDB     	 blt .L217
 3773              	 .loc 1 1404 0 is_stmt 0 discriminator 1
 3774 04fa 7B68     	 ldr r3,[r7,#4]
 3775 04fc 5A6A     	 ldr r2,[r3,#36]
 3776 04fe 2B4B     	 ldr r3,.L286+20
 3777 0500 1B88     	 ldrh r3,[r3]
 3778 0502 1946     	 mov r1,r3
 3779 0504 2A4B     	 ldr r3,.L286+24
 3780 0506 1B68     	 ldr r3,[r3]
 3781 0508 0B44     	 add r3,r3,r1
 3782 050a D31A     	 subs r3,r2,r3
 3783 050c 0133     	 adds r3,r3,#1
 3784 050e 002B     	 cmp r3,#0
 3785 0510 52DC     	 bgt .L217
 3786              	.LBB11:
1405:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* Trimming the first edge is done by pushing the payload
1406:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          pointer in the pbuf downwards. This is somewhat tricky since
1407:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          we do not want to discard the full contents of the pbuf up to
1408:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          the new starting point of the data since we have to keep the
1409:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          TCP header which is present in the first pbuf in the chain.
1410:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1411:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          What is done is really quite a nasty hack: the first pbuf in
1412:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          the pbuf chain is pointed to by inseg.p. Since we need to be
1413:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          able to deallocate the whole pbuf, we cannot change this
1414:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          inseg.p pointer to point to any of the later pbufs in the
1415:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          chain. Instead, we point the ->payload pointer in the first
1416:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          pbuf to data in one of the later pbufs. We also set the
1417:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          inseg.data pointer to point to the right place. This way, the
1418:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          ->p pointer will still point to the first pbuf, but the
1419:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          ->p->payload pointer will point to data in another pbuf.
1420:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1421:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          After we are done with adjusting the pbuf pointers we must
1422:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          adjust the ->data pointer in the seg and the segment
1423:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****          length.*/
1424:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1425:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       struct pbuf *p = inseg.p;
 3787              	 .loc 1 1425 0 is_stmt 1
 3788 0512 284B     	 ldr r3,.L286+28
 3789 0514 5B68     	 ldr r3,[r3,#4]
 3790 0516 7B64     	 str r3,[r7,#68]
1426:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       u32_t off32 = pcb->rcv_nxt - seqno;
 3791              	 .loc 1 1426 0
 3792 0518 7B68     	 ldr r3,[r7,#4]
 3793 051a 5A6A     	 ldr r2,[r3,#36]
 3794 051c 244B     	 ldr r3,.L286+24
 3795 051e 1B68     	 ldr r3,[r3]
 3796 0520 D31A     	 subs r3,r2,r3
 3797 0522 7B62     	 str r3,[r7,#36]
1427:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       u16_t new_tot_len, off;
1428:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_ASSERT("inseg.p != NULL", inseg.p);
1429:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_ASSERT("insane offset!", (off32 < 0xffff));
1430:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       off = (u16_t)off32;
 3798              	 .loc 1 1430 0
 3799 0524 7B6A     	 ldr r3,[r7,#36]
 3800 0526 A7F84230 	 strh r3,[r7,#66]
1431:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       LWIP_ASSERT("pbuf too short!", (((s32_t)inseg.p->tot_len) >= off));
1432:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       inseg.len -= off;
 3801              	 .loc 1 1432 0
 3802 052a 224B     	 ldr r3,.L286+28
 3803 052c 1A89     	 ldrh r2,[r3,#8]
 3804 052e B7F84230 	 ldrh r3,[r7,#66]
 3805 0532 D31A     	 subs r3,r2,r3
 3806 0534 9AB2     	 uxth r2,r3
 3807 0536 1F4B     	 ldr r3,.L286+28
 3808 0538 1A81     	 strh r2,[r3,#8]
1433:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       new_tot_len = (u16_t)(inseg.p->tot_len - off);
 3809              	 .loc 1 1433 0
 3810 053a 1E4B     	 ldr r3,.L286+28
 3811 053c 5B68     	 ldr r3,[r3,#4]
 3812 053e 1A89     	 ldrh r2,[r3,#8]
 3813 0540 B7F84230 	 ldrh r3,[r7,#66]
 3814 0544 D31A     	 subs r3,r2,r3
 3815 0546 7B84     	 strh r3,[r7,#34]
1434:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       while (p->len < off) {
 3816              	 .loc 1 1434 0
 3817 0548 0FE0     	 b .L218
 3818              	.L219:
1435:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         off -= p->len;
 3819              	 .loc 1 1435 0
 3820 054a 7B6C     	 ldr r3,[r7,#68]
 3821 054c 5B89     	 ldrh r3,[r3,#10]
 3822 054e B7F84220 	 ldrh r2,[r7,#66]
 3823 0552 D31A     	 subs r3,r2,r3
 3824 0554 A7F84230 	 strh r3,[r7,#66]
1436:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* all pbufs up to and including this one have len==0, so tot_len is equal */
1437:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         p->tot_len = new_tot_len;
 3825              	 .loc 1 1437 0
 3826 0558 7B6C     	 ldr r3,[r7,#68]
 3827 055a 7A8C     	 ldrh r2,[r7,#34]
 3828 055c 1A81     	 strh r2,[r3,#8]
1438:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         p->len = 0;
 3829              	 .loc 1 1438 0
 3830 055e 7B6C     	 ldr r3,[r7,#68]
 3831 0560 0022     	 movs r2,#0
 3832 0562 5A81     	 strh r2,[r3,#10]
1439:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         p = p->next;
 3833              	 .loc 1 1439 0
 3834 0564 7B6C     	 ldr r3,[r7,#68]
 3835 0566 1B68     	 ldr r3,[r3]
 3836 0568 7B64     	 str r3,[r7,#68]
 3837              	.L218:
1434:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         off -= p->len;
 3838              	 .loc 1 1434 0
 3839 056a 7B6C     	 ldr r3,[r7,#68]
 3840 056c 5B89     	 ldrh r3,[r3,#10]
 3841 056e B7F84220 	 ldrh r2,[r7,#66]
 3842 0572 9A42     	 cmp r2,r3
 3843 0574 E9D8     	 bhi .L219
1440:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
1441:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* cannot fail... */
1442:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       pbuf_remove_header(p, off);
 3844              	 .loc 1 1442 0
 3845 0576 B7F84230 	 ldrh r3,[r7,#66]
 3846 057a 786C     	 ldr r0,[r7,#68]
 3847 057c 1946     	 mov r1,r3
 3848 057e FFF7FEFF 	 bl pbuf_remove_header
1443:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       inseg.tcphdr->seqno = seqno = pcb->rcv_nxt;
 3849              	 .loc 1 1443 0
 3850 0582 0C4B     	 ldr r3,.L286+28
 3851 0584 DB68     	 ldr r3,[r3,#12]
 3852 0586 7A68     	 ldr r2,[r7,#4]
 3853 0588 526A     	 ldr r2,[r2,#36]
 3854 058a 0949     	 ldr r1,.L286+24
 3855 058c 0A60     	 str r2,[r1]
 3856 058e 084A     	 ldr r2,.L286+24
 3857 0590 1268     	 ldr r2,[r2]
 3858 0592 5A60     	 str r2,[r3,#4]
 3859              	.LBE11:
1404:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* Trimming the first edge is done by pushing the payload
 3860              	 .loc 1 1404 0
 3861 0594 1EE0     	 b .L220
 3862              	.L287:
 3863 0596 00BF     	 .align 2
 3864              	.L286:
 3865 0598 00000000 	 .word .LC0
 3866 059c 08000000 	 .word .LC1
 3867 05a0 00000000 	 .word recv_acked
 3868 05a4 00000000 	 .word ackno
 3869 05a8 00000000 	 .word tcp_ticks
 3870 05ac 00000000 	 .word tcplen
 3871 05b0 00000000 	 .word seqno
 3872 05b4 00000000 	 .word inseg
 3873              	.L217:
1444:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     } else {
1445:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (TCP_SEQ_LT(seqno, pcb->rcv_nxt)) {
 3874              	 .loc 1 1445 0
 3875 05b8 834B     	 ldr r3,.L288
 3876 05ba 1A68     	 ldr r2,[r3]
 3877 05bc 7B68     	 ldr r3,[r7,#4]
 3878 05be 5B6A     	 ldr r3,[r3,#36]
 3879 05c0 D31A     	 subs r3,r2,r3
 3880 05c2 002B     	 cmp r3,#0
 3881 05c4 06DA     	 bge .L220
1446:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* the whole segment is < rcv_nxt */
1447:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* must be a duplicate of a packet that has already been correctly handled */
1448:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1449:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_receive: duplicate seqno %"U32_F"\n", seqno));
1450:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_ack_now(pcb);
 3882              	 .loc 1 1450 0
 3883 05c6 7B68     	 ldr r3,[r7,#4]
 3884 05c8 5B8B     	 ldrh r3,[r3,#26]
 3885 05ca 43F00203 	 orr r3,r3,#2
 3886 05ce 9AB2     	 uxth r2,r3
 3887 05d0 7B68     	 ldr r3,[r7,#4]
 3888 05d2 5A83     	 strh r2,[r3,#26]
 3889              	.L220:
1451:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
1452:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
1453:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1454:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* The sequence number must be within the window (above rcv_nxt
1455:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        and below rcv_nxt + rcv_wnd) in order to be further
1456:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        processed. */
1457:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (TCP_SEQ_BETWEEN(seqno, pcb->rcv_nxt,
 3890              	 .loc 1 1457 0
 3891 05d4 7C4B     	 ldr r3,.L288
 3892 05d6 1A68     	 ldr r2,[r3]
 3893 05d8 7B68     	 ldr r3,[r7,#4]
 3894 05da 5B6A     	 ldr r3,[r3,#36]
 3895 05dc D31A     	 subs r3,r2,r3
 3896 05de 002B     	 cmp r3,#0
 3897 05e0 C0F2A383 	 blt .L221
 3898              	 .loc 1 1457 0 is_stmt 0 discriminator 1
 3899 05e4 784B     	 ldr r3,.L288
 3900 05e6 1A68     	 ldr r2,[r3]
 3901 05e8 7B68     	 ldr r3,[r7,#4]
 3902 05ea 5B6A     	 ldr r3,[r3,#36]
 3903 05ec 7968     	 ldr r1,[r7,#4]
 3904 05ee 098D     	 ldrh r1,[r1,#40]
 3905 05f0 0B44     	 add r3,r3,r1
 3906 05f2 D31A     	 subs r3,r2,r3
 3907 05f4 0133     	 adds r3,r3,#1
 3908 05f6 002B     	 cmp r3,#0
 3909 05f8 00F39783 	 bgt .L221
1458:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                         pcb->rcv_nxt + pcb->rcv_wnd - 1)) {
1459:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       if (pcb->rcv_nxt == seqno) {
 3910              	 .loc 1 1459 0 is_stmt 1
 3911 05fc 7B68     	 ldr r3,[r7,#4]
 3912 05fe 5A6A     	 ldr r2,[r3,#36]
 3913 0600 714B     	 ldr r3,.L288
 3914 0602 1B68     	 ldr r3,[r3]
 3915 0604 9A42     	 cmp r2,r3
 3916 0606 40F03582 	 bne .L222
1460:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* The incoming segment is the next in sequence. We check if
1461:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            we have to trim the end of the segment and update rcv_nxt
1462:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            and pass the data to the application. */
1463:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcplen = TCP_TCPLEN(&inseg);
 3917              	 .loc 1 1463 0
 3918 060a 704B     	 ldr r3,.L288+4
 3919 060c 1C89     	 ldrh r4,[r3,#8]
 3920 060e 6F4B     	 ldr r3,.L288+4
 3921 0610 DB68     	 ldr r3,[r3,#12]
 3922 0612 9B89     	 ldrh r3,[r3,#12]
 3923 0614 9BB2     	 uxth r3,r3
 3924 0616 1846     	 mov r0,r3
 3925 0618 FFF7FEFF 	 bl lwip_htons
 3926 061c 0346     	 mov r3,r0
 3927 061e DBB2     	 uxtb r3,r3
 3928 0620 03F00303 	 and r3,r3,#3
 3929 0624 002B     	 cmp r3,#0
 3930 0626 01D0     	 beq .L223
 3931              	 .loc 1 1463 0 is_stmt 0 discriminator 1
 3932 0628 0123     	 movs r3,#1
 3933 062a 00E0     	 b .L224
 3934              	.L223:
 3935              	 .loc 1 1463 0 discriminator 2
 3936 062c 0023     	 movs r3,#0
 3937              	.L224:
 3938              	 .loc 1 1463 0 discriminator 4
 3939 062e 2344     	 add r3,r3,r4
 3940 0630 9AB2     	 uxth r2,r3
 3941 0632 674B     	 ldr r3,.L288+8
 3942 0634 1A80     	 strh r2,[r3]
1464:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1465:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (tcplen > pcb->rcv_wnd) {
 3943              	 .loc 1 1465 0 is_stmt 1 discriminator 4
 3944 0636 7B68     	 ldr r3,[r7,#4]
 3945 0638 1A8D     	 ldrh r2,[r3,#40]
 3946 063a 654B     	 ldr r3,.L288+8
 3947 063c 1B88     	 ldrh r3,[r3]
 3948 063e 9A42     	 cmp r2,r3
 3949 0640 62D2     	 bcs .L225
1466:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           LWIP_DEBUGF(TCP_INPUT_DEBUG,
1467:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                       ("tcp_receive: other end overran receive window"
1468:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                        "seqno %"U32_F" len %"U16_F" right edge %"U32_F"\n",
1469:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                        seqno, tcplen, pcb->rcv_nxt + pcb->rcv_wnd));
1470:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (TCPH_FLAGS(inseg.tcphdr) & TCP_FIN) {
 3950              	 .loc 1 1470 0
 3951 0642 624B     	 ldr r3,.L288+4
 3952 0644 DB68     	 ldr r3,[r3,#12]
 3953 0646 9B89     	 ldrh r3,[r3,#12]
 3954 0648 9BB2     	 uxth r3,r3
 3955 064a 1846     	 mov r0,r3
 3956 064c FFF7FEFF 	 bl lwip_htons
 3957 0650 0346     	 mov r3,r0
 3958 0652 DBB2     	 uxtb r3,r3
 3959 0654 03F00103 	 and r3,r3,#1
 3960 0658 002B     	 cmp r3,#0
 3961 065a 20D0     	 beq .L226
1471:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* Must remove the FIN from the header as we're trimming
1472:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              * that byte of sequence-space from the packet */
1473:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             TCPH_FLAGS_SET(inseg.tcphdr, TCPH_FLAGS(inseg.tcphdr) & ~(unsigned int)TCP_FIN);
 3962              	 .loc 1 1473 0
 3963 065c 5B4B     	 ldr r3,.L288+4
 3964 065e DC68     	 ldr r4,[r3,#12]
 3965 0660 5A4B     	 ldr r3,.L288+4
 3966 0662 DB68     	 ldr r3,[r3,#12]
 3967 0664 9B89     	 ldrh r3,[r3,#12]
 3968 0666 9BB2     	 uxth r3,r3
 3969 0668 9BB2     	 uxth r3,r3
 3970 066a 23F47C53 	 bic r3,r3,#16128
 3971 066e 9DB2     	 uxth r5,r3
 3972 0670 564B     	 ldr r3,.L288+4
 3973 0672 DB68     	 ldr r3,[r3,#12]
 3974 0674 9B89     	 ldrh r3,[r3,#12]
 3975 0676 9BB2     	 uxth r3,r3
 3976 0678 1846     	 mov r0,r3
 3977 067a FFF7FEFF 	 bl lwip_htons
 3978 067e 0346     	 mov r3,r0
 3979 0680 DBB2     	 uxtb r3,r3
 3980 0682 9BB2     	 uxth r3,r3
 3981 0684 03F03E03 	 and r3,r3,#62
 3982 0688 9BB2     	 uxth r3,r3
 3983 068a 1846     	 mov r0,r3
 3984 068c FFF7FEFF 	 bl lwip_htons
 3985 0690 0346     	 mov r3,r0
 3986 0692 9BB2     	 uxth r3,r3
 3987 0694 2A46     	 mov r2,r5
 3988 0696 1343     	 orrs r3,r3,r2
 3989 0698 9BB2     	 uxth r3,r3
 3990 069a 9BB2     	 uxth r3,r3
 3991 069c A381     	 strh r3,[r4,#12]
 3992              	.L226:
1474:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
1475:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* Adjust length of segment to fit in the window. */
1476:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           TCPWND_CHECK16(pcb->rcv_wnd);
1477:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           inseg.len = (u16_t)pcb->rcv_wnd;
 3993              	 .loc 1 1477 0
 3994 069e 7B68     	 ldr r3,[r7,#4]
 3995 06a0 1A8D     	 ldrh r2,[r3,#40]
 3996 06a2 4A4B     	 ldr r3,.L288+4
 3997 06a4 1A81     	 strh r2,[r3,#8]
1478:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (TCPH_FLAGS(inseg.tcphdr) & TCP_SYN) {
 3998              	 .loc 1 1478 0
 3999 06a6 494B     	 ldr r3,.L288+4
 4000 06a8 DB68     	 ldr r3,[r3,#12]
 4001 06aa 9B89     	 ldrh r3,[r3,#12]
 4002 06ac 9BB2     	 uxth r3,r3
 4003 06ae 1846     	 mov r0,r3
 4004 06b0 FFF7FEFF 	 bl lwip_htons
 4005 06b4 0346     	 mov r3,r0
 4006 06b6 DBB2     	 uxtb r3,r3
 4007 06b8 03F00203 	 and r3,r3,#2
 4008 06bc 002B     	 cmp r3,#0
 4009 06be 05D0     	 beq .L227
1479:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             inseg.len -= 1;
 4010              	 .loc 1 1479 0
 4011 06c0 424B     	 ldr r3,.L288+4
 4012 06c2 1B89     	 ldrh r3,[r3,#8]
 4013 06c4 013B     	 subs r3,r3,#1
 4014 06c6 9AB2     	 uxth r2,r3
 4015 06c8 404B     	 ldr r3,.L288+4
 4016 06ca 1A81     	 strh r2,[r3,#8]
 4017              	.L227:
1480:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
1481:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pbuf_realloc(inseg.p, inseg.len);
 4018              	 .loc 1 1481 0
 4019 06cc 3F4B     	 ldr r3,.L288+4
 4020 06ce 5A68     	 ldr r2,[r3,#4]
 4021 06d0 3E4B     	 ldr r3,.L288+4
 4022 06d2 1B89     	 ldrh r3,[r3,#8]
 4023 06d4 1046     	 mov r0,r2
 4024 06d6 1946     	 mov r1,r3
 4025 06d8 FFF7FEFF 	 bl pbuf_realloc
1482:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tcplen = TCP_TCPLEN(&inseg);
 4026              	 .loc 1 1482 0
 4027 06dc 3B4B     	 ldr r3,.L288+4
 4028 06de 1C89     	 ldrh r4,[r3,#8]
 4029 06e0 3A4B     	 ldr r3,.L288+4
 4030 06e2 DB68     	 ldr r3,[r3,#12]
 4031 06e4 9B89     	 ldrh r3,[r3,#12]
 4032 06e6 9BB2     	 uxth r3,r3
 4033 06e8 1846     	 mov r0,r3
 4034 06ea FFF7FEFF 	 bl lwip_htons
 4035 06ee 0346     	 mov r3,r0
 4036 06f0 DBB2     	 uxtb r3,r3
 4037 06f2 03F00303 	 and r3,r3,#3
 4038 06f6 002B     	 cmp r3,#0
 4039 06f8 01D0     	 beq .L228
 4040              	 .loc 1 1482 0 is_stmt 0 discriminator 1
 4041 06fa 0123     	 movs r3,#1
 4042 06fc 00E0     	 b .L229
 4043              	.L228:
 4044              	 .loc 1 1482 0 discriminator 2
 4045 06fe 0023     	 movs r3,#0
 4046              	.L229:
 4047              	 .loc 1 1482 0 discriminator 4
 4048 0700 2344     	 add r3,r3,r4
 4049 0702 9AB2     	 uxth r2,r3
 4050 0704 324B     	 ldr r3,.L288+8
 4051 0706 1A80     	 strh r2,[r3]
 4052              	.L225:
1483:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           LWIP_ASSERT("tcp_receive: segment not trimmed correctly to rcv_wnd\n",
1484:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                       (seqno + tcplen) == (pcb->rcv_nxt + pcb->rcv_wnd));
1485:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
1486:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_QUEUE_OOSEQ
1487:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* Received in-sequence data, adjust ooseq data if:
1488:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            - FIN has been received or
1489:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            - inseq overlaps with ooseq */
1490:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (pcb->ooseq != NULL) {
 4053              	 .loc 1 1490 0 is_stmt 1
 4054 0708 7B68     	 ldr r3,[r7,#4]
 4055 070a 5B6F     	 ldr r3,[r3,#116]
 4056 070c 002B     	 cmp r3,#0
 4057 070e 00F0CE80 	 beq .L230
1491:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (TCPH_FLAGS(inseg.tcphdr) & TCP_FIN) {
 4058              	 .loc 1 1491 0
 4059 0712 2E4B     	 ldr r3,.L288+4
 4060 0714 DB68     	 ldr r3,[r3,#12]
 4061 0716 9B89     	 ldrh r3,[r3,#12]
 4062 0718 9BB2     	 uxth r3,r3
 4063 071a 1846     	 mov r0,r3
 4064 071c FFF7FEFF 	 bl lwip_htons
 4065 0720 0346     	 mov r3,r0
 4066 0722 DBB2     	 uxtb r3,r3
 4067 0724 03F00103 	 and r3,r3,#1
 4068 0728 002B     	 cmp r3,#0
 4069 072a 10D0     	 beq .L231
1492:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             LWIP_DEBUGF(TCP_INPUT_DEBUG,
1493:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                         ("tcp_receive: received in-order FIN, binning ooseq queue\n"));
1494:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* Received in-order FIN means anything that was received
1495:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              * out of order must now have been received in-order, so
1496:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              * bin the ooseq queue */
1497:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             while (pcb->ooseq != NULL) {
 4070              	 .loc 1 1497 0
 4071 072c 0AE0     	 b .L232
 4072              	.L233:
 4073              	.LBB12:
1498:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               struct tcp_seg *old_ooseq = pcb->ooseq;
 4074              	 .loc 1 1498 0
 4075 072e 7B68     	 ldr r3,[r7,#4]
 4076 0730 5B6F     	 ldr r3,[r3,#116]
 4077 0732 FB61     	 str r3,[r7,#28]
1499:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               pcb->ooseq = pcb->ooseq->next;
 4078              	 .loc 1 1499 0
 4079 0734 7B68     	 ldr r3,[r7,#4]
 4080 0736 5B6F     	 ldr r3,[r3,#116]
 4081 0738 1A68     	 ldr r2,[r3]
 4082 073a 7B68     	 ldr r3,[r7,#4]
 4083 073c 5A67     	 str r2,[r3,#116]
1500:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               tcp_seg_free(old_ooseq);
 4084              	 .loc 1 1500 0
 4085 073e F869     	 ldr r0,[r7,#28]
 4086 0740 FFF7FEFF 	 bl tcp_seg_free
 4087              	.L232:
 4088              	.LBE12:
1497:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               struct tcp_seg *old_ooseq = pcb->ooseq;
 4089              	 .loc 1 1497 0
 4090 0744 7B68     	 ldr r3,[r7,#4]
 4091 0746 5B6F     	 ldr r3,[r3,#116]
 4092 0748 002B     	 cmp r3,#0
 4093 074a F0D1     	 bne .L233
 4094 074c AFE0     	 b .L230
 4095              	.L231:
 4096              	.LBB13:
1501:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
1502:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           } else {
1503:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             struct tcp_seg *next = pcb->ooseq;
 4097              	 .loc 1 1503 0
 4098 074e 7B68     	 ldr r3,[r7,#4]
 4099 0750 5B6F     	 ldr r3,[r3,#116]
 4100 0752 FB63     	 str r3,[r7,#60]
1504:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* Remove all segments on ooseq that are covered by inseg already.
1505:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              * FIN is copied from ooseq to inseg if present. */
1506:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             while (next &&
 4101              	 .loc 1 1506 0
 4102 0754 4BE0     	 b .L234
 4103              	.L239:
 4104              	.LBB14:
1507:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                    TCP_SEQ_GEQ(seqno + tcplen,
1508:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                next->tcphdr->seqno + next->len)) {
1509:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               struct tcp_seg *tmp;
1510:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               /* inseg cannot have FIN here (already processed above) */
1511:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               if ((TCPH_FLAGS(next->tcphdr) & TCP_FIN) != 0 &&
 4105              	 .loc 1 1511 0
 4106 0756 FB6B     	 ldr r3,[r7,#60]
 4107 0758 DB68     	 ldr r3,[r3,#12]
 4108 075a 9B89     	 ldrh r3,[r3,#12]
 4109 075c 9BB2     	 uxth r3,r3
 4110 075e 1846     	 mov r0,r3
 4111 0760 FFF7FEFF 	 bl lwip_htons
 4112 0764 0346     	 mov r3,r0
 4113 0766 DBB2     	 uxtb r3,r3
 4114 0768 03F00103 	 and r3,r3,#1
 4115 076c 002B     	 cmp r3,#0
 4116 076e 36D0     	 beq .L235
1512:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   (TCPH_FLAGS(inseg.tcphdr) & TCP_SYN) == 0) {
 4117              	 .loc 1 1512 0 discriminator 1
 4118 0770 164B     	 ldr r3,.L288+4
 4119 0772 DB68     	 ldr r3,[r3,#12]
 4120 0774 9B89     	 ldrh r3,[r3,#12]
 4121 0776 9BB2     	 uxth r3,r3
 4122 0778 1846     	 mov r0,r3
 4123 077a FFF7FEFF 	 bl lwip_htons
 4124 077e 0346     	 mov r3,r0
 4125 0780 DBB2     	 uxtb r3,r3
 4126 0782 03F00203 	 and r3,r3,#2
1511:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   (TCPH_FLAGS(inseg.tcphdr) & TCP_SYN) == 0) {
 4127              	 .loc 1 1511 0 discriminator 1
 4128 0786 002B     	 cmp r3,#0
 4129 0788 29D1     	 bne .L235
1513:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 TCPH_SET_FLAG(inseg.tcphdr, TCP_FIN);
 4130              	 .loc 1 1513 0
 4131 078a 104B     	 ldr r3,.L288+4
 4132 078c DC68     	 ldr r4,[r3,#12]
 4133 078e 0F4B     	 ldr r3,.L288+4
 4134 0790 DB68     	 ldr r3,[r3,#12]
 4135 0792 9B89     	 ldrh r3,[r3,#12]
 4136 0794 9DB2     	 uxth r5,r3
 4137 0796 0120     	 movs r0,#1
 4138 0798 FFF7FEFF 	 bl lwip_htons
 4139 079c 0346     	 mov r3,r0
 4140 079e 2B43     	 orrs r3,r3,r5
 4141 07a0 9BB2     	 uxth r3,r3
 4142 07a2 A381     	 strh r3,[r4,#12]
1514:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 tcplen = TCP_TCPLEN(&inseg);
 4143              	 .loc 1 1514 0
 4144 07a4 094B     	 ldr r3,.L288+4
 4145 07a6 1C89     	 ldrh r4,[r3,#8]
 4146 07a8 084B     	 ldr r3,.L288+4
 4147 07aa DB68     	 ldr r3,[r3,#12]
 4148 07ac 9B89     	 ldrh r3,[r3,#12]
 4149 07ae 9BB2     	 uxth r3,r3
 4150 07b0 1846     	 mov r0,r3
 4151 07b2 FFF7FEFF 	 bl lwip_htons
 4152 07b6 0346     	 mov r3,r0
 4153 07b8 DBB2     	 uxtb r3,r3
 4154 07ba 03F00303 	 and r3,r3,#3
 4155 07be 002B     	 cmp r3,#0
 4156 07c0 08D0     	 beq .L236
 4157              	 .loc 1 1514 0 is_stmt 0 discriminator 1
 4158 07c2 0123     	 movs r3,#1
 4159 07c4 07E0     	 b .L237
 4160              	.L289:
 4161 07c6 00BF     	 .align 2
 4162              	.L288:
 4163 07c8 00000000 	 .word seqno
 4164 07cc 00000000 	 .word inseg
 4165 07d0 00000000 	 .word tcplen
 4166              	.L236:
 4167              	 .loc 1 1514 0 discriminator 2
 4168 07d4 0023     	 movs r3,#0
 4169              	.L237:
 4170              	 .loc 1 1514 0 discriminator 4
 4171 07d6 2344     	 add r3,r3,r4
 4172 07d8 9AB2     	 uxth r2,r3
 4173 07da 9D4B     	 ldr r3,.L290
 4174 07dc 1A80     	 strh r2,[r3]
 4175              	.L235:
1515:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               }
1516:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               tmp = next;
 4176              	 .loc 1 1516 0 is_stmt 1
 4177 07de FB6B     	 ldr r3,[r7,#60]
 4178 07e0 BB61     	 str r3,[r7,#24]
1517:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               next = next->next;
 4179              	 .loc 1 1517 0
 4180 07e2 FB6B     	 ldr r3,[r7,#60]
 4181 07e4 1B68     	 ldr r3,[r3]
 4182 07e6 FB63     	 str r3,[r7,#60]
1518:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               tcp_seg_free(tmp);
 4183              	 .loc 1 1518 0
 4184 07e8 B869     	 ldr r0,[r7,#24]
 4185 07ea FFF7FEFF 	 bl tcp_seg_free
 4186              	.L234:
 4187              	.LBE14:
1506:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                    TCP_SEQ_GEQ(seqno + tcplen,
 4188              	 .loc 1 1506 0
 4189 07ee FB6B     	 ldr r3,[r7,#60]
 4190 07f0 002B     	 cmp r3,#0
 4191 07f2 0ED0     	 beq .L238
1507:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                next->tcphdr->seqno + next->len)) {
 4192              	 .loc 1 1507 0 discriminator 1
 4193 07f4 964B     	 ldr r3,.L290
 4194 07f6 1B88     	 ldrh r3,[r3]
 4195 07f8 1A46     	 mov r2,r3
 4196 07fa 964B     	 ldr r3,.L290+4
 4197 07fc 1B68     	 ldr r3,[r3]
 4198 07fe 1A44     	 add r2,r2,r3
 4199 0800 FB6B     	 ldr r3,[r7,#60]
 4200 0802 DB68     	 ldr r3,[r3,#12]
 4201 0804 5B68     	 ldr r3,[r3,#4]
 4202 0806 F96B     	 ldr r1,[r7,#60]
 4203 0808 0989     	 ldrh r1,[r1,#8]
 4204 080a 0B44     	 add r3,r3,r1
 4205 080c D31A     	 subs r3,r2,r3
1506:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                    TCP_SEQ_GEQ(seqno + tcplen,
 4206              	 .loc 1 1506 0 discriminator 1
 4207 080e 002B     	 cmp r3,#0
 4208 0810 A1DA     	 bge .L239
 4209              	.L238:
1519:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
1520:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* Now trim right side of inseg if it overlaps with the first
1521:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              * segment on ooseq */
1522:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (next &&
 4210              	 .loc 1 1522 0
 4211 0812 FB6B     	 ldr r3,[r7,#60]
 4212 0814 002B     	 cmp r3,#0
 4213 0816 47D0     	 beq .L240
1523:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 TCP_SEQ_GT(seqno + tcplen,
 4214              	 .loc 1 1523 0 discriminator 1
 4215 0818 8D4B     	 ldr r3,.L290
 4216 081a 1B88     	 ldrh r3,[r3]
 4217 081c 1A46     	 mov r2,r3
 4218 081e 8D4B     	 ldr r3,.L290+4
 4219 0820 1B68     	 ldr r3,[r3]
 4220 0822 1A44     	 add r2,r2,r3
 4221 0824 FB6B     	 ldr r3,[r7,#60]
 4222 0826 DB68     	 ldr r3,[r3,#12]
 4223 0828 5B68     	 ldr r3,[r3,#4]
 4224 082a D31A     	 subs r3,r2,r3
1522:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 TCP_SEQ_GT(seqno + tcplen,
 4225              	 .loc 1 1522 0 discriminator 1
 4226 082c 002B     	 cmp r3,#0
 4227 082e 3BDD     	 ble .L240
1524:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                            next->tcphdr->seqno)) {
1525:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               /* inseg cannot have FIN here (already processed above) */
1526:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               inseg.len = (u16_t)(next->tcphdr->seqno - seqno);
 4228              	 .loc 1 1526 0
 4229 0830 FB6B     	 ldr r3,[r7,#60]
 4230 0832 DB68     	 ldr r3,[r3,#12]
 4231 0834 5B68     	 ldr r3,[r3,#4]
 4232 0836 9AB2     	 uxth r2,r3
 4233 0838 864B     	 ldr r3,.L290+4
 4234 083a 1B68     	 ldr r3,[r3]
 4235 083c 9BB2     	 uxth r3,r3
 4236 083e D31A     	 subs r3,r2,r3
 4237 0840 9AB2     	 uxth r2,r3
 4238 0842 854B     	 ldr r3,.L290+8
 4239 0844 1A81     	 strh r2,[r3,#8]
1527:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               if (TCPH_FLAGS(inseg.tcphdr) & TCP_SYN) {
 4240              	 .loc 1 1527 0
 4241 0846 844B     	 ldr r3,.L290+8
 4242 0848 DB68     	 ldr r3,[r3,#12]
 4243 084a 9B89     	 ldrh r3,[r3,#12]
 4244 084c 9BB2     	 uxth r3,r3
 4245 084e 1846     	 mov r0,r3
 4246 0850 FFF7FEFF 	 bl lwip_htons
 4247 0854 0346     	 mov r3,r0
 4248 0856 DBB2     	 uxtb r3,r3
 4249 0858 03F00203 	 and r3,r3,#2
 4250 085c 002B     	 cmp r3,#0
 4251 085e 05D0     	 beq .L241
1528:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 inseg.len -= 1;
 4252              	 .loc 1 1528 0
 4253 0860 7D4B     	 ldr r3,.L290+8
 4254 0862 1B89     	 ldrh r3,[r3,#8]
 4255 0864 013B     	 subs r3,r3,#1
 4256 0866 9AB2     	 uxth r2,r3
 4257 0868 7B4B     	 ldr r3,.L290+8
 4258 086a 1A81     	 strh r2,[r3,#8]
 4259              	.L241:
1529:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               }
1530:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               pbuf_realloc(inseg.p, inseg.len);
 4260              	 .loc 1 1530 0
 4261 086c 7A4B     	 ldr r3,.L290+8
 4262 086e 5A68     	 ldr r2,[r3,#4]
 4263 0870 794B     	 ldr r3,.L290+8
 4264 0872 1B89     	 ldrh r3,[r3,#8]
 4265 0874 1046     	 mov r0,r2
 4266 0876 1946     	 mov r1,r3
 4267 0878 FFF7FEFF 	 bl pbuf_realloc
1531:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               tcplen = TCP_TCPLEN(&inseg);
 4268              	 .loc 1 1531 0
 4269 087c 764B     	 ldr r3,.L290+8
 4270 087e 1C89     	 ldrh r4,[r3,#8]
 4271 0880 754B     	 ldr r3,.L290+8
 4272 0882 DB68     	 ldr r3,[r3,#12]
 4273 0884 9B89     	 ldrh r3,[r3,#12]
 4274 0886 9BB2     	 uxth r3,r3
 4275 0888 1846     	 mov r0,r3
 4276 088a FFF7FEFF 	 bl lwip_htons
 4277 088e 0346     	 mov r3,r0
 4278 0890 DBB2     	 uxtb r3,r3
 4279 0892 03F00303 	 and r3,r3,#3
 4280 0896 002B     	 cmp r3,#0
 4281 0898 01D0     	 beq .L242
 4282              	 .loc 1 1531 0 is_stmt 0 discriminator 1
 4283 089a 0123     	 movs r3,#1
 4284 089c 00E0     	 b .L243
 4285              	.L242:
 4286              	 .loc 1 1531 0 discriminator 2
 4287 089e 0023     	 movs r3,#0
 4288              	.L243:
 4289              	 .loc 1 1531 0 discriminator 4
 4290 08a0 2344     	 add r3,r3,r4
 4291 08a2 9AB2     	 uxth r2,r3
 4292 08a4 6A4B     	 ldr r3,.L290
 4293 08a6 1A80     	 strh r2,[r3]
 4294              	.L240:
1532:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               LWIP_ASSERT("tcp_receive: segment not trimmed correctly to ooseq queue\n",
1533:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                           (seqno + tcplen) == next->tcphdr->seqno);
1534:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
1535:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             pcb->ooseq = next;
 4295              	 .loc 1 1535 0 is_stmt 1
 4296 08a8 7B68     	 ldr r3,[r7,#4]
 4297 08aa FA6B     	 ldr r2,[r7,#60]
 4298 08ac 5A67     	 str r2,[r3,#116]
 4299              	.L230:
 4300              	.LBE13:
1536:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
1537:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
1538:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_QUEUE_OOSEQ */
1539:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1540:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->rcv_nxt = seqno + tcplen;
 4301              	 .loc 1 1540 0
 4302 08ae 684B     	 ldr r3,.L290
 4303 08b0 1B88     	 ldrh r3,[r3]
 4304 08b2 1A46     	 mov r2,r3
 4305 08b4 674B     	 ldr r3,.L290+4
 4306 08b6 1B68     	 ldr r3,[r3]
 4307 08b8 1A44     	 add r2,r2,r3
 4308 08ba 7B68     	 ldr r3,[r7,#4]
 4309 08bc 5A62     	 str r2,[r3,#36]
1541:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1542:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* Update the receiver's (our) window. */
1543:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         LWIP_ASSERT("tcp_receive: tcplen > rcv_wnd\n", pcb->rcv_wnd >= tcplen);
1544:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         pcb->rcv_wnd -= tcplen;
 4310              	 .loc 1 1544 0
 4311 08be 7B68     	 ldr r3,[r7,#4]
 4312 08c0 1A8D     	 ldrh r2,[r3,#40]
 4313 08c2 634B     	 ldr r3,.L290
 4314 08c4 1B88     	 ldrh r3,[r3]
 4315 08c6 D31A     	 subs r3,r2,r3
 4316 08c8 9AB2     	 uxth r2,r3
 4317 08ca 7B68     	 ldr r3,[r7,#4]
 4318 08cc 1A85     	 strh r2,[r3,#40]
1545:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1546:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_update_rcv_ann_wnd(pcb);
 4319              	 .loc 1 1546 0
 4320 08ce 7868     	 ldr r0,[r7,#4]
 4321 08d0 FFF7FEFF 	 bl tcp_update_rcv_ann_wnd
1547:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1548:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* If there is data in the segment, we make preparations to
1549:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            pass this up to the application. The ->recv_data variable
1550:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            is used for holding the pbuf that goes to the
1551:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            application. The code for reassembling out-of-sequence data
1552:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            chains its data on this pbuf as well.
1553:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1554:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            If the segment was a FIN, we set the TF_GOT_FIN flag that will
1555:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            be used to indicate to the application that the remote side has
1556:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            closed its end of the connection. */
1557:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (inseg.p->tot_len > 0) {
 4322              	 .loc 1 1557 0
 4323 08d4 604B     	 ldr r3,.L290+8
 4324 08d6 5B68     	 ldr r3,[r3,#4]
 4325 08d8 1B89     	 ldrh r3,[r3,#8]
 4326 08da 002B     	 cmp r3,#0
 4327 08dc 06D0     	 beq .L244
1558:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           recv_data = inseg.p;
 4328              	 .loc 1 1558 0
 4329 08de 5E4B     	 ldr r3,.L290+8
 4330 08e0 5B68     	 ldr r3,[r3,#4]
 4331 08e2 5E4A     	 ldr r2,.L290+12
 4332 08e4 1360     	 str r3,[r2]
1559:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* Since this pbuf now is the responsibility of the
1560:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              application, we delete our reference to it so that we won't
1561:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              (mistakingly) deallocate it. */
1562:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           inseg.p = NULL;
 4333              	 .loc 1 1562 0
 4334 08e6 5C4B     	 ldr r3,.L290+8
 4335 08e8 0022     	 movs r2,#0
 4336 08ea 5A60     	 str r2,[r3,#4]
 4337              	.L244:
1563:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
1564:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (TCPH_FLAGS(inseg.tcphdr) & TCP_FIN) {
 4338              	 .loc 1 1564 0
 4339 08ec 5A4B     	 ldr r3,.L290+8
 4340 08ee DB68     	 ldr r3,[r3,#12]
 4341 08f0 9B89     	 ldrh r3,[r3,#12]
 4342 08f2 9BB2     	 uxth r3,r3
 4343 08f4 1846     	 mov r0,r3
 4344 08f6 FFF7FEFF 	 bl lwip_htons
 4345 08fa 0346     	 mov r3,r0
 4346 08fc DBB2     	 uxtb r3,r3
 4347 08fe 03F00103 	 and r3,r3,#1
 4348 0902 002B     	 cmp r3,#0
 4349 0904 06D0     	 beq .L245
1565:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_receive: received FIN.\n"));
1566:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           recv_flags |= TF_GOT_FIN;
 4350              	 .loc 1 1566 0
 4351 0906 564B     	 ldr r3,.L290+16
 4352 0908 1B78     	 ldrb r3,[r3]
 4353 090a 43F02003 	 orr r3,r3,#32
 4354 090e DAB2     	 uxtb r2,r3
 4355 0910 534B     	 ldr r3,.L290+16
 4356 0912 1A70     	 strb r2,[r3]
 4357              	.L245:
1567:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
1568:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1569:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_QUEUE_OOSEQ
1570:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* We now check if we have segments on the ->ooseq queue that
1571:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            are now in sequence. */
1572:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         while (pcb->ooseq != NULL &&
 4358              	 .loc 1 1572 0
 4359 0914 7AE0     	 b .L246
 4360              	.L256:
 4361              	.LBB15:
1573:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                pcb->ooseq->tcphdr->seqno == pcb->rcv_nxt) {
1574:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1575:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           struct tcp_seg *cseg = pcb->ooseq;
 4362              	 .loc 1 1575 0
 4363 0916 7B68     	 ldr r3,[r7,#4]
 4364 0918 5B6F     	 ldr r3,[r3,#116]
 4365 091a 7B61     	 str r3,[r7,#20]
1576:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           seqno = pcb->ooseq->tcphdr->seqno;
 4366              	 .loc 1 1576 0
 4367 091c 7B68     	 ldr r3,[r7,#4]
 4368 091e 5B6F     	 ldr r3,[r3,#116]
 4369 0920 DB68     	 ldr r3,[r3,#12]
 4370 0922 5B68     	 ldr r3,[r3,#4]
 4371 0924 4B4A     	 ldr r2,.L290+4
 4372 0926 1360     	 str r3,[r2]
1577:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1578:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pcb->rcv_nxt += TCP_TCPLEN(cseg);
 4373              	 .loc 1 1578 0
 4374 0928 7B69     	 ldr r3,[r7,#20]
 4375 092a 1B89     	 ldrh r3,[r3,#8]
 4376 092c 1C46     	 mov r4,r3
 4377 092e 7B69     	 ldr r3,[r7,#20]
 4378 0930 DB68     	 ldr r3,[r3,#12]
 4379 0932 9B89     	 ldrh r3,[r3,#12]
 4380 0934 9BB2     	 uxth r3,r3
 4381 0936 1846     	 mov r0,r3
 4382 0938 FFF7FEFF 	 bl lwip_htons
 4383 093c 0346     	 mov r3,r0
 4384 093e DBB2     	 uxtb r3,r3
 4385 0940 03F00303 	 and r3,r3,#3
 4386 0944 002B     	 cmp r3,#0
 4387 0946 01D0     	 beq .L247
 4388              	 .loc 1 1578 0 is_stmt 0 discriminator 1
 4389 0948 0123     	 movs r3,#1
 4390 094a 00E0     	 b .L248
 4391              	.L247:
 4392              	 .loc 1 1578 0 discriminator 2
 4393 094c 0023     	 movs r3,#0
 4394              	.L248:
 4395              	 .loc 1 1578 0 discriminator 4
 4396 094e 2344     	 add r3,r3,r4
 4397 0950 7A68     	 ldr r2,[r7,#4]
 4398 0952 526A     	 ldr r2,[r2,#36]
 4399 0954 1A44     	 add r2,r2,r3
 4400 0956 7B68     	 ldr r3,[r7,#4]
 4401 0958 5A62     	 str r2,[r3,#36]
1579:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           LWIP_ASSERT("tcp_receive: ooseq tcplen > rcv_wnd\n",
1580:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                       pcb->rcv_wnd >= TCP_TCPLEN(cseg));
1581:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pcb->rcv_wnd -= TCP_TCPLEN(cseg);
 4402              	 .loc 1 1581 0 is_stmt 1 discriminator 4
 4403 095a 7B69     	 ldr r3,[r7,#20]
 4404 095c 1B89     	 ldrh r3,[r3,#8]
 4405 095e 1C46     	 mov r4,r3
 4406 0960 7B69     	 ldr r3,[r7,#20]
 4407 0962 DB68     	 ldr r3,[r3,#12]
 4408 0964 9B89     	 ldrh r3,[r3,#12]
 4409 0966 9BB2     	 uxth r3,r3
 4410 0968 1846     	 mov r0,r3
 4411 096a FFF7FEFF 	 bl lwip_htons
 4412 096e 0346     	 mov r3,r0
 4413 0970 DBB2     	 uxtb r3,r3
 4414 0972 03F00303 	 and r3,r3,#3
 4415 0976 002B     	 cmp r3,#0
 4416 0978 01D0     	 beq .L249
 4417              	 .loc 1 1581 0 is_stmt 0 discriminator 1
 4418 097a 0123     	 movs r3,#1
 4419 097c 00E0     	 b .L250
 4420              	.L249:
 4421              	 .loc 1 1581 0 discriminator 2
 4422 097e 0023     	 movs r3,#0
 4423              	.L250:
 4424              	 .loc 1 1581 0 discriminator 4
 4425 0980 E118     	 adds r1,r4,r3
 4426 0982 7B68     	 ldr r3,[r7,#4]
 4427 0984 1A8D     	 ldrh r2,[r3,#40]
 4428 0986 8BB2     	 uxth r3,r1
 4429 0988 D31A     	 subs r3,r2,r3
 4430 098a 9AB2     	 uxth r2,r3
 4431 098c 7B68     	 ldr r3,[r7,#4]
 4432 098e 1A85     	 strh r2,[r3,#40]
1582:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1583:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tcp_update_rcv_ann_wnd(pcb);
 4433              	 .loc 1 1583 0 is_stmt 1 discriminator 4
 4434 0990 7868     	 ldr r0,[r7,#4]
 4435 0992 FFF7FEFF 	 bl tcp_update_rcv_ann_wnd
1584:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1585:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (cseg->p->tot_len > 0) {
 4436              	 .loc 1 1585 0 discriminator 4
 4437 0996 7B69     	 ldr r3,[r7,#20]
 4438 0998 5B68     	 ldr r3,[r3,#4]
 4439 099a 1B89     	 ldrh r3,[r3,#8]
 4440 099c 002B     	 cmp r3,#0
 4441 099e 13D0     	 beq .L251
1586:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* Chain this pbuf onto the pbuf that we will pass to
1587:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                the application. */
1588:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* With window scaling, this can overflow recv_data->tot_len, but
1589:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                that's not a problem since we explicitly fix that before passing
1590:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                recv_data to the application. */
1591:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (recv_data) {
 4442              	 .loc 1 1591 0
 4443 09a0 2E4B     	 ldr r3,.L290+12
 4444 09a2 1B68     	 ldr r3,[r3]
 4445 09a4 002B     	 cmp r3,#0
 4446 09a6 08D0     	 beq .L252
1592:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               pbuf_cat(recv_data, cseg->p);
 4447              	 .loc 1 1592 0
 4448 09a8 2C4B     	 ldr r3,.L290+12
 4449 09aa 1A68     	 ldr r2,[r3]
 4450 09ac 7B69     	 ldr r3,[r7,#20]
 4451 09ae 5B68     	 ldr r3,[r3,#4]
 4452 09b0 1046     	 mov r0,r2
 4453 09b2 1946     	 mov r1,r3
 4454 09b4 FFF7FEFF 	 bl pbuf_cat
 4455 09b8 03E0     	 b .L253
 4456              	.L252:
1593:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             } else {
1594:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               recv_data = cseg->p;
 4457              	 .loc 1 1594 0
 4458 09ba 7B69     	 ldr r3,[r7,#20]
 4459 09bc 5B68     	 ldr r3,[r3,#4]
 4460 09be 274A     	 ldr r2,.L290+12
 4461 09c0 1360     	 str r3,[r2]
 4462              	.L253:
1595:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
1596:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             cseg->p = NULL;
 4463              	 .loc 1 1596 0
 4464 09c2 7B69     	 ldr r3,[r7,#20]
 4465 09c4 0022     	 movs r2,#0
 4466 09c6 5A60     	 str r2,[r3,#4]
 4467              	.L251:
1597:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
1598:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (TCPH_FLAGS(cseg->tcphdr) & TCP_FIN) {
 4468              	 .loc 1 1598 0
 4469 09c8 7B69     	 ldr r3,[r7,#20]
 4470 09ca DB68     	 ldr r3,[r3,#12]
 4471 09cc 9B89     	 ldrh r3,[r3,#12]
 4472 09ce 9BB2     	 uxth r3,r3
 4473 09d0 1846     	 mov r0,r3
 4474 09d2 FFF7FEFF 	 bl lwip_htons
 4475 09d6 0346     	 mov r3,r0
 4476 09d8 DBB2     	 uxtb r3,r3
 4477 09da 03F00103 	 and r3,r3,#1
 4478 09de 002B     	 cmp r3,#0
 4479 09e0 0DD0     	 beq .L254
1599:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_receive: dequeued FIN.\n"));
1600:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             recv_flags |= TF_GOT_FIN;
 4480              	 .loc 1 1600 0
 4481 09e2 1F4B     	 ldr r3,.L290+16
 4482 09e4 1B78     	 ldrb r3,[r3]
 4483 09e6 43F02003 	 orr r3,r3,#32
 4484 09ea DAB2     	 uxtb r2,r3
 4485 09ec 1C4B     	 ldr r3,.L290+16
 4486 09ee 1A70     	 strb r2,[r3]
1601:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (pcb->state == ESTABLISHED) { /* force passive close or we can move to active close 
 4487              	 .loc 1 1601 0
 4488 09f0 7B68     	 ldr r3,[r7,#4]
 4489 09f2 1B7D     	 ldrb r3,[r3,#20]
 4490 09f4 042B     	 cmp r3,#4
 4491 09f6 02D1     	 bne .L254
1602:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               pcb->state = CLOSE_WAIT;
 4492              	 .loc 1 1602 0
 4493 09f8 7B68     	 ldr r3,[r7,#4]
 4494 09fa 0722     	 movs r2,#7
 4495 09fc 1A75     	 strb r2,[r3,#20]
 4496              	.L254:
1603:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
1604:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
1605:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1606:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pcb->ooseq = cseg->next;
 4497              	 .loc 1 1606 0
 4498 09fe 7B69     	 ldr r3,[r7,#20]
 4499 0a00 1A68     	 ldr r2,[r3]
 4500 0a02 7B68     	 ldr r3,[r7,#4]
 4501 0a04 5A67     	 str r2,[r3,#116]
1607:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tcp_seg_free(cseg);
 4502              	 .loc 1 1607 0
 4503 0a06 7869     	 ldr r0,[r7,#20]
 4504 0a08 FFF7FEFF 	 bl tcp_seg_free
 4505              	.L246:
 4506              	.LBE15:
1572:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                pcb->ooseq->tcphdr->seqno == pcb->rcv_nxt) {
 4507              	 .loc 1 1572 0
 4508 0a0c 7B68     	 ldr r3,[r7,#4]
 4509 0a0e 5B6F     	 ldr r3,[r3,#116]
 4510 0a10 002B     	 cmp r3,#0
 4511 0a12 08D0     	 beq .L255
1573:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
 4512              	 .loc 1 1573 0 discriminator 1
 4513 0a14 7B68     	 ldr r3,[r7,#4]
 4514 0a16 5B6F     	 ldr r3,[r3,#116]
 4515 0a18 DB68     	 ldr r3,[r3,#12]
 4516 0a1a 5A68     	 ldr r2,[r3,#4]
 4517 0a1c 7B68     	 ldr r3,[r7,#4]
 4518 0a1e 5B6A     	 ldr r3,[r3,#36]
1572:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                pcb->ooseq->tcphdr->seqno == pcb->rcv_nxt) {
 4519              	 .loc 1 1572 0 discriminator 1
 4520 0a20 9A42     	 cmp r2,r3
 4521 0a22 3FF478AF 	 beq .L256
 4522              	.L255:
1608:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
1609:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_TCP_SACK_OUT
1610:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (pcb->flags & TF_SACK) {
1611:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (pcb->ooseq != NULL) {
1612:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* Some segments may have been removed from ooseq, let's remove all SACKs that
1613:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                describe anything before the new beginning of that list. */
1614:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             tcp_remove_sacks_lt(pcb, pcb->ooseq->tcphdr->seqno);
1615:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           } else if (LWIP_TCP_SACK_VALID(pcb, 0)) {
1616:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* ooseq has been cleared. Nothing to SACK */
1617:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             memset(pcb->rcv_sacks, 0, sizeof(pcb->rcv_sacks));
1618:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
1619:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
1620:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* LWIP_TCP_SACK_OUT */
1621:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_QUEUE_OOSEQ */
1622:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1623:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1624:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* Acknowledge the segment(s). */
1625:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_ack(pcb);
 4523              	 .loc 1 1625 0
 4524 0a26 7B68     	 ldr r3,[r7,#4]
 4525 0a28 5B8B     	 ldrh r3,[r3,#26]
 4526 0a2a 03F00103 	 and r3,r3,#1
 4527 0a2e 002B     	 cmp r3,#0
 4528 0a30 18D0     	 beq .L257
 4529              	 .loc 1 1625 0 is_stmt 0 discriminator 1
 4530 0a32 7B68     	 ldr r3,[r7,#4]
 4531 0a34 5B8B     	 ldrh r3,[r3,#26]
 4532 0a36 23F00103 	 bic r3,r3,#1
 4533 0a3a 9AB2     	 uxth r2,r3
 4534 0a3c 7B68     	 ldr r3,[r7,#4]
 4535 0a3e 5A83     	 strh r2,[r3,#26]
 4536 0a40 7B68     	 ldr r3,[r7,#4]
 4537 0a42 5B8B     	 ldrh r3,[r3,#26]
 4538 0a44 43F00203 	 orr r3,r3,#2
 4539 0a48 9AB2     	 uxth r2,r3
 4540 0a4a 7B68     	 ldr r3,[r7,#4]
 4541 0a4c 5A83     	 strh r2,[r3,#26]
1459:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* The incoming segment is the next in sequence. We check if
 4542              	 .loc 1 1459 0 is_stmt 1 discriminator 1
 4543 0a4e 70E1     	 b .L281
 4544              	.L291:
 4545              	 .align 2
 4546              	.L290:
 4547 0a50 00000000 	 .word tcplen
 4548 0a54 00000000 	 .word seqno
 4549 0a58 00000000 	 .word inseg
 4550 0a5c 00000000 	 .word recv_data
 4551 0a60 00000000 	 .word recv_flags
 4552              	.L257:
 4553              	 .loc 1 1625 0 discriminator 2
 4554 0a64 7B68     	 ldr r3,[r7,#4]
 4555 0a66 5B8B     	 ldrh r3,[r3,#26]
 4556 0a68 43F00103 	 orr r3,r3,#1
 4557 0a6c 9AB2     	 uxth r2,r3
 4558 0a6e 7B68     	 ldr r3,[r7,#4]
 4559 0a70 5A83     	 strh r2,[r3,#26]
1459:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* The incoming segment is the next in sequence. We check if
 4560              	 .loc 1 1459 0 discriminator 2
 4561 0a72 5EE1     	 b .L281
 4562              	.L222:
1626:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1627:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_TCP_SACK_OUT
1628:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (LWIP_TCP_SACK_VALID(pcb, 0)) {
1629:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* Normally the ACK for the data received could be piggy-backed on a data packet,
1630:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              but lwIP currently does not support including SACKs in data packets. So we force
1631:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              it to respond with an empty ACK packet (only if there is at least one SACK to be sent)
1632:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              NOTE: tcp_send_empty_ack() on success clears the ACK flags (set by tcp_ack()) */
1633:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tcp_send_empty_ack(pcb);
1634:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
1635:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* LWIP_TCP_SACK_OUT */
1636:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1637:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_IPV6 && LWIP_ND6_TCP_REACHABILITY_HINTS
1638:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (ip_current_is_v6()) {
1639:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* Inform neighbor reachability of forward progress. */
1640:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           nd6_reachability_hint(ip6_current_src_addr());
1641:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
1642:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* LWIP_IPV6 && LWIP_ND6_TCP_REACHABILITY_HINTS*/
1643:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1644:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       } else {
1645:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* We get here if the incoming segment is out-of-sequence. */
1646:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1647:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if TCP_QUEUE_OOSEQ
1648:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* We queue the segment on the ->ooseq queue. */
1649:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         if (pcb->ooseq == NULL) {
 4563              	 .loc 1 1649 0
 4564 0a74 7B68     	 ldr r3,[r7,#4]
 4565 0a76 5B6F     	 ldr r3,[r3,#116]
 4566 0a78 002B     	 cmp r3,#0
 4567 0a7a 06D1     	 bne .L260
1650:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pcb->ooseq = tcp_seg_copy(&inseg);
 4568              	 .loc 1 1650 0
 4569 0a7c 5548     	 ldr r0,.L292
 4570 0a7e FFF7FEFF 	 bl tcp_seg_copy
 4571 0a82 0246     	 mov r2,r0
 4572 0a84 7B68     	 ldr r3,[r7,#4]
 4573 0a86 5A67     	 str r2,[r3,#116]
 4574 0a88 4BE1     	 b .L261
 4575              	.L260:
 4576              	.LBB16:
1651:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_TCP_SACK_OUT
1652:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (pcb->flags & TF_SACK) {
1653:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* All the SACKs should be invalid, so we can simply store the most recent one: */
1654:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             pcb->rcv_sacks[0].left = seqno;
1655:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             pcb->rcv_sacks[0].right = seqno + inseg.len;
1656:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
1657:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* LWIP_TCP_SACK_OUT */
1658:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         } else {
1659:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* If the queue is not empty, we walk through the queue and
1660:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              try to find a place where the sequence number of the
1661:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              incoming segment is between the sequence numbers of the
1662:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              previous and the next segment on the ->ooseq queue. That is
1663:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              the place where we put the incoming segment. If needed, we
1664:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              trim the second edges of the previous and the incoming
1665:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              segment so that it will fit into the sequence.
1666:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1667:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              If the incoming segment has the same sequence number as a
1668:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              segment on the ->ooseq queue, we discard the segment that
1669:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              contains less data. */
1670:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1671:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_TCP_SACK_OUT
1672:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* This is the left edge of the lowest possible SACK range.
1673:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              It may start before the newly received segment (possibly adjusted below). */
1674:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           u32_t sackbeg = TCP_SEQ_LT(seqno, pcb->ooseq->tcphdr->seqno) ? seqno : pcb->ooseq->tcphdr
1675:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* LWIP_TCP_SACK_OUT */
1676:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           struct tcp_seg *next, *prev = NULL;
 4577              	 .loc 1 1676 0
 4578 0a8a 0023     	 movs r3,#0
 4579 0a8c 7B63     	 str r3,[r7,#52]
1677:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           for (next = pcb->ooseq; next != NULL; next = next->next) {
 4580              	 .loc 1 1677 0
 4581 0a8e 7B68     	 ldr r3,[r7,#4]
 4582 0a90 5B6F     	 ldr r3,[r3,#116]
 4583 0a92 BB63     	 str r3,[r7,#56]
 4584 0a94 41E1     	 b .L262
 4585              	.L280:
1678:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (seqno == next->tcphdr->seqno) {
 4586              	 .loc 1 1678 0
 4587 0a96 BB6B     	 ldr r3,[r7,#56]
 4588 0a98 DB68     	 ldr r3,[r3,#12]
 4589 0a9a 5A68     	 ldr r2,[r3,#4]
 4590 0a9c 4E4B     	 ldr r3,.L292+4
 4591 0a9e 1B68     	 ldr r3,[r3]
 4592 0aa0 9A42     	 cmp r2,r3
 4593 0aa2 1DD1     	 bne .L263
1679:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               /* The sequence number of the incoming segment is the
1680:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                  same as the sequence number of the segment on
1681:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                  ->ooseq. We check the lengths to see which one to
1682:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                  discard. */
1683:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               if (inseg.len > next->len) {
 4594              	 .loc 1 1683 0
 4595 0aa4 4B4B     	 ldr r3,.L292
 4596 0aa6 1A89     	 ldrh r2,[r3,#8]
 4597 0aa8 BB6B     	 ldr r3,[r7,#56]
 4598 0aaa 1B89     	 ldrh r3,[r3,#8]
 4599 0aac 9A42     	 cmp r2,r3
 4600 0aae 16D9     	 bls .L264
 4601              	.LBB17:
1684:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 /* The incoming segment is larger than the old
1685:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                    segment. We replace some segments with the new
1686:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                    one. */
1687:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 struct tcp_seg *cseg = tcp_seg_copy(&inseg);
 4602              	 .loc 1 1687 0
 4603 0ab0 4848     	 ldr r0,.L292
 4604 0ab2 FFF7FEFF 	 bl tcp_seg_copy
 4605 0ab6 B860     	 str r0,[r7,#8]
1688:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 if (cseg != NULL) {
 4606              	 .loc 1 1688 0
 4607 0ab8 BB68     	 ldr r3,[r7,#8]
 4608 0aba 002B     	 cmp r3,#0
 4609 0abc 0ED0     	 beq .L265
1689:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   if (prev != NULL) {
 4610              	 .loc 1 1689 0
 4611 0abe 7B6B     	 ldr r3,[r7,#52]
 4612 0ac0 002B     	 cmp r3,#0
 4613 0ac2 03D0     	 beq .L266
1690:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     prev->next = cseg;
 4614              	 .loc 1 1690 0
 4615 0ac4 7B6B     	 ldr r3,[r7,#52]
 4616 0ac6 BA68     	 ldr r2,[r7,#8]
 4617 0ac8 1A60     	 str r2,[r3]
 4618 0aca 02E0     	 b .L267
 4619              	.L266:
1691:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   } else {
1692:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     pcb->ooseq = cseg;
 4620              	 .loc 1 1692 0
 4621 0acc 7B68     	 ldr r3,[r7,#4]
 4622 0ace BA68     	 ldr r2,[r7,#8]
 4623 0ad0 5A67     	 str r2,[r3,#116]
 4624              	.L267:
1693:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   }
1694:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   tcp_oos_insert_segment(cseg, next);
 4625              	 .loc 1 1694 0
 4626 0ad2 B868     	 ldr r0,[r7,#8]
 4627 0ad4 B96B     	 ldr r1,[r7,#56]
 4628 0ad6 FFF7FEFF 	 bl tcp_oos_insert_segment
1695:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 }
1696:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 break;
 4629              	 .loc 1 1696 0
 4630 0ada 22E1     	 b .L261
 4631              	.L265:
 4632 0adc 21E1     	 b .L261
 4633              	.L264:
 4634              	.LBE17:
1697:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               } else {
1698:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 /* Either the lengths are the same or the incoming
1699:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                    segment was smaller than the old one; in either
1700:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                    case, we ditch the incoming segment. */
1701:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 break;
 4635              	 .loc 1 1701 0
 4636 0ade 20E1     	 b .L261
 4637              	.L263:
1702:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               }
1703:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             } else {
1704:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               if (prev == NULL) {
 4638              	 .loc 1 1704 0
 4639 0ae0 7B6B     	 ldr r3,[r7,#52]
 4640 0ae2 002B     	 cmp r3,#0
 4641 0ae4 17D1     	 bne .L268
1705:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 if (TCP_SEQ_LT(seqno, next->tcphdr->seqno)) {
 4642              	 .loc 1 1705 0
 4643 0ae6 3C4B     	 ldr r3,.L292+4
 4644 0ae8 1A68     	 ldr r2,[r3]
 4645 0aea BB6B     	 ldr r3,[r7,#56]
 4646 0aec DB68     	 ldr r3,[r3,#12]
 4647 0aee 5B68     	 ldr r3,[r3,#4]
 4648 0af0 D31A     	 subs r3,r2,r3
 4649 0af2 002B     	 cmp r3,#0
 4650 0af4 4FDA     	 bge .L269
 4651              	.LBB18:
1706:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   /* The sequence number of the incoming segment is lower
1707:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                      than the sequence number of the first segment on the
1708:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                      queue. We put the incoming segment first on the
1709:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                      queue. */
1710:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   struct tcp_seg *cseg = tcp_seg_copy(&inseg);
 4652              	 .loc 1 1710 0
 4653 0af6 3748     	 ldr r0,.L292
 4654 0af8 FFF7FEFF 	 bl tcp_seg_copy
 4655 0afc 3861     	 str r0,[r7,#16]
1711:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   if (cseg != NULL) {
 4656              	 .loc 1 1711 0
 4657 0afe 3B69     	 ldr r3,[r7,#16]
 4658 0b00 002B     	 cmp r3,#0
 4659 0b02 07D0     	 beq .L270
1712:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     pcb->ooseq = cseg;
 4660              	 .loc 1 1712 0
 4661 0b04 7B68     	 ldr r3,[r7,#4]
 4662 0b06 3A69     	 ldr r2,[r7,#16]
 4663 0b08 5A67     	 str r2,[r3,#116]
1713:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     tcp_oos_insert_segment(cseg, next);
 4664              	 .loc 1 1713 0
 4665 0b0a 3869     	 ldr r0,[r7,#16]
 4666 0b0c B96B     	 ldr r1,[r7,#56]
 4667 0b0e FFF7FEFF 	 bl tcp_oos_insert_segment
1714:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   }
1715:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   break;
 4668              	 .loc 1 1715 0
 4669 0b12 06E1     	 b .L261
 4670              	.L270:
 4671 0b14 05E1     	 b .L261
 4672              	.L268:
 4673              	.LBE18:
1716:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 }
1717:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               } else {
1718:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 /*if (TCP_SEQ_LT(prev->tcphdr->seqno, seqno) &&
1719:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   TCP_SEQ_LT(seqno, next->tcphdr->seqno)) {*/
1720:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 if (TCP_SEQ_BETWEEN(seqno, prev->tcphdr->seqno + 1, next->tcphdr->seqno - 1)) {
 4674              	 .loc 1 1720 0
 4675 0b16 304B     	 ldr r3,.L292+4
 4676 0b18 1A68     	 ldr r2,[r3]
 4677 0b1a 7B6B     	 ldr r3,[r7,#52]
 4678 0b1c DB68     	 ldr r3,[r3,#12]
 4679 0b1e 5B68     	 ldr r3,[r3,#4]
 4680 0b20 D31A     	 subs r3,r2,r3
 4681 0b22 013B     	 subs r3,r3,#1
 4682 0b24 002B     	 cmp r3,#0
 4683 0b26 36DB     	 blt .L269
 4684              	 .loc 1 1720 0 is_stmt 0 discriminator 1
 4685 0b28 2B4B     	 ldr r3,.L292+4
 4686 0b2a 1A68     	 ldr r2,[r3]
 4687 0b2c BB6B     	 ldr r3,[r7,#56]
 4688 0b2e DB68     	 ldr r3,[r3,#12]
 4689 0b30 5B68     	 ldr r3,[r3,#4]
 4690 0b32 D31A     	 subs r3,r2,r3
 4691 0b34 0133     	 adds r3,r3,#1
 4692 0b36 002B     	 cmp r3,#0
 4693 0b38 2DDC     	 bgt .L269
 4694              	.LBB19:
1721:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   /* The sequence number of the incoming segment is in
1722:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                      between the sequence numbers of the previous and
1723:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                      the next segment on ->ooseq. We trim trim the previous
1724:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                      segment, delete next segments that included in received segment
1725:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                      and trim received, if needed. */
1726:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   struct tcp_seg *cseg = tcp_seg_copy(&inseg);
 4695              	 .loc 1 1726 0 is_stmt 1
 4696 0b3a 2648     	 ldr r0,.L292
 4697 0b3c FFF7FEFF 	 bl tcp_seg_copy
 4698 0b40 F860     	 str r0,[r7,#12]
1727:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   if (cseg != NULL) {
 4699              	 .loc 1 1727 0
 4700 0b42 FB68     	 ldr r3,[r7,#12]
 4701 0b44 002B     	 cmp r3,#0
 4702 0b46 25D0     	 beq .L271
1728:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     if (TCP_SEQ_GT(prev->tcphdr->seqno + prev->len, seqno)) {
 4703              	 .loc 1 1728 0
 4704 0b48 7B6B     	 ldr r3,[r7,#52]
 4705 0b4a DB68     	 ldr r3,[r3,#12]
 4706 0b4c 5B68     	 ldr r3,[r3,#4]
 4707 0b4e 7A6B     	 ldr r2,[r7,#52]
 4708 0b50 1289     	 ldrh r2,[r2,#8]
 4709 0b52 1A44     	 add r2,r2,r3
 4710 0b54 204B     	 ldr r3,.L292+4
 4711 0b56 1B68     	 ldr r3,[r3]
 4712 0b58 D31A     	 subs r3,r2,r3
 4713 0b5a 002B     	 cmp r3,#0
 4714 0b5c 12DD     	 ble .L272
1729:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                       /* We need to trim the prev segment. */
1730:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                       prev->len = (u16_t)(seqno - prev->tcphdr->seqno);
 4715              	 .loc 1 1730 0
 4716 0b5e 1E4B     	 ldr r3,.L292+4
 4717 0b60 1B68     	 ldr r3,[r3]
 4718 0b62 9AB2     	 uxth r2,r3
 4719 0b64 7B6B     	 ldr r3,[r7,#52]
 4720 0b66 DB68     	 ldr r3,[r3,#12]
 4721 0b68 5B68     	 ldr r3,[r3,#4]
 4722 0b6a 9BB2     	 uxth r3,r3
 4723 0b6c D31A     	 subs r3,r2,r3
 4724 0b6e 9AB2     	 uxth r2,r3
 4725 0b70 7B6B     	 ldr r3,[r7,#52]
 4726 0b72 1A81     	 strh r2,[r3,#8]
1731:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                       pbuf_realloc(prev->p, prev->len);
 4727              	 .loc 1 1731 0
 4728 0b74 7B6B     	 ldr r3,[r7,#52]
 4729 0b76 5A68     	 ldr r2,[r3,#4]
 4730 0b78 7B6B     	 ldr r3,[r7,#52]
 4731 0b7a 1B89     	 ldrh r3,[r3,#8]
 4732 0b7c 1046     	 mov r0,r2
 4733 0b7e 1946     	 mov r1,r3
 4734 0b80 FFF7FEFF 	 bl pbuf_realloc
 4735              	.L272:
1732:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     }
1733:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     prev->next = cseg;
 4736              	 .loc 1 1733 0
 4737 0b84 7B6B     	 ldr r3,[r7,#52]
 4738 0b86 FA68     	 ldr r2,[r7,#12]
 4739 0b88 1A60     	 str r2,[r3]
1734:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     tcp_oos_insert_segment(cseg, next);
 4740              	 .loc 1 1734 0
 4741 0b8a F868     	 ldr r0,[r7,#12]
 4742 0b8c B96B     	 ldr r1,[r7,#56]
 4743 0b8e FFF7FEFF 	 bl tcp_oos_insert_segment
1735:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   }
1736:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   break;
 4744              	 .loc 1 1736 0
 4745 0b92 C6E0     	 b .L261
 4746              	.L271:
 4747 0b94 C5E0     	 b .L261
 4748              	.L269:
 4749              	.LBE19:
1737:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 }
1738:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               }
1739:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1740:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_TCP_SACK_OUT
1741:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               /* The new segment goes after the 'next' one. If there is a "hole" in sequence number
1742:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                  between 'prev' and the beginning of 'next', we want to move sackbeg. */
1743:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               if (prev != NULL && prev->tcphdr->seqno + prev->len != next->tcphdr->seqno) {
1744:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 sackbeg = next->tcphdr->seqno;
1745:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               }
1746:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* LWIP_TCP_SACK_OUT */
1747:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1748:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               /* We don't use 'prev' below, so let's set it to current 'next'.
1749:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                  This way even if we break the loop below, 'prev' will be pointing
1750:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                  at the segment right in front of the newly added one. */
1751:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               prev = next;
 4750              	 .loc 1 1751 0
 4751 0b96 BB6B     	 ldr r3,[r7,#56]
 4752 0b98 7B63     	 str r3,[r7,#52]
1752:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1753:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               /* If the "next" segment is the last segment on the
1754:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                  ooseq queue, we add the incoming segment to the end
1755:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                  of the list. */
1756:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               if (next->next == NULL &&
 4753              	 .loc 1 1756 0
 4754 0b9a BB6B     	 ldr r3,[r7,#56]
 4755 0b9c 1B68     	 ldr r3,[r3]
 4756 0b9e 002B     	 cmp r3,#0
 4757 0ba0 40F0B880 	 bne .L273
1757:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   TCP_SEQ_GT(seqno, next->tcphdr->seqno)) {
 4758              	 .loc 1 1757 0 discriminator 1
 4759 0ba4 0C4B     	 ldr r3,.L292+4
 4760 0ba6 1A68     	 ldr r2,[r3]
 4761 0ba8 BB6B     	 ldr r3,[r7,#56]
 4762 0baa DB68     	 ldr r3,[r3,#12]
 4763 0bac 5B68     	 ldr r3,[r3,#4]
 4764 0bae D31A     	 subs r3,r2,r3
1756:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   TCP_SEQ_GT(seqno, next->tcphdr->seqno)) {
 4765              	 .loc 1 1756 0 discriminator 1
 4766 0bb0 002B     	 cmp r3,#0
 4767 0bb2 40F3AF80 	 ble .L273
1758:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 if (TCPH_FLAGS(next->tcphdr) & TCP_FIN) {
 4768              	 .loc 1 1758 0
 4769 0bb6 BB6B     	 ldr r3,[r7,#56]
 4770 0bb8 DB68     	 ldr r3,[r3,#12]
 4771 0bba 9B89     	 ldrh r3,[r3,#12]
 4772 0bbc 9BB2     	 uxth r3,r3
 4773 0bbe 1846     	 mov r0,r3
 4774 0bc0 FFF7FEFF 	 bl lwip_htons
 4775 0bc4 0346     	 mov r3,r0
 4776 0bc6 DBB2     	 uxtb r3,r3
 4777 0bc8 03F00103 	 and r3,r3,#1
 4778 0bcc 002B     	 cmp r3,#0
 4779 0bce 05D0     	 beq .L274
1759:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   /* segment "next" already contains all data */
1760:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   break;
 4780              	 .loc 1 1760 0
 4781 0bd0 A7E0     	 b .L261
 4782              	.L293:
 4783 0bd2 00BF     	 .align 2
 4784              	.L292:
 4785 0bd4 00000000 	 .word inseg
 4786 0bd8 00000000 	 .word seqno
 4787              	.L274:
1761:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 }
1762:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 next->next = tcp_seg_copy(&inseg);
 4788              	 .loc 1 1762 0
 4789 0bdc 6348     	 ldr r0,.L294
 4790 0bde FFF7FEFF 	 bl tcp_seg_copy
 4791 0be2 0246     	 mov r2,r0
 4792 0be4 BB6B     	 ldr r3,[r7,#56]
 4793 0be6 1A60     	 str r2,[r3]
1763:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 if (next->next != NULL) {
 4794              	 .loc 1 1763 0
 4795 0be8 BB6B     	 ldr r3,[r7,#56]
 4796 0bea 1B68     	 ldr r3,[r3]
 4797 0bec 002B     	 cmp r3,#0
 4798 0bee 00F09080 	 beq .L275
1764:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   if (TCP_SEQ_GT(next->tcphdr->seqno + next->len, seqno)) {
 4799              	 .loc 1 1764 0
 4800 0bf2 BB6B     	 ldr r3,[r7,#56]
 4801 0bf4 DB68     	 ldr r3,[r3,#12]
 4802 0bf6 5B68     	 ldr r3,[r3,#4]
 4803 0bf8 BA6B     	 ldr r2,[r7,#56]
 4804 0bfa 1289     	 ldrh r2,[r2,#8]
 4805 0bfc 1A44     	 add r2,r2,r3
 4806 0bfe 5C4B     	 ldr r3,.L294+4
 4807 0c00 1B68     	 ldr r3,[r3]
 4808 0c02 D31A     	 subs r3,r2,r3
 4809 0c04 002B     	 cmp r3,#0
 4810 0c06 12DD     	 ble .L276
1765:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     /* We need to trim the last segment. */
1766:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     next->len = (u16_t)(seqno - next->tcphdr->seqno);
 4811              	 .loc 1 1766 0
 4812 0c08 594B     	 ldr r3,.L294+4
 4813 0c0a 1B68     	 ldr r3,[r3]
 4814 0c0c 9AB2     	 uxth r2,r3
 4815 0c0e BB6B     	 ldr r3,[r7,#56]
 4816 0c10 DB68     	 ldr r3,[r3,#12]
 4817 0c12 5B68     	 ldr r3,[r3,#4]
 4818 0c14 9BB2     	 uxth r3,r3
 4819 0c16 D31A     	 subs r3,r2,r3
 4820 0c18 9AB2     	 uxth r2,r3
 4821 0c1a BB6B     	 ldr r3,[r7,#56]
 4822 0c1c 1A81     	 strh r2,[r3,#8]
1767:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     pbuf_realloc(next->p, next->len);
 4823              	 .loc 1 1767 0
 4824 0c1e BB6B     	 ldr r3,[r7,#56]
 4825 0c20 5A68     	 ldr r2,[r3,#4]
 4826 0c22 BB6B     	 ldr r3,[r7,#56]
 4827 0c24 1B89     	 ldrh r3,[r3,#8]
 4828 0c26 1046     	 mov r0,r2
 4829 0c28 1946     	 mov r1,r3
 4830 0c2a FFF7FEFF 	 bl pbuf_realloc
 4831              	.L276:
1768:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   }
1769:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   /* check if the remote side overruns our receive window */
1770:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   if (TCP_SEQ_GT((u32_t)tcplen + seqno, pcb->rcv_nxt + (u32_t)pcb->rcv_wnd)) {
 4832              	 .loc 1 1770 0
 4833 0c2e 514B     	 ldr r3,.L294+8
 4834 0c30 1B88     	 ldrh r3,[r3]
 4835 0c32 1A46     	 mov r2,r3
 4836 0c34 4E4B     	 ldr r3,.L294+4
 4837 0c36 1B68     	 ldr r3,[r3]
 4838 0c38 1A44     	 add r2,r2,r3
 4839 0c3a 7B68     	 ldr r3,[r7,#4]
 4840 0c3c 5B6A     	 ldr r3,[r3,#36]
 4841 0c3e 7968     	 ldr r1,[r7,#4]
 4842 0c40 098D     	 ldrh r1,[r1,#40]
 4843 0c42 0B44     	 add r3,r3,r1
 4844 0c44 D31A     	 subs r3,r2,r3
 4845 0c46 002B     	 cmp r3,#0
 4846 0c48 63DD     	 ble .L275
1771:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     LWIP_DEBUGF(TCP_INPUT_DEBUG,
1772:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                 ("tcp_receive: other end overran receive window"
1773:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                  "seqno %"U32_F" len %"U16_F" right edge %"U32_F"\n",
1774:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                  seqno, tcplen, pcb->rcv_nxt + pcb->rcv_wnd));
1775:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     if (TCPH_FLAGS(next->next->tcphdr) & TCP_FIN) {
 4847              	 .loc 1 1775 0
 4848 0c4a BB6B     	 ldr r3,[r7,#56]
 4849 0c4c 1B68     	 ldr r3,[r3]
 4850 0c4e DB68     	 ldr r3,[r3,#12]
 4851 0c50 9B89     	 ldrh r3,[r3,#12]
 4852 0c52 9BB2     	 uxth r3,r3
 4853 0c54 1846     	 mov r0,r3
 4854 0c56 FFF7FEFF 	 bl lwip_htons
 4855 0c5a 0346     	 mov r3,r0
 4856 0c5c DBB2     	 uxtb r3,r3
 4857 0c5e 03F00103 	 and r3,r3,#1
 4858 0c62 002B     	 cmp r3,#0
 4859 0c64 23D0     	 beq .L277
1776:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                       /* Must remove the FIN from the header as we're trimming
1777:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                        * that byte of sequence-space from the packet */
1778:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                       TCPH_FLAGS_SET(next->next->tcphdr, TCPH_FLAGS(next->next->tcphdr) & ~TCP_FIN)
 4860              	 .loc 1 1778 0
 4861 0c66 BB6B     	 ldr r3,[r7,#56]
 4862 0c68 1B68     	 ldr r3,[r3]
 4863 0c6a DC68     	 ldr r4,[r3,#12]
 4864 0c6c BB6B     	 ldr r3,[r7,#56]
 4865 0c6e 1B68     	 ldr r3,[r3]
 4866 0c70 DB68     	 ldr r3,[r3,#12]
 4867 0c72 9B89     	 ldrh r3,[r3,#12]
 4868 0c74 9BB2     	 uxth r3,r3
 4869 0c76 9BB2     	 uxth r3,r3
 4870 0c78 23F47C53 	 bic r3,r3,#16128
 4871 0c7c 9DB2     	 uxth r5,r3
 4872 0c7e BB6B     	 ldr r3,[r7,#56]
 4873 0c80 1B68     	 ldr r3,[r3]
 4874 0c82 DB68     	 ldr r3,[r3,#12]
 4875 0c84 9B89     	 ldrh r3,[r3,#12]
 4876 0c86 9BB2     	 uxth r3,r3
 4877 0c88 1846     	 mov r0,r3
 4878 0c8a FFF7FEFF 	 bl lwip_htons
 4879 0c8e 0346     	 mov r3,r0
 4880 0c90 DBB2     	 uxtb r3,r3
 4881 0c92 9BB2     	 uxth r3,r3
 4882 0c94 03F03E03 	 and r3,r3,#62
 4883 0c98 9BB2     	 uxth r3,r3
 4884 0c9a 1846     	 mov r0,r3
 4885 0c9c FFF7FEFF 	 bl lwip_htons
 4886 0ca0 0346     	 mov r3,r0
 4887 0ca2 9BB2     	 uxth r3,r3
 4888 0ca4 2A46     	 mov r2,r5
 4889 0ca6 1343     	 orrs r3,r3,r2
 4890 0ca8 9BB2     	 uxth r3,r3
 4891 0caa 9BB2     	 uxth r3,r3
 4892 0cac A381     	 strh r3,[r4,#12]
 4893              	.L277:
1779:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     }
1780:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     /* Adjust length of segment to fit in the window. */
1781:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     next->next->len = (u16_t)(pcb->rcv_nxt + pcb->rcv_wnd - seqno);
 4894              	 .loc 1 1781 0
 4895 0cae BB6B     	 ldr r3,[r7,#56]
 4896 0cb0 1B68     	 ldr r3,[r3]
 4897 0cb2 7A68     	 ldr r2,[r7,#4]
 4898 0cb4 526A     	 ldr r2,[r2,#36]
 4899 0cb6 91B2     	 uxth r1,r2
 4900 0cb8 7A68     	 ldr r2,[r7,#4]
 4901 0cba 128D     	 ldrh r2,[r2,#40]
 4902 0cbc 0A44     	 add r2,r2,r1
 4903 0cbe 91B2     	 uxth r1,r2
 4904 0cc0 2B4A     	 ldr r2,.L294+4
 4905 0cc2 1268     	 ldr r2,[r2]
 4906 0cc4 92B2     	 uxth r2,r2
 4907 0cc6 8A1A     	 subs r2,r1,r2
 4908 0cc8 92B2     	 uxth r2,r2
 4909 0cca 1A81     	 strh r2,[r3,#8]
1782:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     pbuf_realloc(next->next->p, next->next->len);
 4910              	 .loc 1 1782 0
 4911 0ccc BB6B     	 ldr r3,[r7,#56]
 4912 0cce 1B68     	 ldr r3,[r3]
 4913 0cd0 5A68     	 ldr r2,[r3,#4]
 4914 0cd2 BB6B     	 ldr r3,[r7,#56]
 4915 0cd4 1B68     	 ldr r3,[r3]
 4916 0cd6 1B89     	 ldrh r3,[r3,#8]
 4917 0cd8 1046     	 mov r0,r2
 4918 0cda 1946     	 mov r1,r3
 4919 0cdc FFF7FEFF 	 bl pbuf_realloc
1783:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     tcplen = TCP_TCPLEN(next->next);
 4920              	 .loc 1 1783 0
 4921 0ce0 BB6B     	 ldr r3,[r7,#56]
 4922 0ce2 1B68     	 ldr r3,[r3]
 4923 0ce4 1C89     	 ldrh r4,[r3,#8]
 4924 0ce6 BB6B     	 ldr r3,[r7,#56]
 4925 0ce8 1B68     	 ldr r3,[r3]
 4926 0cea DB68     	 ldr r3,[r3,#12]
 4927 0cec 9B89     	 ldrh r3,[r3,#12]
 4928 0cee 9BB2     	 uxth r3,r3
 4929 0cf0 1846     	 mov r0,r3
 4930 0cf2 FFF7FEFF 	 bl lwip_htons
 4931 0cf6 0346     	 mov r3,r0
 4932 0cf8 DBB2     	 uxtb r3,r3
 4933 0cfa 03F00303 	 and r3,r3,#3
 4934 0cfe 002B     	 cmp r3,#0
 4935 0d00 01D0     	 beq .L278
 4936              	 .loc 1 1783 0 is_stmt 0 discriminator 1
 4937 0d02 0123     	 movs r3,#1
 4938 0d04 00E0     	 b .L279
 4939              	.L278:
 4940              	 .loc 1 1783 0 discriminator 2
 4941 0d06 0023     	 movs r3,#0
 4942              	.L279:
 4943              	 .loc 1 1783 0 discriminator 4
 4944 0d08 2344     	 add r3,r3,r4
 4945 0d0a 9AB2     	 uxth r2,r3
 4946 0d0c 194B     	 ldr r3,.L294+8
 4947 0d0e 1A80     	 strh r2,[r3]
1784:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                     LWIP_ASSERT("tcp_receive: segment not trimmed correctly to rcv_wnd\n",
1785:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                                 (seqno + tcplen) == (pcb->rcv_nxt + pcb->rcv_wnd));
1786:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                   }
1787:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 }
1788:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 break;
 4948              	 .loc 1 1788 0 is_stmt 1 discriminator 4
 4949 0d10 07E0     	 b .L261
 4950              	.L275:
 4951              	 .loc 1 1788 0 is_stmt 0
 4952 0d12 06E0     	 b .L261
 4953              	.L273:
1677:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (seqno == next->tcphdr->seqno) {
 4954              	 .loc 1 1677 0 is_stmt 1 discriminator 2
 4955 0d14 BB6B     	 ldr r3,[r7,#56]
 4956 0d16 1B68     	 ldr r3,[r3]
 4957 0d18 BB63     	 str r3,[r7,#56]
 4958              	.L262:
1677:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (seqno == next->tcphdr->seqno) {
 4959              	 .loc 1 1677 0 is_stmt 0 discriminator 1
 4960 0d1a BB6B     	 ldr r3,[r7,#56]
 4961 0d1c 002B     	 cmp r3,#0
 4962 0d1e 7FF4BAAE 	 bne .L280
 4963              	.L261:
 4964              	.LBE16:
1789:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               }
1790:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
1791:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
1792:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1793:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_TCP_SACK_OUT
1794:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (pcb->flags & TF_SACK) {
1795:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (prev == NULL) {
1796:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               /* The new segment is at the beginning. sackbeg should already be set properly.
1797:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                  We need to find the right edge. */
1798:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               next = pcb->ooseq;
1799:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             } else if (prev->next != NULL) {
1800:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               /* The new segment was added after 'prev'. If there is a "hole" between 'prev' and 'p
1801:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                  we need to move sackbeg. After that we should find the right edge. */
1802:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               next = prev->next;
1803:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               if (prev->tcphdr->seqno + prev->len != next->tcphdr->seqno) {
1804:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 sackbeg = next->tcphdr->seqno;
1805:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               }
1806:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             } else {
1807:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               next = NULL;
1808:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
1809:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (next != NULL) {
1810:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               u32_t sackend = next->tcphdr->seqno;
1811:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               for ( ; (next != NULL) && (sackend == next->tcphdr->seqno); next = next->next) {
1812:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 sackend += next->len;
1813:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               }
1814:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               tcp_add_sack(pcb, sackbeg, sackend);
1815:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
1816:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
1817:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* LWIP_TCP_SACK_OUT */
1818:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
1819:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if defined(TCP_OOSEQ_BYTES_LIMIT) || defined(TCP_OOSEQ_PBUFS_LIMIT)
1820:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         {
1821:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* Check that the data on ooseq doesn't exceed one of the limits
1822:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              and throw away everything above that limit. */
1823:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #ifdef TCP_OOSEQ_BYTES_LIMIT
1824:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           const u32_t ooseq_max_blen = TCP_OOSEQ_BYTES_LIMIT(pcb);
1825:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           u32_t ooseq_blen = 0;
1826:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif
1827:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #ifdef TCP_OOSEQ_PBUFS_LIMIT
1828:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           const u16_t ooseq_max_qlen = TCP_OOSEQ_PBUFS_LIMIT(pcb);
1829:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           u16_t ooseq_qlen = 0;
1830:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif
1831:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           struct tcp_seg *next, *prev = NULL;
1832:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           for (next = pcb->ooseq; next != NULL; prev = next, next = next->next) {
1833:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             struct pbuf *p = next->p;
1834:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             int stop_here = 0;
1835:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #ifdef TCP_OOSEQ_BYTES_LIMIT
1836:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             ooseq_blen += p->tot_len;
1837:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (ooseq_blen > ooseq_max_blen) {
1838:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               stop_here = 1;
1839:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
1840:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif
1841:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #ifdef TCP_OOSEQ_PBUFS_LIMIT
1842:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             ooseq_qlen += pbuf_clen(p);
1843:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (ooseq_qlen > ooseq_max_qlen) {
1844:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               stop_here = 1;
1845:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
1846:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif
1847:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (stop_here) {
1848:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_TCP_SACK_OUT
1849:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               if (pcb->flags & TF_SACK) {
1850:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 /* Let's remove all SACKs from next's seqno up. */
1851:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 tcp_remove_sacks_gt(pcb, next->tcphdr->seqno);
1852:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               }
1853:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* LWIP_TCP_SACK_OUT */
1854:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               /* too much ooseq data, dump this and everything after it */
1855:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               tcp_segs_free(next);
1856:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               if (prev == NULL) {
1857:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 /* first ooseq segment is too much, dump the whole queue */
1858:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 pcb->ooseq = NULL;
1859:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               } else {
1860:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 /* just dump 'next' and everything after it */
1861:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                 prev->next = NULL;
1862:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               }
1863:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               break;
1864:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
1865:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
1866:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         }
1867:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_OOSEQ_BYTES_LIMIT || TCP_OOSEQ_PBUFS_LIMIT */
1868:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* TCP_QUEUE_OOSEQ */
1869:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1870:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* We send the ACK packet after we've (potentially) dealt with SACKs,
1871:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****            so they can be included in the acknowledgment. */
1872:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         tcp_send_empty_ack(pcb);
 4965              	 .loc 1 1872 0 is_stmt 1
 4966 0d22 7868     	 ldr r0,[r7,#4]
 4967 0d24 FFF7FEFF 	 bl tcp_send_empty_ack
1459:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         /* The incoming segment is the next in sequence. We check if
 4968              	 .loc 1 1459 0
 4969 0d28 03E0     	 b .L281
 4970              	.L221:
1873:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
1874:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     } else {
1875:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       /* The incoming segment is not within the window. */
1876:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       tcp_send_empty_ack(pcb);
 4971              	 .loc 1 1876 0
 4972 0d2a 7868     	 ldr r0,[r7,#4]
 4973 0d2c FFF7FEFF 	 bl tcp_send_empty_ack
1457:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                         pcb->rcv_nxt + pcb->rcv_wnd - 1)) {
 4974              	 .loc 1 1457 0
 4975 0d30 19E0     	 b .L184
 4976              	.L281:
1457:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                         pcb->rcv_nxt + pcb->rcv_wnd - 1)) {
 4977              	 .loc 1 1457 0 is_stmt 0 discriminator 3
 4978 0d32 18E0     	 b .L184
 4979              	.L216:
1877:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
1878:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   } else {
1879:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     /* Segments with length 0 is taken care of here. Segments that
1880:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****        fall out of the window are ACKed. */
1881:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     if (!TCP_SEQ_BETWEEN(seqno, pcb->rcv_nxt, pcb->rcv_nxt + pcb->rcv_wnd - 1)) {
 4980              	 .loc 1 1881 0 is_stmt 1
 4981 0d34 0E4B     	 ldr r3,.L294+4
 4982 0d36 1A68     	 ldr r2,[r3]
 4983 0d38 7B68     	 ldr r3,[r7,#4]
 4984 0d3a 5B6A     	 ldr r3,[r3,#36]
 4985 0d3c D31A     	 subs r3,r2,r3
 4986 0d3e 002B     	 cmp r3,#0
 4987 0d40 0ADB     	 blt .L283
 4988              	 .loc 1 1881 0 is_stmt 0 discriminator 1
 4989 0d42 0B4B     	 ldr r3,.L294+4
 4990 0d44 1A68     	 ldr r2,[r3]
 4991 0d46 7B68     	 ldr r3,[r7,#4]
 4992 0d48 5B6A     	 ldr r3,[r3,#36]
 4993 0d4a 7968     	 ldr r1,[r7,#4]
 4994 0d4c 098D     	 ldrh r1,[r1,#40]
 4995 0d4e 0B44     	 add r3,r3,r1
 4996 0d50 D31A     	 subs r3,r2,r3
 4997 0d52 0133     	 adds r3,r3,#1
 4998 0d54 002B     	 cmp r3,#0
 4999 0d56 06DD     	 ble .L184
 5000              	.L283:
1882:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       tcp_ack_now(pcb);
 5001              	 .loc 1 1882 0 is_stmt 1
 5002 0d58 7B68     	 ldr r3,[r7,#4]
 5003 0d5a 5B8B     	 ldrh r3,[r3,#26]
 5004 0d5c 43F00203 	 orr r3,r3,#2
 5005 0d60 9AB2     	 uxth r2,r3
 5006 0d62 7B68     	 ldr r3,[r7,#4]
 5007 0d64 5A83     	 strh r2,[r3,#26]
 5008              	.L184:
1883:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
1884:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
1885:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** }
 5009              	 .loc 1 1885 0
 5010 0d66 5037     	 adds r7,r7,#80
 5011              	.LCFI38:
 5012              	 .cfi_def_cfa_offset 16
 5013 0d68 BD46     	 mov sp,r7
 5014              	.LCFI39:
 5015              	 .cfi_def_cfa_register 13
 5016              	 
 5017 0d6a B0BD     	 pop {r4,r5,r7,pc}
 5018              	.L295:
 5019              	 .align 2
 5020              	.L294:
 5021 0d6c 00000000 	 .word inseg
 5022 0d70 00000000 	 .word seqno
 5023 0d74 00000000 	 .word tcplen
 5024              	 .cfi_endproc
 5025              	.LFE140:
 5027              	 .section .text.tcp_get_next_optbyte,"ax",%progbits
 5028              	 .align 2
 5029              	 .thumb
 5030              	 .thumb_func
 5032              	tcp_get_next_optbyte:
 5033              	.LFB141:
1886:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1887:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static u8_t
1888:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** tcp_get_next_optbyte(void)
1889:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** {
 5034              	 .loc 1 1889 0
 5035              	 .cfi_startproc
 5036              	 
 5037              	 
 5038              	 
 5039 0000 80B4     	 push {r7}
 5040              	.LCFI40:
 5041              	 .cfi_def_cfa_offset 4
 5042              	 .cfi_offset 7,-4
 5043 0002 83B0     	 sub sp,sp,#12
 5044              	.LCFI41:
 5045              	 .cfi_def_cfa_offset 16
 5046 0004 00AF     	 add r7,sp,#0
 5047              	.LCFI42:
 5048              	 .cfi_def_cfa_register 7
1890:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   u16_t optidx = tcp_optidx++;
 5049              	 .loc 1 1890 0
 5050 0006 154B     	 ldr r3,.L300
 5051 0008 1B88     	 ldrh r3,[r3]
 5052 000a 5A1C     	 adds r2,r3,#1
 5053 000c 91B2     	 uxth r1,r2
 5054 000e 134A     	 ldr r2,.L300
 5055 0010 1180     	 strh r1,[r2]
 5056 0012 FB80     	 strh r3,[r7,#6]
1891:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if ((tcphdr_opt2 == NULL) || (optidx < tcphdr_opt1len)) {
 5057              	 .loc 1 1891 0
 5058 0014 124B     	 ldr r3,.L300+4
 5059 0016 1B68     	 ldr r3,[r3]
 5060 0018 002B     	 cmp r3,#0
 5061 001a 04D0     	 beq .L297
 5062              	 .loc 1 1891 0 is_stmt 0 discriminator 1
 5063 001c 114B     	 ldr r3,.L300+8
 5064 001e 1B88     	 ldrh r3,[r3]
 5065 0020 FA88     	 ldrh r2,[r7,#6]
 5066 0022 9A42     	 cmp r2,r3
 5067 0024 08D2     	 bcs .L298
 5068              	.L297:
 5069              	.LBB20:
1892:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     u8_t *opts = (u8_t *)tcphdr + TCP_HLEN;
 5070              	 .loc 1 1892 0 is_stmt 1
 5071 0026 104B     	 ldr r3,.L300+12
 5072 0028 1B68     	 ldr r3,[r3]
 5073 002a 1433     	 adds r3,r3,#20
 5074 002c 3B60     	 str r3,[r7]
1893:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     return opts[optidx];
 5075              	 .loc 1 1893 0
 5076 002e FB88     	 ldrh r3,[r7,#6]
 5077 0030 3A68     	 ldr r2,[r7]
 5078 0032 1344     	 add r3,r3,r2
 5079 0034 1B78     	 ldrb r3,[r3]
 5080 0036 0BE0     	 b .L299
 5081              	.L298:
 5082              	.LBE20:
 5083              	.LBB21:
1894:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   } else {
1895:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     u8_t idx = (u8_t)(optidx - tcphdr_opt1len);
 5084              	 .loc 1 1895 0
 5085 0038 FB88     	 ldrh r3,[r7,#6]
 5086 003a DAB2     	 uxtb r2,r3
 5087 003c 094B     	 ldr r3,.L300+8
 5088 003e 1B88     	 ldrh r3,[r3]
 5089 0040 DBB2     	 uxtb r3,r3
 5090 0042 D31A     	 subs r3,r2,r3
 5091 0044 7B71     	 strb r3,[r7,#5]
1896:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     return tcphdr_opt2[idx];
 5092              	 .loc 1 1896 0
 5093 0046 064B     	 ldr r3,.L300+4
 5094 0048 1A68     	 ldr r2,[r3]
 5095 004a 7B79     	 ldrb r3,[r7,#5]
 5096 004c 1344     	 add r3,r3,r2
 5097 004e 1B78     	 ldrb r3,[r3]
 5098              	.L299:
 5099              	.LBE21:
1897:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
1898:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** }
 5100              	 .loc 1 1898 0
 5101 0050 1846     	 mov r0,r3
 5102 0052 0C37     	 adds r7,r7,#12
 5103              	.LCFI43:
 5104              	 .cfi_def_cfa_offset 4
 5105 0054 BD46     	 mov sp,r7
 5106              	.LCFI44:
 5107              	 .cfi_def_cfa_register 13
 5108              	 
 5109 0056 5DF8047B 	 ldr r7,[sp],#4
 5110              	.LCFI45:
 5111              	 .cfi_restore 7
 5112              	 .cfi_def_cfa_offset 0
 5113 005a 7047     	 bx lr
 5114              	.L301:
 5115              	 .align 2
 5116              	.L300:
 5117 005c 00000000 	 .word tcp_optidx
 5118 0060 00000000 	 .word tcphdr_opt2
 5119 0064 00000000 	 .word tcphdr_opt1len
 5120 0068 00000000 	 .word tcphdr
 5121              	 .cfi_endproc
 5122              	.LFE141:
 5124              	 .section .text.tcp_parseopt,"ax",%progbits
 5125              	 .align 2
 5126              	 .thumb
 5127              	 .thumb_func
 5129              	tcp_parseopt:
 5130              	.LFB142:
1899:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1900:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** /**
1901:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * Parses the options contained in the incoming segment.
1902:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
1903:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * Called from tcp_listen_input() and tcp_process().
1904:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * Currently, only the MSS option is supported!
1905:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  *
1906:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  * @param pcb the tcp_pcb for which a segment arrived
1907:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****  */
1908:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** static void
1909:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** tcp_parseopt(struct tcp_pcb *pcb)
1910:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** {
 5131              	 .loc 1 1910 0
 5132              	 .cfi_startproc
 5133              	 
 5134              	 
 5135 0000 80B5     	 push {r7,lr}
 5136              	.LCFI46:
 5137              	 .cfi_def_cfa_offset 8
 5138              	 .cfi_offset 7,-8
 5139              	 .cfi_offset 14,-4
 5140 0002 84B0     	 sub sp,sp,#16
 5141              	.LCFI47:
 5142              	 .cfi_def_cfa_offset 24
 5143 0004 00AF     	 add r7,sp,#0
 5144              	.LCFI48:
 5145              	 .cfi_def_cfa_register 7
 5146 0006 7860     	 str r0,[r7,#4]
1911:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   u8_t data;
1912:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   u16_t mss;
1913:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_TCP_TIMESTAMPS
1914:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   u32_t tsval;
1915:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif
1916:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1917:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   LWIP_ASSERT("tcp_parseopt: invalid pcb", pcb != NULL);
1918:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
1919:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   /* Parse the TCP MSS option, if present. */
1920:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   if (tcphdr_optlen != 0) {
 5147              	 .loc 1 1920 0
 5148 0008 2C4B     	 ldr r3,.L317
 5149 000a 1B88     	 ldrh r3,[r3]
 5150 000c 002B     	 cmp r3,#0
 5151 000e 51D0     	 beq .L302
1921:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     for (tcp_optidx = 0; tcp_optidx < tcphdr_optlen; ) {
 5152              	 .loc 1 1921 0
 5153 0010 2B4B     	 ldr r3,.L317+4
 5154 0012 0022     	 movs r2,#0
 5155 0014 1A80     	 strh r2,[r3]
 5156 0016 45E0     	 b .L304
 5157              	.L314:
 5158              	.LBB22:
1922:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       u8_t opt = tcp_get_next_optbyte();
 5159              	 .loc 1 1922 0
 5160 0018 FFF7FEFF 	 bl tcp_get_next_optbyte
 5161 001c 0346     	 mov r3,r0
 5162 001e FB73     	 strb r3,[r7,#15]
1923:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       switch (opt) {
 5163              	 .loc 1 1923 0
 5164 0020 FB7B     	 ldrb r3,[r7,#15]
 5165 0022 012B     	 cmp r3,#1
 5166 0024 3ED0     	 beq .L304
 5167 0026 022B     	 cmp r3,#2
 5168 0028 02D0     	 beq .L307
 5169 002a 002B     	 cmp r3,#0
 5170 002c 41D0     	 beq .L316
 5171 002e 27E0     	 b .L315
 5172              	.L307:
1924:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         case LWIP_TCP_OPT_EOL:
1925:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* End of options. */
1926:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: EOL\n"));
1927:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           return;
1928:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         case LWIP_TCP_OPT_NOP:
1929:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* NOP option. */
1930:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: NOP\n"));
1931:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           break;
1932:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         case LWIP_TCP_OPT_MSS:
1933:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: MSS\n"));
1934:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (tcp_get_next_optbyte() != LWIP_TCP_OPT_LEN_MSS || (tcp_optidx - 2 + LWIP_TCP_OPT_LEN_
 5173              	 .loc 1 1934 0
 5174 0030 FFF7FEFF 	 bl tcp_get_next_optbyte
 5175 0034 0346     	 mov r3,r0
 5176 0036 042B     	 cmp r3,#4
 5177 0038 06D1     	 bne .L309
 5178              	 .loc 1 1934 0 is_stmt 0 discriminator 1
 5179 003a 214B     	 ldr r3,.L317+4
 5180 003c 1B88     	 ldrh r3,[r3]
 5181 003e 0233     	 adds r3,r3,#2
 5182 0040 1E4A     	 ldr r2,.L317
 5183 0042 1288     	 ldrh r2,[r2]
 5184 0044 9342     	 cmp r3,r2
 5185 0046 00DD     	 ble .L310
 5186              	.L309:
1935:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* Bad length */
1936:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: bad length\n"));
1937:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             return;
 5187              	 .loc 1 1937 0 is_stmt 1 discriminator 2
 5188 0048 34E0     	 b .L302
 5189              	.L310:
1938:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
1939:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* An MSS option with the right option length. */
1940:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           mss = (u16_t)(tcp_get_next_optbyte() << 8);
 5190              	 .loc 1 1940 0
 5191 004a FFF7FEFF 	 bl tcp_get_next_optbyte
 5192 004e 0346     	 mov r3,r0
 5193 0050 9BB2     	 uxth r3,r3
 5194 0052 1B02     	 lsls r3,r3,#8
 5195 0054 BB81     	 strh r3,[r7,#12]
1941:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           mss |= tcp_get_next_optbyte();
 5196              	 .loc 1 1941 0
 5197 0056 FFF7FEFF 	 bl tcp_get_next_optbyte
 5198 005a 0346     	 mov r3,r0
 5199 005c 9AB2     	 uxth r2,r3
 5200 005e BB89     	 ldrh r3,[r7,#12]
 5201 0060 1343     	 orrs r3,r3,r2
 5202 0062 BB81     	 strh r3,[r7,#12]
1942:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* Limit the mss to the configured TCP_MSS and prevent division by zero */
1943:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           pcb->mss = ((mss > TCP_MSS) || (mss == 0)) ? TCP_MSS : mss;
 5203              	 .loc 1 1943 0
 5204 0064 BB89     	 ldrh r3,[r7,#12]
 5205 0066 B3F5067F 	 cmp r3,#536
 5206 006a 04D8     	 bhi .L311
 5207              	 .loc 1 1943 0 is_stmt 0 discriminator 1
 5208 006c BB89     	 ldrh r3,[r7,#12]
 5209 006e 002B     	 cmp r3,#0
 5210 0070 01D0     	 beq .L311
 5211              	 .loc 1 1943 0 discriminator 3
 5212 0072 BA89     	 ldrh r2,[r7,#12]
 5213 0074 01E0     	 b .L312
 5214              	.L311:
 5215              	 .loc 1 1943 0 discriminator 4
 5216 0076 4FF40672 	 mov r2,#536
 5217              	.L312:
 5218              	 .loc 1 1943 0 discriminator 6
 5219 007a 7B68     	 ldr r3,[r7,#4]
 5220 007c 5A86     	 strh r2,[r3,#50]
1944:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           break;
 5221              	 .loc 1 1944 0 is_stmt 1 discriminator 6
 5222 007e 11E0     	 b .L304
 5223              	.L315:
1945:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_WND_SCALE
1946:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         case LWIP_TCP_OPT_WS:
1947:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: WND_SCALE\n"));
1948:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (tcp_get_next_optbyte() != LWIP_TCP_OPT_LEN_WS || (tcp_optidx - 2 + LWIP_TCP_OPT_LEN_W
1949:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* Bad length */
1950:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: bad length\n"));
1951:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             return;
1952:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
1953:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* An WND_SCALE option with the right option length. */
1954:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           data = tcp_get_next_optbyte();
1955:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* If syn was received with wnd scale option,
1956:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              activate wnd scale opt, but only if this is not a retransmission */
1957:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if ((flags & TCP_SYN) && !(pcb->flags & TF_WND_SCALE)) {
1958:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             pcb->snd_scale = data;
1959:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             if (pcb->snd_scale > 14U) {
1960:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****               pcb->snd_scale = 14U;
1961:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             }
1962:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             pcb->rcv_scale = TCP_RCV_SCALE;
1963:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             tcp_set_flags(pcb, TF_WND_SCALE);
1964:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* window scaling is enabled, we can use the full receive window */
1965:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             LWIP_ASSERT("window not at default value", pcb->rcv_wnd == TCPWND_MIN16(TCP_WND));
1966:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             LWIP_ASSERT("window not at default value", pcb->rcv_ann_wnd == TCPWND_MIN16(TCP_WND));
1967:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             pcb->rcv_wnd = pcb->rcv_ann_wnd = TCP_WND;
1968:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
1969:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           break;
1970:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* LWIP_WND_SCALE */
1971:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_TCP_TIMESTAMPS
1972:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         case LWIP_TCP_OPT_TS:
1973:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: TS\n"));
1974:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (tcp_get_next_optbyte() != LWIP_TCP_OPT_LEN_TS || (tcp_optidx - 2 + LWIP_TCP_OPT_LEN_T
1975:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* Bad length */
1976:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: bad length\n"));
1977:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             return;
1978:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
1979:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* TCP timestamp option with valid length */
1980:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tsval = tcp_get_next_optbyte();
1981:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tsval |= (tcp_get_next_optbyte() << 8);
1982:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tsval |= (tcp_get_next_optbyte() << 16);
1983:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tsval |= (tcp_get_next_optbyte() << 24);
1984:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (flags & TCP_SYN) {
1985:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             pcb->ts_recent = lwip_ntohl(tsval);
1986:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* Enable sending timestamps in every segment now that we know
1987:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                the remote host supports it. */
1988:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             tcp_set_flags(pcb, TF_TIMESTAMP);
1989:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           } else if (TCP_SEQ_BETWEEN(pcb->ts_lastacksent, seqno, seqno + tcplen)) {
1990:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             pcb->ts_recent = lwip_ntohl(tsval);
1991:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
1992:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* Advance to next option (6 bytes already read) */
1993:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tcp_optidx += LWIP_TCP_OPT_LEN_TS - 6;
1994:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           break;
1995:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* LWIP_TCP_TIMESTAMPS */
1996:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #if LWIP_TCP_SACK_OUT
1997:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         case LWIP_TCP_OPT_SACK_PERM:
1998:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: SACK_PERM\n"));
1999:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (tcp_get_next_optbyte() != LWIP_TCP_OPT_LEN_SACK_PERM || (tcp_optidx - 2 + LWIP_TCP_OP
2000:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* Bad length */
2001:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: bad length\n"));
2002:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             return;
2003:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
2004:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* TCP SACK_PERM option with valid length */
2005:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (flags & TCP_SYN) {
2006:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* We only set it if we receive it in a SYN (or SYN+ACK) packet */
2007:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             tcp_set_flags(pcb, TF_SACK);
2008:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
2009:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           break;
2010:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** #endif /* LWIP_TCP_SACK_OUT */
2011:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         default:
2012:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: other\n"));
2013:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           data = tcp_get_next_optbyte();
 5224              	 .loc 1 2013 0
 5225 0080 FFF7FEFF 	 bl tcp_get_next_optbyte
 5226 0084 0346     	 mov r3,r0
 5227 0086 FB72     	 strb r3,[r7,#11]
2014:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           if (data < 2) {
 5228              	 .loc 1 2014 0
 5229 0088 FB7A     	 ldrb r3,[r7,#11]
 5230 008a 012B     	 cmp r3,#1
 5231 008c 00D8     	 bhi .L313
2015:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             LWIP_DEBUGF(TCP_INPUT_DEBUG, ("tcp_parseopt: bad length\n"));
2016:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             /* If the length field is zero, the options are malformed
2017:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****                and we don't process them further. */
2018:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****             return;
 5232              	 .loc 1 2018 0 discriminator 3
 5233 008e 11E0     	 b .L302
 5234              	.L313:
2019:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           }
2020:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           /* All other options have a length field, so that we easily
2021:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****              can skip past them. */
2022:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****           tcp_optidx += data - 2;
 5235              	 .loc 1 2022 0
 5236 0090 FB7A     	 ldrb r3,[r7,#11]
 5237 0092 9AB2     	 uxth r2,r3
 5238 0094 0A4B     	 ldr r3,.L317+4
 5239 0096 1B88     	 ldrh r3,[r3]
 5240 0098 1344     	 add r3,r3,r2
 5241 009a 9BB2     	 uxth r3,r3
 5242 009c 023B     	 subs r3,r3,#2
 5243 009e 9AB2     	 uxth r2,r3
 5244 00a0 074B     	 ldr r3,.L317+4
 5245 00a2 1A80     	 strh r2,[r3]
 5246              	.L304:
 5247              	.LBE22:
1921:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       u8_t opt = tcp_get_next_optbyte();
 5248              	 .loc 1 1921 0 discriminator 1
 5249 00a4 064B     	 ldr r3,.L317+4
 5250 00a6 1A88     	 ldrh r2,[r3]
 5251 00a8 044B     	 ldr r3,.L317
 5252 00aa 1B88     	 ldrh r3,[r3]
 5253 00ac 9A42     	 cmp r2,r3
 5254 00ae B3D3     	 bcc .L314
 5255 00b0 00E0     	 b .L302
 5256              	.L316:
 5257              	.LBB23:
1927:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****         case LWIP_TCP_OPT_NOP:
 5258              	 .loc 1 1927 0
 5259 00b2 00BF     	 nop
 5260              	.L302:
 5261              	.LBE23:
2023:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****       }
2024:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****     }
2025:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   }
2026:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** }
 5262              	 .loc 1 2026 0
 5263 00b4 1037     	 adds r7,r7,#16
 5264              	.LCFI49:
 5265              	 .cfi_def_cfa_offset 8
 5266 00b6 BD46     	 mov sp,r7
 5267              	.LCFI50:
 5268              	 .cfi_def_cfa_register 13
 5269              	 
 5270 00b8 80BD     	 pop {r7,pc}
 5271              	.L318:
 5272 00ba 00BF     	 .align 2
 5273              	.L317:
 5274 00bc 00000000 	 .word tcphdr_optlen
 5275 00c0 00000000 	 .word tcp_optidx
 5276              	 .cfi_endproc
 5277              	.LFE142:
 5279              	 .section .text.tcp_trigger_input_pcb_close,"ax",%progbits
 5280              	 .align 2
 5281              	 .global tcp_trigger_input_pcb_close
 5282              	 .thumb
 5283              	 .thumb_func
 5285              	tcp_trigger_input_pcb_close:
 5286              	.LFB143:
2027:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** 
2028:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** void
2029:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** tcp_trigger_input_pcb_close(void)
2030:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** {
 5287              	 .loc 1 2030 0
 5288              	 .cfi_startproc
 5289              	 
 5290              	 
 5291              	 
 5292 0000 80B4     	 push {r7}
 5293              	.LCFI51:
 5294              	 .cfi_def_cfa_offset 4
 5295              	 .cfi_offset 7,-4
 5296 0002 00AF     	 add r7,sp,#0
 5297              	.LCFI52:
 5298              	 .cfi_def_cfa_register 7
2031:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c ****   recv_flags |= TF_CLOSED;
 5299              	 .loc 1 2031 0
 5300 0004 054B     	 ldr r3,.L320
 5301 0006 1B78     	 ldrb r3,[r3]
 5302 0008 43F01003 	 orr r3,r3,#16
 5303 000c DAB2     	 uxtb r2,r3
 5304 000e 034B     	 ldr r3,.L320
 5305 0010 1A70     	 strb r2,[r3]
2032:../Dave/Generated/ETH_LWIP/lwip/core/tcp_in.c **** }
 5306              	 .loc 1 2032 0
 5307 0012 BD46     	 mov sp,r7
 5308              	.LCFI53:
 5309              	 .cfi_def_cfa_register 13
 5310              	 
 5311 0014 5DF8047B 	 ldr r7,[sp],#4
 5312              	.LCFI54:
 5313              	 .cfi_restore 7
 5314              	 .cfi_def_cfa_offset 0
 5315 0018 7047     	 bx lr
 5316              	.L321:
 5317 001a 00BF     	 .align 2
 5318              	.L320:
 5319 001c 00000000 	 .word recv_flags
 5320              	 .cfi_endproc
 5321              	.LFE143:
 5323              	 .text
 5324              	.Letext0:
 5325              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5326              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5327              	 .file 4 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/ScpiRelax/Dave/Generated/ETH_LWIP/lwip/include/lwip/arch.h"
 5328              	 .file 5 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/ScpiRelax/Dave/Generated/ETH_LWIP/lwip/include/lwip/tcpbase.h"
 5329              	 .file 6 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/ScpiRelax/Dave/Generated/ETH_LWIP/lwip/include/lwip/err.h"
 5330              	 .file 7 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/ScpiRelax/Dave/Generated/ETH_LWIP/lwip/include/lwip/pbuf.h"
 5331              	 .file 8 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/ScpiRelax/Dave/Generated/ETH_LWIP/lwip/include/lwip/ip4_addr.h"
 5332              	 .file 9 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/ScpiRelax/Dave/Generated/ETH_LWIP/lwip/include/lwip/ip_addr.h"
 5333              	 .file 10 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/ScpiRelax/Dave/Generated/ETH_LWIP/lwip/include/lwip/memp.h"
 5334              	 .file 11 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/ScpiRelax/Dave/Generated/ETH_LWIP/lwip/include/lwip/netif.h"
 5335              	 .file 12 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/ScpiRelax/Dave/Generated/ETH_LWIP/lwip/include/lwip/prot/ip4.h"
 5336              	 .file 13 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/ScpiRelax/Dave/Generated/ETH_LWIP/lwip/include/lwip/ip.h"
 5337              	 .file 14 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/ScpiRelax/Dave/Generated/ETH_LWIP/lwip/include/lwip/tcp.h"
 5338              	 .file 15 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/ScpiRelax/Dave/Generated/ETH_LWIP/lwip/include/lwip/priv/tcp_priv.h"
 5339              	 .file 16 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/ScpiRelax/Dave/Generated/ETH_LWIP/lwip/include/lwip/prot/tcp.h"
 5340              	 .file 17 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/ScpiRelax/Libraries/CMSIS/Include/cmsis_gcc.h"
 5341              	 .file 18 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/ScpiRelax/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 tcp_in.c
    {standard input}:20     .bss.inseg:00000000 $d
    {standard input}:23     .bss.inseg:00000000 inseg
    {standard input}:26     .bss.tcphdr:00000000 $d
    {standard input}:29     .bss.tcphdr:00000000 tcphdr
    {standard input}:32     .bss.tcphdr_optlen:00000000 $d
    {standard input}:35     .bss.tcphdr_optlen:00000000 tcphdr_optlen
    {standard input}:38     .bss.tcphdr_opt1len:00000000 $d
    {standard input}:41     .bss.tcphdr_opt1len:00000000 tcphdr_opt1len
    {standard input}:44     .bss.tcphdr_opt2:00000000 $d
    {standard input}:47     .bss.tcphdr_opt2:00000000 tcphdr_opt2
    {standard input}:50     .bss.tcp_optidx:00000000 $d
    {standard input}:53     .bss.tcp_optidx:00000000 tcp_optidx
    {standard input}:56     .bss.seqno:00000000 $d
    {standard input}:59     .bss.seqno:00000000 seqno
    {standard input}:62     .bss.ackno:00000000 $d
    {standard input}:65     .bss.ackno:00000000 ackno
    {standard input}:68     .bss.recv_acked:00000000 $d
    {standard input}:71     .bss.recv_acked:00000000 recv_acked
    {standard input}:74     .bss.tcplen:00000000 $d
    {standard input}:77     .bss.tcplen:00000000 tcplen
    {standard input}:82     .bss.flags:00000000 flags
    {standard input}:83     .bss.flags:00000000 $d
    {standard input}:87     .bss.recv_flags:00000000 recv_flags
    {standard input}:88     .bss.recv_flags:00000000 $d
    {standard input}:90     .bss.recv_data:00000000 $d
    {standard input}:93     .bss.recv_data:00000000 recv_data
                            *COM*:00000004 tcp_input_pcb
    {standard input}:97     .text.tcp_input:00000000 $t
    {standard input}:102    .text.tcp_input:00000000 tcp_input
    {standard input}:479    .text.tcp_input:00000264 $d
    {standard input}:492    .text.tcp_input:00000290 $t
    {standard input}:1528   .text.tcp_timewait_input:00000000 tcp_timewait_input
    {standard input}:1211   .text.tcp_listen_input:00000000 tcp_listen_input
    {standard input}:1674   .text.tcp_process:00000000 tcp_process
    {standard input}:1130   .text.tcp_input_delayed_close:00000000 tcp_input_delayed_close
    {standard input}:876    .text.tcp_input:000004f4 $d
    {standard input}:889    .text.tcp_input:00000520 $t
    {standard input}:1112   .text.tcp_input:00000690 $d
    {standard input}:1126   .text.tcp_input_delayed_close:00000000 $t
    {standard input}:1201   .text.tcp_input_delayed_close:00000058 $d
    {standard input}:1207   .text.tcp_listen_input:00000000 $t
    {standard input}:5129   .text.tcp_parseopt:00000000 tcp_parseopt
    {standard input}:1510   .text.tcp_listen_input:000001dc $d
    {standard input}:1524   .text.tcp_timewait_input:00000000 $t
    {standard input}:1658   .text.tcp_timewait_input:000000b4 $d
    {standard input}:1670   .text.tcp_process:00000000 $t
    {standard input}:1848   .text.tcp_process:0000010c $d
    {standard input}:1856   .text.tcp_process:0000012c $t
    {standard input}:2061   .text.tcp_process:00000298 $d
    {standard input}:2069   .text.tcp_process:000002b0 $t
    {standard input}:3084   .text.tcp_receive:00000000 tcp_receive
    {standard input}:2444   .text.tcp_process:00000524 $d
    {standard input}:2456   .text.tcp_process:0000054c $t
    {standard input}:2768   .text.tcp_process:00000724 $d
    {standard input}:2778   .text.tcp_oos_insert_segment:00000000 $t
    {standard input}:2782   .text.tcp_oos_insert_segment:00000000 tcp_oos_insert_segment
    {standard input}:2940   .text.tcp_oos_insert_segment:000000ec $d
    {standard input}:2945   .text.tcp_free_acked_segments:00000000 $t
    {standard input}:2949   .text.tcp_free_acked_segments:00000000 tcp_free_acked_segments
    {standard input}:3067   .text.tcp_free_acked_segments:000000a4 $d
    {standard input}:3073   .rodata:00000000 $d
    {standard input}:3080   .text.tcp_receive:00000000 $t
    {standard input}:3448   .text.tcp_receive:0000028c $d
    {standard input}:3455   .text.tcp_receive:000002a0 $t
    {standard input}:3865   .text.tcp_receive:00000598 $d
    {standard input}:3875   .text.tcp_receive:000005b8 $t
    {standard input}:4163   .text.tcp_receive:000007c8 $d
    {standard input}:4168   .text.tcp_receive:000007d4 $t
    {standard input}:4547   .text.tcp_receive:00000a50 $d
    {standard input}:4554   .text.tcp_receive:00000a64 $t
    {standard input}:4785   .text.tcp_receive:00000bd4 $d
    {standard input}:4789   .text.tcp_receive:00000bdc $t
    {standard input}:5021   .text.tcp_receive:00000d6c $d
    {standard input}:5028   .text.tcp_get_next_optbyte:00000000 $t
    {standard input}:5032   .text.tcp_get_next_optbyte:00000000 tcp_get_next_optbyte
    {standard input}:5117   .text.tcp_get_next_optbyte:0000005c $d
    {standard input}:5125   .text.tcp_parseopt:00000000 $t
    {standard input}:5274   .text.tcp_parseopt:000000bc $d
    {standard input}:5280   .text.tcp_trigger_input_pcb_close:00000000 $t
    {standard input}:5285   .text.tcp_trigger_input_pcb_close:00000000 tcp_trigger_input_pcb_close
    {standard input}:5319   .text.tcp_trigger_input_pcb_close:0000001c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ip4_addr_isbroadcast_u32
lwip_htons
pbuf_remove_header
lwip_htonl
ip_data
tcp_active_pcbs
tcp_tw_pcbs
pbuf_free
tcp_process_refused_data
tcp_send_empty_ack
tcp_pcb_remove
tcp_free
tcp_abort
tcp_listen_pcbs
tcp_recv_null
tcp_output
tcp_rst
tcp_alloc
tcp_next_iss
tcp_timer_needed
ip4_route
tcp_eff_send_mss_netif
tcp_enqueue_flags
tcp_abandon
tcp_active_pcbs_changed
tcp_ticks
tcp_seg_free
tcp_rexmit_rto
tcp_backlog_accepted
tcp_rexmit
tcp_pcb_purge
tcp_segs_free
pbuf_realloc
pbuf_clen
tcp_rexmit_fast
tcp_update_rcv_ann_wnd
pbuf_cat
tcp_seg_copy
