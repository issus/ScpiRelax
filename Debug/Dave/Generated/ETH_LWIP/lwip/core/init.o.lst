   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "init.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.lwip_init,"ax",%progbits
  20              	 .align 2
  21              	 .global lwip_init
  22              	 .thumb
  23              	 .thumb_func
  25              	lwip_init:
  26              	.LFB133:
  27              	 .file 1 "../Dave/Generated/ETH_LWIP/lwip/core/init.c"
   1:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** /**
   2:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * @file
   3:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * Modules initialization
   4:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  *
   5:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  */
   6:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
   7:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** /*
   8:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
   9:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * All rights reserved.
  10:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  *
  11:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * Redistribution and use in source and binary forms, with or without modification,
  12:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * are permitted provided that the following conditions are met:
  13:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  *
  14:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  15:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  *    this list of conditions and the following disclaimer.
  16:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  *    and/or other materials provided with the distribution.
  19:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * 3. The name of the author may not be used to endorse or promote products
  20:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  *    derived from this software without specific prior written permission.
  21:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  *
  22:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
  23:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  24:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
  25:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  26:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
  27:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
  30:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  31:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * OF SUCH DAMAGE.
  32:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  *
  33:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * This file is part of the lwIP TCP/IP stack.
  34:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  *
  35:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * Author: Adam Dunkels <adam@sics.se>
  36:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  */
  37:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
  38:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/opt.h"
  39:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
  40:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/init.h"
  41:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/stats.h"
  42:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/sys.h"
  43:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/mem.h"
  44:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/memp.h"
  45:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/pbuf.h"
  46:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/netif.h"
  47:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/sockets.h"
  48:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/ip.h"
  49:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/raw.h"
  50:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/udp.h"
  51:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/priv/tcp_priv.h"
  52:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/igmp.h"
  53:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/dns.h"
  54:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/timeouts.h"
  55:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/etharp.h"
  56:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/ip6.h"
  57:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/nd6.h"
  58:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/mld6.h"
  59:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/lwip/api.h"
  60:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
  61:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/netif/ppp/ppp_opts.h"
  62:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "ETH_LWIP/lwip/include/netif/ppp/ppp_impl.h"
  63:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
  64:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifndef LWIP_SKIP_PACKING_CHECK
  65:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
  66:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifdef PACK_STRUCT_USE_INCLUDES
  67:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #  include "arch/bpstruct.h"
  68:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
  69:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** PACK_STRUCT_BEGIN
  70:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** struct packed_struct_test {
  71:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   PACK_STRUCT_FLD_8(u8_t  dummy1);
  72:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   PACK_STRUCT_FIELD(u32_t dummy2);
  73:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** } PACK_STRUCT_STRUCT;
  74:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** PACK_STRUCT_END
  75:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifdef PACK_STRUCT_USE_INCLUDES
  76:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #  include "arch/epstruct.h"
  77:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
  78:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #define PACKED_STRUCT_TEST_EXPECTED_SIZE 5
  79:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
  80:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
  81:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
  82:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** /* Compile-time sanity checks for configuration errors.
  83:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * These can be done independently of LWIP_DEBUG, without penalty.
  84:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  */
  85:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifndef BYTE_ORDER
  86:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "BYTE_ORDER is not defined, you have to define it in your cc.h"
  87:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
  88:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (!IP_SOF_BROADCAST && IP_SOF_BROADCAST_RECV)
  89:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use broadcast filter per pcb on recv operations, you have to define IP_SOF_B
  90:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
  91:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (!LWIP_UDP && LWIP_UDPLITE)
  92:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use UDP Lite, you have to define LWIP_UDP=1 in your lwipopts.h"
  93:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
  94:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (!LWIP_UDP && LWIP_DHCP)
  95:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use DHCP, you have to define LWIP_UDP=1 in your lwipopts.h"
  96:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
  97:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (!LWIP_UDP && !LWIP_RAW && LWIP_MULTICAST_TX_OPTIONS)
  98:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use LWIP_MULTICAST_TX_OPTIONS, you have to define LWIP_UDP=1 and/or LWIP_RAW
  99:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 100:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (!LWIP_UDP && LWIP_DNS)
 101:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use DNS, you have to define LWIP_UDP=1 in your lwipopts.h"
 102:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 103:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if !MEMP_MEM_MALLOC /* MEMP_NUM_* checks are disabled when not using the pool allocator */
 104:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_ARP && ARP_QUEUEING && (MEMP_NUM_ARP_QUEUE<=0))
 105:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use ARP Queueing, you have to define MEMP_NUM_ARP_QUEUE>=1 in your lwipopts.
 106:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 107:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_RAW && (MEMP_NUM_RAW_PCB<=0))
 108:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use RAW, you have to define MEMP_NUM_RAW_PCB>=1 in your lwipopts.h"
 109:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 110:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_UDP && (MEMP_NUM_UDP_PCB<=0))
 111:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use UDP, you have to define MEMP_NUM_UDP_PCB>=1 in your lwipopts.h"
 112:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 113:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && (MEMP_NUM_TCP_PCB<=0))
 114:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use TCP, you have to define MEMP_NUM_TCP_PCB>=1 in your lwipopts.h"
 115:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 116:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_IGMP && (MEMP_NUM_IGMP_GROUP<=1))
 117:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use IGMP, you have to define MEMP_NUM_IGMP_GROUP>1 in your lwipopts.h"
 118:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 119:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_IGMP && !LWIP_MULTICAST_TX_OPTIONS)
 120:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use IGMP, you have to define LWIP_MULTICAST_TX_OPTIONS==1 in your lwipopts.h
 121:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 122:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_IGMP && !LWIP_IPV4)
 123:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "IGMP needs LWIP_IPV4 enabled in your lwipopts.h"
 124:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 125:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if ((LWIP_NETCONN || LWIP_SOCKET) && (MEMP_NUM_TCPIP_MSG_API<=0))
 126:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use Sequential API, you have to define MEMP_NUM_TCPIP_MSG_API>=1 in your lwi
 127:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 128:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** /* There must be sufficient timeouts, taking into account requirements of the subsystems. */
 129:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_TIMERS && (MEMP_NUM_SYS_TIMEOUT < LWIP_NUM_SYS_TIMEOUT_INTERNAL)
 130:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "MEMP_NUM_SYS_TIMEOUT is too low to accomodate all required timeouts"
 131:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 132:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (IP_REASSEMBLY && (MEMP_NUM_REASSDATA > IP_REASS_MAX_PBUFS))
 133:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "MEMP_NUM_REASSDATA > IP_REASS_MAX_PBUFS doesn't make sense since each struct ip_reassdata m
 134:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 135:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* !MEMP_MEM_MALLOC */
 136:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_WND_SCALE
 137:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && (TCP_WND > 0xffffffff))
 138:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use TCP, TCP_WND must fit in an u32_t, so, you have to reduce it in your lwi
 139:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 140:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && (TCP_RCV_SCALE > 14))
 141:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "The maximum valid window scale value is 14!"
 142:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 143:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && (TCP_WND > (0xFFFFU << TCP_RCV_SCALE)))
 144:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "TCP_WND is bigger than the configured LWIP_WND_SCALE allows!"
 145:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 146:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && ((TCP_WND >> TCP_RCV_SCALE) == 0))
 147:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "TCP_WND is too small for the configured LWIP_WND_SCALE (results in zero window)!"
 148:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 149:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #else /* LWIP_WND_SCALE */
 150:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && (TCP_WND > 0xffff))
 151:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use TCP, TCP_WND must fit in an u16_t, so, you have to reduce it in your lwi
 152:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 153:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_WND_SCALE */
 154:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && (TCP_SND_QUEUELEN > 0xffff))
 155:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use TCP, TCP_SND_QUEUELEN must fit in an u16_t, so, you have to reduce it in
 156:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 157:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && (TCP_SND_QUEUELEN < 2))
 158:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "TCP_SND_QUEUELEN must be at least 2 for no-copy TCP writes to work"
 159:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 160:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && ((TCP_MAXRTX > 12) || (TCP_SYNMAXRTX > 12)))
 161:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use TCP, TCP_MAXRTX and TCP_SYNMAXRTX must less or equal to 12 (due to tcp_b
 162:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 163:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && TCP_LISTEN_BACKLOG && ((TCP_DEFAULT_LISTEN_BACKLOG < 0) || (TCP_DEFAULT_LISTEN_BAC
 164:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use TCP backlog, TCP_DEFAULT_LISTEN_BACKLOG must fit into an u8_t"
 165:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 166:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && LWIP_TCP_SACK_OUT && !TCP_QUEUE_OOSEQ)
 167:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "To use LWIP_TCP_SACK_OUT, TCP_QUEUE_OOSEQ needs to be enabled"
 168:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 169:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && LWIP_TCP_SACK_OUT && (LWIP_TCP_MAX_SACK_NUM < 1))
 170:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "LWIP_TCP_MAX_SACK_NUM must be greater than 0"
 171:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 172:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_NETIF_API && (NO_SYS==1))
 173:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use NETIF API, you have to define NO_SYS=0 in your lwipopts.h"
 174:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 175:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if ((LWIP_SOCKET || LWIP_NETCONN) && (NO_SYS==1))
 176:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use Sequential API, you have to define NO_SYS=0 in your lwipopts.h"
 177:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 178:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_PPP_API && (NO_SYS==1))
 179:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use PPP API, you have to define NO_SYS=0 in your lwipopts.h"
 180:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 181:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_PPP_API && (PPP_SUPPORT==0))
 182:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use PPP API, you have to enable PPP_SUPPORT in your lwipopts.h"
 183:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 184:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (((!LWIP_DHCP) || (!LWIP_AUTOIP)) && LWIP_DHCP_AUTOIP_COOP)
 185:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use DHCP/AUTOIP cooperation mode, you have to define LWIP_DHCP=1 and LWIP_AU
 186:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 187:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (((!LWIP_DHCP) || (!LWIP_ARP)) && DHCP_DOES_ARP_CHECK)
 188:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use DHCP ARP checking, you have to define LWIP_DHCP=1 and LWIP_ARP=1 in your
 189:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 190:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (!LWIP_ARP && LWIP_AUTOIP)
 191:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "If you want to use AUTOIP, you have to define LWIP_ARP=1 in your lwipopts.h"
 192:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 193:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && ((LWIP_EVENT_API && LWIP_CALLBACK_API) || (!LWIP_EVENT_API && !LWIP_CALLBACK_API))
 194:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "One and exactly one of LWIP_EVENT_API and LWIP_CALLBACK_API has to be enabled in your lwipo
 195:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 196:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_ALTCP && LWIP_EVENT_API)
 197:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "The application layered tcp API does not work with LWIP_EVENT_API"
 198:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 199:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (MEM_LIBC_MALLOC && MEM_USE_POOLS)
 200:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "MEM_LIBC_MALLOC and MEM_USE_POOLS may not both be simultaneously enabled in your lwipopts.h
 201:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 202:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (MEM_USE_POOLS && !MEMP_USE_CUSTOM_POOLS)
 203:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "MEM_USE_POOLS requires custom pools (MEMP_USE_CUSTOM_POOLS) to be enabled in your lwipopts.
 204:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 205:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (PBUF_POOL_BUFSIZE <= MEM_ALIGNMENT)
 206:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "PBUF_POOL_BUFSIZE must be greater than MEM_ALIGNMENT or the offset may take the full first 
 207:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 208:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (DNS_LOCAL_HOSTLIST && !DNS_LOCAL_HOSTLIST_IS_DYNAMIC && !(defined(DNS_LOCAL_HOSTLIST_INIT)))
 209:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "you have to define define DNS_LOCAL_HOSTLIST_INIT {{'host1', 0x123}, {'host2', 0x234}} to i
 210:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 211:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if PPP_SUPPORT && !PPPOS_SUPPORT && !PPPOE_SUPPORT && !PPPOL2TP_SUPPORT
 212:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "PPP_SUPPORT needs at least one of PPPOS_SUPPORT, PPPOE_SUPPORT or PPPOL2TP_SUPPORT turned o
 213:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 214:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if PPP_SUPPORT && !PPP_IPV4_SUPPORT && !PPP_IPV6_SUPPORT
 215:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "PPP_SUPPORT needs PPP_IPV4_SUPPORT and/or PPP_IPV6_SUPPORT turned on"
 216:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 217:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if PPP_SUPPORT && PPP_IPV4_SUPPORT && !LWIP_IPV4
 218:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "PPP_IPV4_SUPPORT needs LWIP_IPV4 turned on"
 219:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 220:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if PPP_SUPPORT && PPP_IPV6_SUPPORT && !LWIP_IPV6
 221:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "PPP_IPV6_SUPPORT needs LWIP_IPV6 turned on"
 222:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 223:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if !LWIP_ETHERNET && (LWIP_ARP || PPPOE_SUPPORT)
 224:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "LWIP_ETHERNET needs to be turned on for LWIP_ARP or PPPOE_SUPPORT"
 225:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 226:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_TCPIP_CORE_LOCKING_INPUT && !LWIP_TCPIP_CORE_LOCKING
 227:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "When using LWIP_TCPIP_CORE_LOCKING_INPUT, LWIP_TCPIP_CORE_LOCKING must be enabled, too"
 228:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 229:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_TCP && LWIP_NETIF_TX_SINGLE_PBUF && !TCP_OVERSIZE
 230:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "LWIP_NETIF_TX_SINGLE_PBUF needs TCP_OVERSIZE enabled to create single-pbuf TCP packets"
 231:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 232:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_NETCONN && LWIP_TCP
 233:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if NETCONN_COPY != TCP_WRITE_FLAG_COPY
 234:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "NETCONN_COPY != TCP_WRITE_FLAG_COPY"
 235:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 236:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if NETCONN_MORE != TCP_WRITE_FLAG_MORE
 237:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "NETCONN_MORE != TCP_WRITE_FLAG_MORE"
 238:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 239:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_NETCONN && LWIP_TCP */
 240:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_SOCKET
 241:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_SOCKET */
 242:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
 243:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
 244:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** /* Compile-time checks for deprecated options.
 245:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  */
 246:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifdef MEMP_NUM_TCPIP_MSG
 247:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "MEMP_NUM_TCPIP_MSG option is deprecated. Remove it from your lwipopts.h."
 248:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 249:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifdef TCP_REXMIT_DEBUG
 250:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "TCP_REXMIT_DEBUG option is deprecated. Remove it from your lwipopts.h."
 251:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 252:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifdef RAW_STATS
 253:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "RAW_STATS option is deprecated. Remove it from your lwipopts.h."
 254:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 255:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifdef ETHARP_QUEUE_FIRST
 256:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "ETHARP_QUEUE_FIRST option is deprecated. Remove it from your lwipopts.h."
 257:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 258:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifdef ETHARP_ALWAYS_INSERT
 259:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "ETHARP_ALWAYS_INSERT option is deprecated. Remove it from your lwipopts.h."
 260:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 261:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if !NO_SYS && LWIP_TCPIP_CORE_LOCKING && LWIP_COMPAT_MUTEX && !defined(LWIP_COMPAT_MUTEX_ALLOWED)
 262:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "LWIP_COMPAT_MUTEX cannot prevent priority inversion. It is recommended to implement priorit
 263:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 264:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
 265:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifndef LWIP_DISABLE_TCP_SANITY_CHECKS
 266:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #define LWIP_DISABLE_TCP_SANITY_CHECKS  0
 267:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 268:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifndef LWIP_DISABLE_MEMP_SANITY_CHECKS
 269:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #define LWIP_DISABLE_MEMP_SANITY_CHECKS 0
 270:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 271:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
 272:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** /* MEMP sanity checks */
 273:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if MEMP_MEM_MALLOC
 274:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if !LWIP_DISABLE_MEMP_SANITY_CHECKS
 275:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_NETCONN || LWIP_SOCKET
 276:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if !MEMP_NUM_NETCONN && LWIP_SOCKET
 277:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "lwip_sanity_check: WARNING: MEMP_NUM_NETCONN cannot be 0 when using sockets!"
 278:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 279:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #else /* MEMP_MEM_MALLOC */
 280:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if MEMP_NUM_NETCONN > (MEMP_NUM_TCP_PCB+MEMP_NUM_TCP_PCB_LISTEN+MEMP_NUM_UDP_PCB+MEMP_NUM_RAW_PCB)
 281:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "lwip_sanity_check: WARNING: MEMP_NUM_NETCONN should be less than the sum of MEMP_NUM_{TCP,R
 282:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 283:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_NETCONN || LWIP_SOCKET */
 284:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* !LWIP_DISABLE_MEMP_SANITY_CHECKS */
 285:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if MEM_USE_POOLS
 286:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "MEMP_MEM_MALLOC and MEM_USE_POOLS cannot be enabled at the same time"
 287:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 288:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifdef LWIP_HOOK_MEMP_AVAILABLE
 289:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "LWIP_HOOK_MEMP_AVAILABLE doesn't make sense with MEMP_MEM_MALLOC"
 290:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 291:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* MEMP_MEM_MALLOC */
 292:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
 293:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** /* TCP sanity checks */
 294:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if !LWIP_DISABLE_TCP_SANITY_CHECKS
 295:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_TCP
 296:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if !MEMP_MEM_MALLOC && (MEMP_NUM_TCP_SEG < TCP_SND_QUEUELEN)
 297:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "lwip_sanity_check: WARNING: MEMP_NUM_TCP_SEG should be at least as big as TCP_SND_QUEUELEN.
 298:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 299:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if TCP_SND_BUF < (2 * TCP_MSS)
 300:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "lwip_sanity_check: WARNING: TCP_SND_BUF must be at least as much as (2 * TCP_MSS) for thing
 301:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 302:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if TCP_SND_QUEUELEN < (2 * (TCP_SND_BUF / TCP_MSS))
 303:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "lwip_sanity_check: WARNING: TCP_SND_QUEUELEN must be at least as much as (2 * TCP_SND_BUF/T
 304:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 305:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if TCP_SNDLOWAT >= TCP_SND_BUF
 306:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "lwip_sanity_check: WARNING: TCP_SNDLOWAT must be less than TCP_SND_BUF. If you know what yo
 307:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 308:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if TCP_SNDLOWAT >= (0xFFFF - (4 * TCP_MSS))
 309:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "lwip_sanity_check: WARNING: TCP_SNDLOWAT must at least be 4*MSS below u16_t overflow!"
 310:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 311:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if TCP_SNDQUEUELOWAT >= TCP_SND_QUEUELEN
 312:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "lwip_sanity_check: WARNING: TCP_SNDQUEUELOWAT must be less than TCP_SND_QUEUELEN. If you kn
 313:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 314:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if !MEMP_MEM_MALLOC && PBUF_POOL_SIZE && (PBUF_POOL_BUFSIZE <= (PBUF_LINK_ENCAPSULATION_HLEN + PBU
 315:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "lwip_sanity_check: WARNING: PBUF_POOL_BUFSIZE does not provide enough space for protocol he
 316:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 317:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if !MEMP_MEM_MALLOC && PBUF_POOL_SIZE && (TCP_WND > (PBUF_POOL_SIZE * (PBUF_POOL_BUFSIZE - (PBUF_L
 318:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "lwip_sanity_check: WARNING: TCP_WND is larger than space provided by PBUF_POOL_SIZE * (PBUF
 319:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 320:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if TCP_WND < TCP_MSS
 321:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "lwip_sanity_check: WARNING: TCP_WND is smaller than MSS. If you know what you are doing, de
 322:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 323:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_TCP */
 324:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* !LWIP_DISABLE_TCP_SANITY_CHECKS */
 325:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
 326:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** /**
 327:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * @ingroup lwip_nosys
 328:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * Initialize all modules.
 329:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * Use this in NO_SYS mode. Use tcpip_init() otherwise.
 330:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  */
 331:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** void
 332:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** lwip_init(void)
 333:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** {
  28              	 .loc 1 333 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 82B0     	 sub sp,sp,#8
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
 334:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifndef LWIP_SKIP_CONST_CHECK
 335:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   int a = 0;
  43              	 .loc 1 335 0
  44 0006 0023     	 movs r3,#0
  45 0008 7B60     	 str r3,[r7,#4]
 336:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   LWIP_UNUSED_ARG(a);
 337:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   LWIP_ASSERT("LWIP_CONST_CAST not implemented correctly. Check your lwIP port.", LWIP_CONST_CAST(v
 338:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 339:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifndef LWIP_SKIP_PACKING_CHECK
 340:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   LWIP_ASSERT("Struct packing not implemented correctly. Check your lwIP port.", sizeof(struct pack
 341:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 342:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
 343:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   /* Modules initialization */
 344:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   stats_init();
 345:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if !NO_SYS
 346:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   sys_init();
 347:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* !NO_SYS */
 348:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   mem_init();
  46              	 .loc 1 348 0
  47 000a FFF7FEFF 	 bl mem_init
 349:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   memp_init();
  48              	 .loc 1 349 0
  49 000e FFF7FEFF 	 bl memp_init
 350:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   pbuf_init();
 351:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   netif_init();
  50              	 .loc 1 351 0
  51 0012 FFF7FEFF 	 bl netif_init
 352:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_IPV4
 353:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   ip_init();
 354:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_ARP
 355:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   etharp_init();
 356:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_ARP */
 357:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_IPV4 */
 358:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_RAW
 359:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   raw_init();
 360:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_RAW */
 361:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_UDP
 362:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   udp_init();
 363:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_UDP */
 364:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_TCP
 365:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   tcp_init();
  52              	 .loc 1 365 0
  53 0016 FFF7FEFF 	 bl tcp_init
 366:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_TCP */
 367:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_IGMP
 368:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   igmp_init();
 369:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_IGMP */
 370:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_DNS
 371:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   dns_init();
 372:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_DNS */
 373:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if PPP_SUPPORT
 374:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   ppp_init();
 375:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 376:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
 377:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_TIMERS
 378:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   sys_timeouts_init();
  54              	 .loc 1 378 0
  55 001a FFF7FEFF 	 bl sys_timeouts_init
 379:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_TIMERS */
 380:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** }
  56              	 .loc 1 380 0
  57 001e 0837     	 adds r7,r7,#8
  58              	.LCFI3:
  59              	 .cfi_def_cfa_offset 8
  60 0020 BD46     	 mov sp,r7
  61              	.LCFI4:
  62              	 .cfi_def_cfa_register 13
  63              	 
  64 0022 80BD     	 pop {r7,pc}
  65              	 .cfi_endproc
  66              	.LFE133:
  68              	 .text
  69              	.Letext0:
  70              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
  71              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
  72              	 .file 4 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/ScpiRelax/Libraries/CMSIS/Include/cmsis_gcc.h"
  73              	 .file 5 "C:/Infineon/Tools/DAVE IDE/4.5.0.202105191637/eclipse/workspace/ScpiRelax/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 init.c
    {standard input}:20     .text.lwip_init:00000000 $t
    {standard input}:25     .text.lwip_init:00000000 lwip_init
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
mem_init
memp_init
netif_init
tcp_init
sys_timeouts_init
